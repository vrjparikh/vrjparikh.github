



<!DOCTYPE html>
<html lang="en" class=" is-copy-enabled is-u2f-enabled">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-2bdc213eab044d6ffed07b82d4bbc13165d911fb38f4aa0d76593c6876697e7b.css" integrity="sha256-K9whPqsETW/+0HuC1LvBMWXZEfs49KoNdlk8aHZpfns=" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-6223f39917bcc72721e864fd28dec74afb19a4d5f43c3703b845c2894cbaf5af.css" integrity="sha256-YiPzmRe8xych6GT9KN7HSvsZpNX0PDcDuEXCiUy69a8=" media="all" rel="stylesheet" />
    
    
    
    

    <link as="script" href="https://assets-cdn.github.com/assets/frameworks-88471af1fec40ff9418efbe2ddd15b6896af8d772f8179004c254dffc25ea490.js" rel="preload" />
    
    <link as="script" href="https://assets-cdn.github.com/assets/github-0eec4699f78c32e23c38462de8cce320d3ee33089d810a58f81e65b6f6fc7efe.js" rel="preload" />

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=device-width">
    
    <title>sam17.github.io/highmaps.js at master Â· sam17/sam17.github.io</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="https://avatars2.githubusercontent.com/u/1422630?v=3&amp;s=400" name="twitter:image:src" /><meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="sam17/sam17.github.io" name="twitter:title" /><meta content="sam17.github.io - Personal Website of Soumyadeep Mukherjee" name="twitter:description" />
      <meta content="https://avatars2.githubusercontent.com/u/1422630?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="sam17/sam17.github.io" property="og:title" /><meta content="https://github.com/sam17/sam17.github.io" property="og:url" /><meta content="sam17.github.io - Personal Website of Soumyadeep Mukherjee" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="web-socket" href="wss://live.github.com/_sockets/ODk0ODQ2MzplY2M2MzNkZjM4NDEyZTFlODU1ZTM0OWE5MDE0MThkYjo5ZTYzNGYwYWFiNWU5MmJjOGNhMWNiMzM1NTY5NDk5ZmE5ODZmYmQ5MjQ3NmZlYmU4NDNhMjM3M2RkYWQ4ODQz--8b4d26cece6d4e75d7030e5270908c770d04596c">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">
    <meta name="request-id" content="CB6EF217:19C6D:2430594:57E02C1A" data-pjax-transient>

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="CB6EF217:19C6D:2430594:57E02C1A" name="octolytics-dimension-request_id" /><meta content="8948463" name="octolytics-actor-id" /><meta content="vrjparikh" name="octolytics-actor-login" /><meta content="34db7b30eaa16d7e105a55e448a8a643353622e5f1fc6bfdcf1207c625a0894f" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged In">



        <meta name="hostname" content="github.com">
    <meta name="user-login" content="vrjparikh">

        <meta name="expected-hostname" content="github.com">
      <meta name="js-proxy-site-detection-payload" content="MjFlYmQ5NTgyOTA0MDgyOWFjODFhMDI1NDAwZjdhNzdmYjRiMWVkM2IxOTQ1M2NmZjgzNDBhNzlhM2JjY2M3M3x7InJlbW90ZV9hZGRyZXNzIjoiMjAzLjExMC4yNDIuMjMiLCJyZXF1ZXN0X2lkIjoiQ0I2RUYyMTc6MTlDNkQ6MjQzMDU5NDo1N0UwMkMxQSIsInRpbWVzdGFtcCI6MTQ3NDMwOTE1M30=">


      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#4078c0">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta name="html-safe-nonce" content="6accbdd9d0d1f3c1c55cfb827b97c030fc1153bd">
    <meta content="b1ff978b667732ae13c42113e9b4b75a8678bb15" name="form-nonce" />

    <meta http-equiv="x-pjax-version" content="9b9bc82fbbc85cbb9b2f714852d67e00">
    

      
  <meta name="description" content="sam17.github.io - Personal Website of Soumyadeep Mukherjee">
  <meta name="go-import" content="github.com/sam17/sam17.github.io git https://github.com/sam17/sam17.github.io.git">

  <meta content="1422630" name="octolytics-dimension-user_id" /><meta content="sam17" name="octolytics-dimension-user_login" /><meta content="28915736" name="octolytics-dimension-repository_id" /><meta content="sam17/sam17.github.io" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="28915736" name="octolytics-dimension-repository_network_root_id" /><meta content="sam17/sam17.github.io" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/sam17/sam17.github.io/commits/master.atom" rel="alternate" title="Recent Commits to sam17.github.io:master" type="application/atom+xml">


      <link rel="canonical" href="https://github.com/sam17/sam17.github.io/blob/master/travel/js/lib/highcharts/highmaps.js" data-pjax-transient>
  </head>


  <body class="logged-in  env-production linux vis-public page-blob">
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="28" version="1.1" viewBox="0 0 16 16" width="28"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/sam17/sam17.github.io/search" class="js-site-search-form" data-scoped-search-url="/sam17/sam17.github.io/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    
    <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s js-socket-channel js-notification-indicator" data-channel="tenant:1:notification-changed:8948463" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
        <span class="mail-status unread"></span>
        <svg aria-hidden="true" class="octicon octicon-bell" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"></path></svg>
</a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create newâ¦"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"></path></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>


  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="sam17/sam17.github.io">This repository</span>
  </div>
    <a class="dropdown-item" href="/sam17/sam17.github.io/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/vrjparikh"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@vrjparikh" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/8948463?v=3&amp;s=40" width="20" />
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">vrjparikh</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/vrjparikh" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
          <a class="dropdown-item" href="/vrjparikh?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
            Your stars
          </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
          <a class="dropdown-item" href="/integrations" data-ga-click="Header, go to integrations, text:integrations">
            Integrations
          </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>


        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/logout" class="logout-form" data-form-nonce="b1ff978b667732ae13c42113e9b4b75a8678bb15" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="/TxuBy3HyLldy1JprJ4BgIv0c2hWUCfUqBC3DJZyVvJdckOgpWg4FrTA1wJTYqUflr1qflD3kswVyqihfbYaRg==" /></div>
          <button class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    
  </div>
</div>


      


    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      
<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-form-nonce="b1ff978b667732ae13c42113e9b4b75a8678bb15" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="VrlZIis06PKTIgr/2nvjvkdHnsO/CtpmwTP/0jIHjsAD+dw4oDzsU/+MqaGlZplfqyrvxbtwWo3zJEZjV97kMg==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="28915736" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/sam17/sam17.github.io/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
              <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
              Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/sam17/sam17.github.io/watchers"
            aria-label="1 user is watching this repository">
            1
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
                      Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"></path></svg>
                      Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/sam17/sam17.github.io/unstar" class="starred" data-form-nonce="b1ff978b667732ae13c42113e9b4b75a8678bb15" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="nEMZ09a+xHinNQEVYPdfnZ4mcwfsUQfdziZL1Ez47OKVwsJb5mmjU5iBpmjLyvU6m5Zdz9+C39+w8b2cUlmL4A==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar sam17/sam17.github.io"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/sam17/sam17.github.io/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>
    <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/sam17/sam17.github.io/star" class="unstarred" data-form-nonce="b1ff978b667732ae13c42113e9b4b75a8678bb15" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="m8SkJaOocNOB8xAxyn9Wt34JPJSJ8aZlZDoRmow3OwDGrmOqEjaPa7cjueWLEOzm5YLsH1E825QefK9eFeZ03A==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star sam17/sam17.github.io"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/sam17/sam17.github.io/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>  </div>

  </li>

  <li>
          <a href="#fork-destination-box" class="btn btn-sm btn-with-count"
              title="Fork your own copy of sam17/sam17.github.io to your account"
              aria-label="Fork your own copy of sam17/sam17.github.io to your account"
              rel="facebox"
              data-ga-click="Repository, show fork modal, action:blob#show; text:Fork">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
            Fork
          </a>

          <div id="fork-destination-box" style="display: none;">
            <h2 class="facebox-header" data-facebox-id="facebox-header">Where should we fork this repository?</h2>
            <include-fragment src=""
                class="js-fork-select-fragment fork-select-fragment"
                data-url="/sam17/sam17.github.io/fork?fragment=1">
              <img alt="Loading" height="64" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif" width="64" />
            </include-fragment>
          </div>

    <a href="/sam17/sam17.github.io/network" class="social-count"
       aria-label="1 user is forked this repository">
      1
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg>
  <span class="author" itemprop="author"><a href="/sam17" class="url fn" rel="author">sam17</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/sam17/sam17.github.io" data-pjax="#js-repo-pjax-container">sam17.github.io</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/sam17/sam17.github.io" aria-selected="true" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /sam17/sam17.github.io" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"></path></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/sam17/sam17.github.io/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /sam17/sam17.github.io/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">7</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/sam17/sam17.github.io/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /sam17/sam17.github.io/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

  <a href="/sam17/sam17.github.io/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /sam17/sam17.github.io/projects">
    <svg class="octicon" aria-hidden="true" version="1.1" width="15" height="16" viewBox="0 0 15 16">
      <path d="M1 15h13V1H1v14zM15 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1zm-4.41 11h1.82c.59 0 .59-.41.59-1V3c0-.59 0-1-.59-1h-1.82C10 2 10 2.41 10 3v8c0 .59 0 1 .59 1zm-4-2h1.82C9 10 9 9.59 9 9V3c0-.59 0-1-.59-1H6.59C6 2 6 2.41 6 3v6c0 .59 0 1 .59 1zM2 13V3c0-.59 0-1 .59-1h1.82C5 2 5 2.41 5 3v10c0 .59 0 1-.59 1H2.59C2 14 2 13.59 2 13z"></path>
    </svg>
    Projects
    <span class="counter">0</span>
</a>
    <a href="/sam17/sam17.github.io/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /sam17/sam17.github.io/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"></path></svg>
      Wiki
</a>

  <a href="/sam17/sam17.github.io/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /sam17/sam17.github.io/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"></path></svg>
    Pulse
</a>
  <a href="/sam17/sam17.github.io/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /sam17/sam17.github.io/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"></path></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/sam17/sam17.github.io/blob/a5781b0da20b9e347f27ea25b481604556a77d5b/travel/js/lib/highcharts/highmaps.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:65e2be6ee218539bd08ee0adacbd9827 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/sam17/sam17.github.io/blob/anniversary/travel/js/lib/highcharts/highmaps.js"
               data-name="anniversary"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                anniversary
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/sam17/sam17.github.io/blob/master/travel/js/lib/highcharts/highmaps.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="/sam17/sam17.github.io/find/master"
          class="js-pjax-capture-input btn btn-sm BtnGroup-item"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/sam17/sam17.github.io"><span>sam17.github.io</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/sam17/sam17.github.io/tree/master/travel"><span>travel</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/sam17/sam17.github.io/tree/master/travel/js"><span>js</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/sam17/sam17.github.io/tree/master/travel/js/lib"><span>lib</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/sam17/sam17.github.io/tree/master/travel/js/lib/highcharts"><span>highcharts</span></a></span><span class="separator">/</span><strong class="final-path">highmaps.js</strong>
  </div>
</div>

<include-fragment class="commit-tease" src="/sam17/sam17.github.io/contributors/master/travel/js/lib/highcharts/highmaps.js">
  <div>
    Fetching contributors&hellip;
  </div>

  <div class="commit-tease-contributors">
    <img alt="" class="loader-loading float-left" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" />
    <span class="loader-error">Cannot retrieve contributors at this time</span>
  </div>
</include-fragment>
<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/sam17/sam17.github.io/raw/master/travel/js/lib/highcharts/highmaps.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/sam17/sam17.github.io/blame/master/travel/js/lib/highcharts/highmaps.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item">Blame</a>
      <a href="/sam17/sam17.github.io/commits/master/travel/js/lib/highcharts/highmaps.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>


        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/sam17/sam17.github.io/edit/master/travel/js/lib/highcharts/highmaps.js" class="inline-form js-update-url-with-hash" data-form-nonce="b1ff978b667732ae13c42113e9b4b75a8678bb15" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="jMtAE2LniB40hqKWZHZwSLWKo5v6xa1P9v0ieDBicbxGHtm9x1WwTfLookaUcR8omz4yml3NMGK1DuCfZr5/0w==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Edit the file in your fork of this project" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"></path></svg>
          </button>
</form>        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/sam17/sam17.github.io/delete/master/travel/js/lib/highcharts/highmaps.js" class="inline-form" data-form-nonce="b1ff978b667732ae13c42113e9b4b75a8678bb15" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="BEya6ZzC9GOe+VNugAQ93WZm42O8ZGIF7R0hpARewmLS9UwEx8u1As4mYMfsLclkRSdazAXhFSMF2QToJhjFjg==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Delete the file in your fork of this project" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"></path></svg>
          </button>
</form>  </div>

  <div class="file-info">
      368 lines (365 sloc)
      <span class="file-info-divider"></span>
    179 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Highmaps JS v4.2.2 (2016-02-04)</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> (c) 2011-2016 Torstein Honsi</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> License: www.highcharts.com/license</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">z</span>,<span class="pl-c1">S</span>){<span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">?</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-smi">document</span><span class="pl-k">?</span><span class="pl-en">S</span>(z)<span class="pl-k">:</span><span class="pl-c1">S</span><span class="pl-k">:</span><span class="pl-smi">z</span>.<span class="pl-smi">Highcharts</span><span class="pl-k">=</span><span class="pl-en">S</span>(z)})(<span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">window</span><span class="pl-k">:</span><span class="pl-v">this</span>,<span class="pl-k">function</span>(<span class="pl-smi">z</span>){<span class="pl-k">function</span> <span class="pl-en">S</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Highcharts error #<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>: www.highcharts.com/errors/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a;<span class="pl-k">if</span>(b)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(c);<span class="pl-smi">z</span>.<span class="pl-smi">console</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">log</span>(c)}function lb(a,b,c){this.options=b;this.elem=a;this.prop=c}function y(){var a,b=arguments,c,d={},e=function(a,b){var c,d;typeof a!==&quot;object&quot;&amp;&amp;(a={});for(d in b)b.hasOwnProperty(d)&amp;&amp;(c=b[d],a[d]=c&amp;&amp;typeof c===&quot;object&quot;&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toString</span>.<span class="pl-c1">call</span>(c)<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>renderTo<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">c</span>.<span class="pl-c1">nodeType</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">e</span>(a[d]<span class="pl-k">||</span>{},c)<span class="pl-k">:</span>b[d]);<span class="pl-k">return</span> a};b[<span class="pl-c1">0</span>]<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>b[<span class="pl-c1">1</span>],b<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(b,<span class="pl-c1">2</span>));c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-en">e</span>(d,b[a]);<span class="pl-k">return</span> d}function E(a,b){return parseInt(a,b||10)}function ta(a){return typeof a===&quot;string&quot;}function aa(a){return a&amp;&amp;typeof a===&quot;object&quot;}function Fa(a){return Object.prototype.toString.call(a)===&quot;[object Array]&quot;}function na(a){return typeof a===&quot;number&quot;}function Ta(a){return H.log(a)/</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-c1">LN10</span>}function oa(a){return H.pow(10,a)}function ua(a,b){for(var c=a.length;c--;)if(a[c]===b){a.splice(c,1);break}}function s(a){return a!==x&amp;&amp;a!==null}function J(a,b,c){var d,e;if(ta(b))s(c)?a.setAttribute(b,c):a&amp;&amp;a.getAttribute&amp;&amp;(e=a.getAttribute(b));else if(s(b)&amp;&amp;aa(b))for(d in b)a.setAttribute(d,b[d]);return e}function qa(a){return Fa(a)?a:[a]}function Na(a,b,c){if(b)return setTimeout(a,b,c);a.call(0,c)}function L(a,b){if(va&amp;&amp;!da&amp;&amp;b&amp;&amp;b.opacity!==x)b.filter=&quot;alpha(opacity=&quot;+b.opacity*100+&quot;)&quot;;</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>,b)}function ba(a,b,c,d,e){a=C.createElement(a);b&amp;&amp;q(a,b);e&amp;&amp;L(a,{padding:0,border:&quot;none&quot;,margin:0});c&amp;&amp;L(a,c);d&amp;&amp;d.appendChild(a);return a}function $(a,b){var c=function(){};c.prototype=new a;q(c.prototype,b);return c}function Ga(a,b){return Array((b||2)+1-String(a).length).join(0)+a}function Ba(a,b){for(var c=&quot;{&quot;,d=!1,e,f,g,h,i,k=[];(c=a.indexOf(c))!==-1;){e=a.slice(0,c);if(d){f=e.split(&quot;:&quot;);g=f.shift().split(&quot;.&quot;);i=g.length;e=b;for(h=0;h&lt;i;h++)e=e[g[h]];if(f.length)f=f.join(&quot;:&quot;),g=/\.([0-9])/,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">lang</span>,i<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-sr"><span class="pl-pds">/</span>f<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(f)<span class="pl-k">?</span>(i<span class="pl-k">=</span>(i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">match</span>(g))<span class="pl-k">?</span>i[<span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(e,i,<span class="pl-smi">h</span>.<span class="pl-smi">decimalPoint</span>,<span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-smi">thousandsSep</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)))<span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-en">Oa</span>(f,e)}<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(e);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>);c<span class="pl-k">=</span>(d<span class="pl-k">=</span><span class="pl-k">!</span>d)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>}<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}function ub(a,b,c,d,e){var f,g=a,c=o(c,1);f=a/c;b||(b=[1,2,2.5,5,10],d===!1&amp;&amp;(c===1?b=[1,2,5,10]:c&lt;=0.1&amp;&amp;(b=[1/c])));for(d=0;d&lt;b.length;d++)if(g=b[d],e&amp;&amp;g*c&gt;=a||!e&amp;&amp;f&lt;=(b[d]+(b[d+1]||b[d]))/2)break;g*=c;return g}function db(a,b){var c=a.length,d,e;for(e=0;e&lt;c;e++)a[e].safeI=e;a.sort(function(a,</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line">c){d<span class="pl-k">=</span><span class="pl-en">b</span>(a,c);<span class="pl-k">return</span> d<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">safeI</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">safeI</span><span class="pl-k">:</span>d});<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-k">delete</span> a[e].<span class="pl-smi">safeI</span>}function Ua(a){for(var b=a.length,c=a[0];b--;)a[b]&lt;c&amp;&amp;(c=a[b]);return c}function Ha(a){for(var b=a.length,c=a[0];b--;)a[b]&gt;c&amp;&amp;(c=a[b]);return c}function eb(a,b){for(var c in a)a[c]&amp;&amp;a[c]!==b&amp;&amp;a[c].destroy&amp;&amp;a[c].destroy(),delete a[c]}function Pa(a){fb||(fb=ba(Ia));a&amp;&amp;fb.appendChild(a);fb.innerHTML=&quot;&quot;}function wa(a,b){return parseFloat(a.toPrecision(b||14))}function Va(a,b){b.renderer.globalAnimation=o(a,b.animation)}function vb(){var a=</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">K</span>.<span class="pl-smi">global</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">useUTC</span>,c<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>getUTC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>setUTC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span>;xa<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">Date</span><span class="pl-k">||</span><span class="pl-smi">z</span>.<span class="pl-smi">Date</span>;wb<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">timezoneOffset</span>;mb<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">getTimezoneOffset</span>;xb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Minutes<span class="pl-pds">&quot;</span></span>;yb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Hours<span class="pl-pds">&quot;</span></span>;zb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Day<span class="pl-pds">&quot;</span></span>;Ab<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Date<span class="pl-pds">&quot;</span></span>;nb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>;ob<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>;Bb<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>;Cb<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>}function N(a){if(!(this instanceof N))return new N(a);this.init(a)}function O(){}function Qa(a,b,c,d){this.axis=a;this.pos=b;this.type=c||&quot;&quot;;this.isNew=!0;!c&amp;&amp;!d&amp;&amp;this.addLabel()}function Db(a,b){var c,d,e,f,g=!1,h=a.x,i=a.y;for(c=0,d=b.length-1;c&lt;b.length;d=c++)e=b[c][1]&gt;</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line">i,f<span class="pl-k">=</span>b[d][<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>i,e<span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>(b[d][<span class="pl-c1">0</span>]<span class="pl-k">-</span>b[c][<span class="pl-c1">0</span>])<span class="pl-k">*</span>(i<span class="pl-k">-</span>b[c][<span class="pl-c1">1</span>])<span class="pl-k">/</span>(b[d][<span class="pl-c1">1</span>]<span class="pl-k">-</span>b[c][<span class="pl-c1">1</span>])<span class="pl-k">+</span>b[c][<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">!</span>g);<span class="pl-k">return</span> g}function Eb(a,b,c,d,e,f,g,h){return[&quot;M&quot;,a+e,b,&quot;L&quot;,a+c-f,b,&quot;C&quot;,a+c-f/2,b,a+c,b+f/2,a+c,b+f,&quot;L&quot;,a+c,b+d-g,&quot;C&quot;,a+c,b+d-g/2,a+c-g/2,b+d,a+c-g,b+d,&quot;L&quot;,a+h,b+d,&quot;C&quot;,a+h/2,b+d,a,b+d-h/2,a,b+d-h,&quot;L&quot;,a,b+e,&quot;C&quot;,a,b+e/2,a+e/2,b,a+e,b,&quot;Z&quot;]}var x,C=z.document,H=Math,B=H.round,ea=H.floor,ra=H.ceil,t=H.max,I=H.min,Q=H.abs,ha=H.cos,pa=H.sin,pb=H.PI,ia=pb*2/360,ya=z.navigator&amp;&amp;z.navigator.userAgent||&quot;&quot;,Fb=z.opera,va=/(msie|trident|edge)/i.test(ya)&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span>Fb,gb<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-smi">documentMode</span><span class="pl-k">===</span><span class="pl-c1">8</span>,hb<span class="pl-k">=</span><span class="pl-k">!</span>va<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(ya),Ja<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>Firefox<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(ya),Gb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(Mobile<span class="pl-k">|</span>Android<span class="pl-k">|</span>Windows Phone)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(ya),Ca<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>,da<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-smi">createElementNS</span><span class="pl-k">&amp;&amp;!!</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Ca,<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">createSVGRect</span>,Mb<span class="pl-k">=</span>Ja<span class="pl-k">&amp;&amp;</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">ya</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Firefox/<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">&lt;</span><span class="pl-c1">4</span>,ja<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;!</span>da<span class="pl-k">&amp;&amp;!</span>va<span class="pl-k">&amp;&amp;!!</span><span class="pl-c1">C</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">getContext</span>,Ra,Wa,Hb<span class="pl-k">=</span>{},qb<span class="pl-k">=</span><span class="pl-c1">0</span>,fb,<span class="pl-c1">K</span>,Oa,ib,<span class="pl-en">T</span><span class="pl-k">=</span><span class="pl-k">function</span>(){},<span class="pl-c1">U</span><span class="pl-k">=</span>[],Xa<span class="pl-k">=</span><span class="pl-c1">0</span>,Ia<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>,Nb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,jb<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>plotTop<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>marginRight<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>marginBottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>plotLeft<span class="pl-pds">&quot;</span></span>],xa,wb,mb,xb,yb,zb,Ab,nb,ob,Bb,Cb,<span class="pl-c1">D</span><span class="pl-k">=</span>{},v;v<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">z</span>.<span class="pl-smi">Highcharts</span><span class="pl-k">?</span><span class="pl-en">S</span>(<span class="pl-c1">16</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>{win<span class="pl-k">:</span>z};<span class="pl-smi">v</span>.<span class="pl-smi">seriesTypes</span><span class="pl-k">=</span><span class="pl-c1">D</span>;<span class="pl-k">var</span> Da<span class="pl-k">=</span>[],la,za,n,Ka,rb,Ea,<span class="pl-c1">M</span>,<span class="pl-c1">W</span>,<span class="pl-c1">G</span>,Sa,La;<span class="pl-smi">lb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">dSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">paths</span>[<span class="pl-c1">0</span>],b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">paths</span>[<span class="pl-c1">1</span>],c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">now</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,f;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-c1">1</span>)c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">toD</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">for</span>(;e<span class="pl-k">--</span>;)f<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(a[e]),c[e]<span class="pl-k">=</span><span class="pl-c1">isNaN</span>(f)<span class="pl-k">?</span>a[e]<span class="pl-k">:</span>d<span class="pl-k">*</span><span class="pl-c1">parseFloat</span>(b[e]<span class="pl-k">-</span>f)<span class="pl-k">+</span>f;<span class="pl-k">else</span> c<span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">elem</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,c)},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">elem</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">prop</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">now</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">step</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Setter<span class="pl-pds">&quot;</span></span>])<span class="pl-v">this</span>[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Setter<span class="pl-pds">&quot;</span></span>]();<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(b,c)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>[b]<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">unit</span>;</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">call</span>(a,c,<span class="pl-v">this</span>)},<span class="pl-en">run</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">stopped</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">step</span>(a)},f;<span class="pl-v">this</span>.<span class="pl-smi">startTime</span><span class="pl-k">=</span><span class="pl-k">+</span><span class="pl-k">new</span> <span class="pl-en">xa</span>;<span class="pl-v">this</span>.<span class="pl-c1">start</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">end</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">unit</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">now</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">start</span>;<span class="pl-v">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">e</span>.<span class="pl-smi">elem</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">elem</span>;<span class="pl-k">if</span>(<span class="pl-en">e</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">Da</span>.<span class="pl-c1">push</span>(e)<span class="pl-k">===</span><span class="pl-c1">1</span>)<span class="pl-smi">e</span>.<span class="pl-smi">timerId</span><span class="pl-k">=</span><span class="pl-c1">setInterval</span>(<span class="pl-k">function</span>(){<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">Da</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)Da[f]()<span class="pl-k">||</span><span class="pl-smi">Da</span>.<span class="pl-c1">splice</span>(f<span class="pl-k">--</span>,<span class="pl-c1">1</span>);<span class="pl-smi">Da</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">clearInterval</span>(<span class="pl-smi">e</span>.<span class="pl-smi">timerId</span>)},<span class="pl-c1">13</span>)},<span class="pl-en">step</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">+</span><span class="pl-k">new</span> <span class="pl-en">xa</span>,c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>;c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">elem</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">complete</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">duration</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">curAnim</span>,h;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">attr</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">element</span>)c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span>f<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">startTime</span>){<span class="pl-v">this</span>.<span class="pl-smi">now</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">end</span>;<span class="pl-v">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-en">update</span>();a<span class="pl-k">=</span>g[<span class="pl-v">this</span>.<span class="pl-smi">prop</span>]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h <span class="pl-k">in</span> g)g[h]<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);a<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">call</span>(c);c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">easing</span>((b<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">startTime</span>)<span class="pl-k">/</span>f),<span class="pl-v">this</span>.<span class="pl-smi">now</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">start</span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-smi">end</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">start</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>,<span class="pl-v">this</span>.<span class="pl-en">update</span>(),c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> c},<span class="pl-en">initPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shift</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-c1">3</span>,g,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isArea</span>,i<span class="pl-k">=</span>h<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">--</span>;)(a[g]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a[g]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(g<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,a[g<span class="pl-k">+</span><span class="pl-c1">1</span>],a[g<span class="pl-k">+</span><span class="pl-c1">2</span>],a[g<span class="pl-k">+</span><span class="pl-c1">1</span>],a[g<span class="pl-k">+</span><span class="pl-c1">2</span>])};e<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">k</span>(b),<span class="pl-en">k</span>(c));<span class="pl-k">if</span>(d<span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(;d<span class="pl-k">--</span>;)c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,f).<span class="pl-c1">concat</span>(c),h<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>f)));<span class="pl-smi">a</span>.<span class="pl-smi">shift</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>a;)d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>().<span class="pl-c1">splice</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>i<span class="pl-k">-</span>f,f<span class="pl-k">*</span>i),e<span class="pl-k">&amp;&amp;</span>(d[f<span class="pl-k">-</span><span class="pl-c1">6</span>]<span class="pl-k">=</span>d[f<span class="pl-k">-</span><span class="pl-c1">2</span>],d[f<span class="pl-k">-</span><span class="pl-c1">5</span>]<span class="pl-k">=</span>d[f<span class="pl-k">-</span><span class="pl-c1">1</span>]),[].<span class="pl-smi">splice</span>.<span class="pl-c1">apply</span>(b,[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>i,<span class="pl-c1">0</span>].<span class="pl-c1">concat</span>(d));<span class="pl-k">return</span>[b,c]}};<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">extend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">for</span>(c <span class="pl-k">in</span> b)a[c]<span class="pl-k">=</span>b[c];<span class="pl-k">return</span> a},o<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">pick</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">arguments</span>,b,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>d;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(c<span class="pl-k">=</span>a[b],c<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> c},fa<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">wrap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b];a[b]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-v">arguments</span>);<span class="pl-smi">a</span>.<span class="pl-c1">unshift</span>(d);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,a)}};<span class="pl-en">Oa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">s</span>(b)<span class="pl-k">||</span><span class="pl-c1">isNaN</span>(b))<span class="pl-k">return</span> <span class="pl-c1">K</span>.<span class="pl-c1">lang</span>.<span class="pl-smi">invalidDate</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">o</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>%Y-%m-%d %H:%M:%S<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">xa</span>(b<span class="pl-k">-</span>(mb<span class="pl-k">&amp;&amp;</span><span class="pl-en">mb</span>(b)<span class="pl-k">||</span>wb<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-c1">6E4</span>),e,f<span class="pl-k">=</span>d[yb](),g<span class="pl-k">=</span>d[zb](),h<span class="pl-k">=</span>d[Ab](),i<span class="pl-k">=</span>d[nb](),k<span class="pl-k">=</span>d[ob](),j<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">lang</span>,l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">weekdays</span>,d<span class="pl-k">=</span><span class="pl-en">q</span>({a<span class="pl-k">:</span>l[g].<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">3</span>),A<span class="pl-k">:</span>l[g],d<span class="pl-k">:</span><span class="pl-en">Ga</span>(h),e<span class="pl-k">:</span>h,w<span class="pl-k">:</span>g,b<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">shortMonths</span>[i],B<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">months</span>[i],m<span class="pl-k">:</span><span class="pl-en">Ga</span>(i<span class="pl-k">+</span><span class="pl-c1">1</span>),y<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">substr</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>),Y<span class="pl-k">:</span>k,H<span class="pl-k">:</span><span class="pl-en">Ga</span>(f),k<span class="pl-k">:</span>f,I<span class="pl-k">:</span><span class="pl-en">Ga</span>(f<span class="pl-k">%</span><span class="pl-c1">12</span><span class="pl-k">||</span><span class="pl-c1">12</span>),l<span class="pl-k">:</span>f<span class="pl-k">%</span><span class="pl-c1">12</span><span class="pl-k">||</span><span class="pl-c1">12</span>,M<span class="pl-k">:</span><span class="pl-en">Ga</span>(d[xb]()),p<span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>AM<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>PM<span class="pl-pds">&quot;</span></span>,P<span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>am<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>pm<span class="pl-pds">&quot;</span></span>,S<span class="pl-k">:</span><span class="pl-en">Ga</span>(<span class="pl-smi">d</span>.<span class="pl-c1">getSeconds</span>()),L<span class="pl-k">:</span><span class="pl-en">Ga</span>(<span class="pl-en">B</span>(b<span class="pl-k">%</span><span class="pl-c1">1E3</span>),<span class="pl-c1">3</span>)},<span class="pl-smi">v</span>.<span class="pl-smi">dateFormats</span>);<span class="pl-k">for</span>(e <span class="pl-k">in</span> d)<span class="pl-k">for</span>(;<span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>;)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e,<span class="pl-k">typeof</span> d[e]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>d[e](b)<span class="pl-k">:</span>d[e]);<span class="pl-k">return</span> c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>).<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span>a};ib<span class="pl-k">=</span>{millisecond<span class="pl-k">:</span><span class="pl-c1">1</span>,second<span class="pl-k">:</span><span class="pl-c1">1E3</span>,minute<span class="pl-k">:</span><span class="pl-c1">6E4</span>,hour<span class="pl-k">:</span><span class="pl-c1">36E5</span>,day<span class="pl-k">:</span><span class="pl-c1">864E5</span>,week<span class="pl-k">:</span><span class="pl-c1">6048E5</span>,month<span class="pl-k">:</span><span class="pl-c1">24192E5</span>,year<span class="pl-k">:</span><span class="pl-c1">314496E5</span>};<span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">+</span>a<span class="pl-k">||</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">lang</span>,f<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>,g,h,i<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a);b<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(f,<span class="pl-c1">20</span>)<span class="pl-k">:</span><span class="pl-c1">isNaN</span>(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>);g<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-en">E</span>(<span class="pl-smi">i</span>.<span class="pl-en">toFixed</span>(b)));h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">3</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">0</span>;c<span class="pl-k">=</span><span class="pl-en">o</span>(c,<span class="pl-smi">e</span>.<span class="pl-smi">decimalPoint</span>);d<span class="pl-k">=</span><span class="pl-en">o</span>(d,<span class="pl-smi">e</span>.<span class="pl-smi">thousandsSep</span>);a<span class="pl-k">=</span>a<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;a<span class="pl-k">+=</span>h<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,h)<span class="pl-k">+</span>d<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;a<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">substr</span>(h).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">\d</span><span class="pl-k">{3}</span>)(?=<span class="pl-c1">\d</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$1<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d);<span class="pl-k">+</span>b<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(i<span class="pl-k">-</span>g<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>,<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,f)<span class="pl-k">-</span><span class="pl-c1">1</span>)),a<span class="pl-k">+=</span>c<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-en">toFixed</span>(b).<span class="pl-c1">slice</span>(<span class="pl-c1">2</span>));<span class="pl-k">return</span> a};<span class="pl-c1">Math</span>.<span class="pl-en">easeInOutSine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">0.5</span><span class="pl-k">*</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span>a)<span class="pl-k">-</span><span class="pl-c1">1</span>)};<span class="pl-en">la</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span>,<span class="pl-smi">a</span>.<span class="pl-smi">scrollWidth</span>)<span class="pl-k">-</span><span class="pl-en">la</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>padding-left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">-</span><span class="pl-en">la</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>padding-right<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetHeight</span>,<span class="pl-smi">a</span>.<span class="pl-smi">scrollHeight</span>)<span class="pl-k">-</span><span class="pl-en">la</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>padding-top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-en">la</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>padding-bottom<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>(c<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-en">getComputedStyle</span>(a,<span class="pl-k">void</span> <span class="pl-c1">0</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-en">E</span>(<span class="pl-smi">c</span>.<span class="pl-en">getPropertyValue</span>(b))};<span class="pl-en">za</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">indexOf</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">:</span>[].<span class="pl-smi">indexOf</span>.<span class="pl-c1">call</span>(b,a)};<span class="pl-en">Ka</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[].<span class="pl-smi">filter</span>.<span class="pl-c1">call</span>(a,b)};<span class="pl-en">Ea</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(a[d],a[d],d,a);<span class="pl-k">return</span> c};<span class="pl-en">rb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">documentElement</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getBoundingClientRect</span>();<span class="pl-k">return</span>{top<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">top</span><span class="pl-k">+</span>(<span class="pl-smi">z</span>.<span class="pl-c1">pageYOffset</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">scrollTop</span>)<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-smi">clientTop</span><span class="pl-k">||</span><span class="pl-c1">0</span>),left<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">left</span><span class="pl-k">+</span>(<span class="pl-smi">z</span>.<span class="pl-c1">pageXOffset</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">scrollLeft</span>)<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-smi">clientLeft</span><span class="pl-k">||</span><span class="pl-c1">0</span>)}};<span class="pl-en">La</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Da</span>.<span class="pl-c1">length</span>;b<span class="pl-k">--</span>;)<span class="pl-k">if</span>(Da[b].<span class="pl-smi">elem</span><span class="pl-k">===</span>a)Da[b].<span class="pl-smi">stopped</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">forEach</span>.<span class="pl-c1">call</span>(a,b)};<span class="pl-en">M</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">srcElement</span><span class="pl-k">||</span>z;<span class="pl-smi">c</span>.<span class="pl-c1">call</span>(a,b)}<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hcEvents</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hcEvents</span><span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">addEventListener</span>)<span class="pl-smi">a</span>.<span class="pl-c1">addEventListener</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">attachEvent</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">hcEventsIE</span>)<span class="pl-smi">a</span>.<span class="pl-smi">hcEventsIE</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">hcEventsIE</span>[<span class="pl-smi">c</span>.<span class="pl-c1">toString</span>()]<span class="pl-k">=</span>d;<span class="pl-smi">a</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,d)}e[b]<span class="pl-k">||</span>(e[b]<span class="pl-k">=</span>[]);e[b].<span class="pl-c1">push</span>(c)};<span class="pl-en">W</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-smi">removeEventListener</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">removeEventListener</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">attachEvent</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">hcEventsIE</span>[<span class="pl-smi">c</span>.<span class="pl-c1">toString</span>()],<span class="pl-smi">a</span>.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,c))}function e(){var c,e,f;if(a.nodeName)for(f in b?(c={},c[b]=!0):c=g,c)if(g[f])for(e=g[f].length;e--;)d(f,g[f][e])}var f,g=a.hcEvents,h;if(g)b?(f=g[b]||[],c?(h=za(c,f),h&gt;-1&amp;&amp;(f.splice(h,1),g[b]=f),d(b,c)):(e(),g[b]=[])):(e(),a.hcEvents={})};G=function(a,b,c,d){var e;e=a.hcEvents;var f,g,h,i,c=c||{};if(C.createEvent&amp;&amp;(a.dispatchEvent||a.fireEvent))e=C.createEvent(&quot;Events&quot;),e.initEvent(b,!0,!0),e.target=a,q(e,c),a.dispatchEvent?a.dispatchEvent(e):a.fireEvent(b,</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">e);<span class="pl-k">else</span> <span class="pl-k">if</span>(e){e<span class="pl-k">=</span>e[b]<span class="pl-k">||</span>[];f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-smi">defaultPrevented</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>f;g<span class="pl-k">++</span>){i<span class="pl-k">=</span>e[g];<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">stopped</span>)<span class="pl-k">return</span>;<span class="pl-smi">c</span>.<span class="pl-smi">preventDefault</span><span class="pl-k">=</span>h;<span class="pl-smi">c</span>.<span class="pl-c1">target</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span>)<span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">=</span>b;<span class="pl-smi">i</span>.<span class="pl-c1">call</span>(a,c)<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">preventDefault</span>()}}d<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">defaultPrevented</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(c)};<span class="pl-en">Sa</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f,g,h;<span class="pl-en">aa</span>(c)<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-v">arguments</span>,c<span class="pl-k">=</span>{duration<span class="pl-k">:</span>d[<span class="pl-c1">2</span>],easing<span class="pl-k">:</span>d[<span class="pl-c1">3</span>],complete<span class="pl-k">:</span>d[<span class="pl-c1">4</span>]});<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">na</span>(<span class="pl-smi">c</span>.<span class="pl-smi">duration</span>))<span class="pl-smi">c</span>.<span class="pl-smi">duration</span><span class="pl-k">=</span><span class="pl-c1">400</span>;<span class="pl-smi">c</span>.<span class="pl-smi">easing</span><span class="pl-k">=</span><span class="pl-c1">Math</span>[<span class="pl-smi">c</span>.<span class="pl-smi">easing</span>]<span class="pl-k">||</span><span class="pl-c1">Math</span>.<span class="pl-smi">easeInOutSine</span>;<span class="pl-smi">c</span>.<span class="pl-smi">curAnim</span><span class="pl-k">=</span><span class="pl-en">y</span>(b);<span class="pl-k">for</span>(h <span class="pl-k">in</span> b)g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">lb</span>(a,c,h),f<span class="pl-k">=</span><span class="pl-c1">null</span>,h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">g</span>.<span class="pl-smi">paths</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">initPath</span>(a,<span class="pl-smi">a</span>.<span class="pl-smi">d</span>,<span class="pl-smi">b</span>.<span class="pl-smi">d</span>),</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">toD</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">d</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span>d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(h)<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(<span class="pl-en">la</span>(a,h))<span class="pl-k">||</span><span class="pl-c1">0</span>,h<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>)),f<span class="pl-k">||</span>(f<span class="pl-k">=</span>b[h]),<span class="pl-smi">f</span>.<span class="pl-smi">match</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>px<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">g</span>.<span class="pl-en">run</span>(d,f,e)};<span class="pl-k">if</span>(<span class="pl-smi">z</span>.<span class="pl-smi">jQuery</span>)<span class="pl-smi">z</span>.<span class="pl-smi">jQuery</span>.<span class="pl-smi">fn</span>.<span class="pl-en">highcharts</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[].<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-v">arguments</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>[<span class="pl-c1">0</span>])<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">?</span>(<span class="pl-k">new</span> (v[<span class="pl-en">ta</span>(a[<span class="pl-c1">0</span>])<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">shift</span>()<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Chart<span class="pl-pds">&quot;</span></span>])(<span class="pl-v">this</span>[<span class="pl-c1">0</span>],a[<span class="pl-c1">0</span>],a[<span class="pl-c1">1</span>]),<span class="pl-v">this</span>)<span class="pl-k">:</span><span class="pl-c1">U</span>[<span class="pl-en">J</span>(<span class="pl-v">this</span>[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>)]};<span class="pl-c1">C</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">C</span>.<span class="pl-c1">defaultView</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">la</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;c<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clientWidth<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clientHeight<span class="pl-pds">&quot;</span></span>}[b];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>[b])<span class="pl-k">return</span> <span class="pl-en">E</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>[b]);b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-c1">1</span>,a[c]<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-en">la</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>padding<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">currentStyle</span>[<span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\-</span>(<span class="pl-c1">\w</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">toUpperCase</span>()})];b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>alpha<span class="pl-cce">\(</span>opacity=(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> b<span class="pl-k">/</span><span class="pl-c1">100</span>}));<span class="pl-k">return</span> c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">E</span>(c)});<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">forEach</span><span class="pl-k">||</span>(<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(a[c],a[c],c,a)<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> c});<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">indexOf</span><span class="pl-k">||</span>(<span class="pl-en">za</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(b)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[d]<span class="pl-k">===</span>a)<span class="pl-k">return</span> d;<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>});<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">filter</span><span class="pl-k">||</span>(Ka<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)<span class="pl-en">b</span>(a[d],d)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a[d]);<span class="pl-k">return</span> c});<span class="pl-smi">v</span>.<span class="pl-smi">Fx</span><span class="pl-k">=</span>lb;<span class="pl-smi">v</span>.<span class="pl-smi">inArray</span><span class="pl-k">=</span>za;<span class="pl-smi">v</span>.<span class="pl-smi">each</span><span class="pl-k">=</span>n;<span class="pl-smi">v</span>.<span class="pl-smi">grep</span><span class="pl-k">=</span>Ka;<span class="pl-smi">v</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span>rb;<span class="pl-smi">v</span>.<span class="pl-smi">map</span><span class="pl-k">=</span>Ea;<span class="pl-smi">v</span>.<span class="pl-smi">addEvent</span><span class="pl-k">=</span><span class="pl-c1">M</span>;<span class="pl-smi">v</span>.<span class="pl-smi">removeEvent</span><span class="pl-k">=</span><span class="pl-c1">W</span>;<span class="pl-smi">v</span>.<span class="pl-smi">fireEvent</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-smi">v</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span>Sa;<span class="pl-smi">v</span>.<span class="pl-smi">stop</span><span class="pl-k">=</span>La;<span class="pl-c1">K</span><span class="pl-k">=</span>{colors<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#7cb5ec,#434348,#90ed7d,#f7a35c,#8085e9,#f15c80,#e4d354,#2b908f,#f45b5b,#91e8e1<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),symbols<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>diamond<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>triangle<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>triangle-down<span class="pl-pds">&quot;</span></span>],lang<span class="pl-k">:</span>{loading<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Loading...<span class="pl-pds">&quot;</span></span>,months<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>January,February,March,April,May,June,July,August,September,October,November,December<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">shortMonths<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),weekdays<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),decimalPoint<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,numericSymbols<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>k,M,G,T,P,E<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),resetZoom<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Reset zoom<span class="pl-pds">&quot;</span></span>,resetZoomTitle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Reset zoom level 1:1<span class="pl-pds">&quot;</span></span>,thousandsSep<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>},global<span class="pl-k">:</span>{useUTC<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,canvasToolsURL<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://code.highcharts.com/modules/canvas-tools.js<span class="pl-pds">&quot;</span></span>,VMLRadialGradientURL<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://code.highcharts.com/maps/4.2.2/gfx/vml-radial-gradient.png<span class="pl-pds">&quot;</span></span>},chart<span class="pl-k">:</span>{borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#4572A7<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">defaultSeriesType<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,ignoreHiddenSeries<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,spacing<span class="pl-k">:</span>[<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">10</span>],backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,plotBorderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,resetZoomButton<span class="pl-k">:</span>{theme<span class="pl-k">:</span>{zIndex<span class="pl-k">:</span><span class="pl-c1">20</span>},position<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">10</span>,y<span class="pl-k">:</span><span class="pl-c1">10</span>}}},title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Chart title<span class="pl-pds">&quot;</span></span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,margin<span class="pl-k">:</span><span class="pl-c1">15</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>18px<span class="pl-pds">&quot;</span></span>}},subtitle<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#555555<span class="pl-pds">&quot;</span></span>}},plotOptions<span class="pl-k">:</span>{line<span class="pl-k">:</span>{allowPointSelect<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showCheckbox<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,animation<span class="pl-k">:</span>{duration<span class="pl-k">:</span><span class="pl-c1">1E3</span>},events<span class="pl-k">:</span>{},lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>,marker<span class="pl-k">:</span>{lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,radius<span class="pl-k">:</span><span class="pl-c1">4</span>,lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">lineWidthPlus<span class="pl-k">:</span><span class="pl-c1">1</span>,radiusPlus<span class="pl-k">:</span><span class="pl-c1">2</span>},select<span class="pl-k">:</span>{fillColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>}}},point<span class="pl-k">:</span>{events<span class="pl-k">:</span>{}},dataLabels<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(<span class="pl-v">this</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)},style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>contrast<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,textShadow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>0 0 6px contrast, 0 0 3px contrast<span class="pl-pds">&quot;</span></span>},verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,padding<span class="pl-k">:</span><span class="pl-c1">5</span>},cropThreshold<span class="pl-k">:</span><span class="pl-c1">300</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">0</span>,softThreshold<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{lineWidthPlus<span class="pl-k">:</span><span class="pl-c1">1</span>,marker<span class="pl-k">:</span>{},halo<span class="pl-k">:</span>{size<span class="pl-k">:</span><span class="pl-c1">10</span>,opacity<span class="pl-k">:</span><span class="pl-c1">0.25</span>}},select<span class="pl-k">:</span>{marker<span class="pl-k">:</span>{}}},stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">turboThreshold<span class="pl-k">:</span><span class="pl-c1">1E3</span>}},labels<span class="pl-k">:</span>{style<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#3E576F<span class="pl-pds">&quot;</span></span>}},legend<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,layout<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span>,<span class="pl-en">labelFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">name</span>},borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#909090<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,navigation<span class="pl-k">:</span>{activeColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#274b6d<span class="pl-pds">&quot;</span></span>,inactiveColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>},shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,itemStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>},itemHoverStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000<span class="pl-pds">&quot;</span></span>},itemHiddenStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>},itemCheckboxStyle<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>13px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>13px<span class="pl-pds">&quot;</span></span>},symbolPadding<span class="pl-k">:</span><span class="pl-c1">5</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{style<span class="pl-k">:</span>{fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>}}},loading<span class="pl-k">:</span>{labelStyle<span class="pl-k">:</span>{fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>45%<span class="pl-pds">&quot;</span></span>},style<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>,opacity<span class="pl-k">:</span><span class="pl-c1">0.5</span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>}},tooltip<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,animation<span class="pl-k">:</span>da,backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(249, 249, 249, .85)<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">3</span>,dateTimeLabelFormats<span class="pl-k">:</span>{millisecond<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,second<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S<span class="pl-pds">&quot;</span></span>,minute<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,hour<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,day<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,week<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Week from %A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,month<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%B %Y<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">year<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>},footerFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,headerFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-size: 10px&quot;&gt;{point.key}&lt;/span&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;color:{point.color}&quot;&gt;<span class="pl-cce">\u25cf</span>&lt;/span&gt; {series.name}: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,snap<span class="pl-k">:</span>Gb<span class="pl-k">?</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">10</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>,padding<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>8px<span class="pl-pds">&quot;</span></span>,pointerEvents<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>}},credits<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Highcharts.com<span class="pl-pds">&quot;</span></span>,href<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.highcharts.com<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">10</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>},style<span class="pl-k">:</span>{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#909090<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>9px<span class="pl-pds">&quot;</span></span>}}};<span class="pl-k">var</span> <span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-smi">plotOptions</span>,Ya<span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-smi">line</span>;<span class="pl-en">vb</span>();<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{parsers<span class="pl-k">:</span>[{regex<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>rgba<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">?</span>(?:<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-en">E</span>(a[<span class="pl-c1">1</span>]),<span class="pl-en">E</span>(a[<span class="pl-c1">2</span>]),<span class="pl-en">E</span>(a[<span class="pl-c1">3</span>]),<span class="pl-c1">parseFloat</span>(a[<span class="pl-c1">4</span>],<span class="pl-c1">10</span>)]}},{regex<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>#(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)<span class="pl-pds">/</span></span>,<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-en">E</span>(a[<span class="pl-c1">1</span>],<span class="pl-c1">16</span>),<span class="pl-en">E</span>(a[<span class="pl-c1">2</span>],<span class="pl-c1">16</span>),<span class="pl-en">E</span>(a[<span class="pl-c1">3</span>],<span class="pl-c1">16</span>),<span class="pl-c1">1</span>]}},{regex<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>rgb<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-en">E</span>(a[<span class="pl-c1">1</span>]),<span class="pl-en">E</span>(a[<span class="pl-c1">2</span>]),<span class="pl-en">E</span>(a[<span class="pl-c1">3</span>]),<span class="pl-c1">1</span>]}}],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">c,d,e;<span class="pl-k">if</span>((<span class="pl-v">this</span>.<span class="pl-c1">input</span><span class="pl-k">=</span>a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>)<span class="pl-v">this</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span><span class="pl-en">Ea</span>(<span class="pl-smi">a</span>.<span class="pl-smi">stops</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">N</span>(a[<span class="pl-c1">1</span>])});<span class="pl-k">else</span> <span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">parsers</span>.<span class="pl-c1">length</span>;d<span class="pl-k">--</span><span class="pl-k">&amp;&amp;!</span>c;)e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">parsers</span>[d],(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">regex</span>.<span class="pl-c1">exec</span>(a))<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(b));<span class="pl-v">this</span>.<span class="pl-smi">rgba</span><span class="pl-k">=</span>c<span class="pl-k">||</span>[]},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">input</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rgba</span>,d;<span class="pl-v">this</span>.<span class="pl-smi">stops</span><span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-en">y</span>(b),<span class="pl-smi">d</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">d</span>.<span class="pl-smi">stops</span>),<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">stops</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-smi">stops</span>[c]<span class="pl-k">=</span>[<span class="pl-smi">d</span>.<span class="pl-smi">stops</span>[c][<span class="pl-c1">0</span>],<span class="pl-smi">b</span>.<span class="pl-c1">get</span>(a)]}))<span class="pl-k">:</span>d<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(c[<span class="pl-c1">0</span>])<span class="pl-k">?</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span><span class="pl-k">||!</span>a<span class="pl-k">&amp;&amp;</span>c[<span class="pl-c1">3</span>]<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c[<span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b;<span class="pl-k">return</span> d},<span class="pl-en">brighten</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rgba</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">stops</span>)<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">stops</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">brighten</span>(a)});<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">na</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-c1">0</span>)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">3</span>;b<span class="pl-k">++</span>)c[b]<span class="pl-k">+=</span><span class="pl-en">E</span>(a<span class="pl-k">*</span><span class="pl-c1">255</span>),c[b]<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span><span class="pl-c1">0</span>),c[b]<span class="pl-k">&gt;</span><span class="pl-c1">255</span><span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span><span class="pl-c1">255</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">setOpacity</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">rgba</span>[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-v">this</span>}};<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{opacity<span class="pl-k">:</span><span class="pl-c1">1</span>,textProps<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>direction,fontSize,fontWeight,fontFamily,fontStyle,color,lineHeight,width,textDecoration,textOverflow,textShadow<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">element</span><span class="pl-k">=</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">ba</span>(b)<span class="pl-k">:</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Ca,b);<span class="pl-v">this</span>.<span class="pl-smi">renderer</span><span class="pl-k">=</span>a},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">=</span><span class="pl-en">o</span>(b,</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">globalAnimation</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">La</span>(<span class="pl-v">this</span>);<span class="pl-k">if</span>(b){b<span class="pl-k">=</span><span class="pl-en">y</span>(b,{});<span class="pl-k">if</span>(c)<span class="pl-smi">b</span>.<span class="pl-c1">complete</span><span class="pl-k">=</span>c;<span class="pl-en">Sa</span>(<span class="pl-v">this</span>,a,b)}<span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-en">attr</span>(a,<span class="pl-c1">null</span>,c);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">colorGradient</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,e,f,g,h,i,k,j,l,m,p,u,r<span class="pl-k">=</span>[],o;<span class="pl-smi">a</span>.<span class="pl-smi">linearGradient</span><span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>linearGradient<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">radialGradient</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>radialGradient<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(f){g<span class="pl-k">=</span>a[f];i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">gradients</span>;j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>;p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">radialReference</span>;<span class="pl-en">Fa</span>(g)<span class="pl-k">&amp;&amp;</span>(a[f]<span class="pl-k">=</span>g<span class="pl-k">=</span>{x1<span class="pl-k">:</span>g[<span class="pl-c1">0</span>],y1<span class="pl-k">:</span>g[<span class="pl-c1">1</span>],x2<span class="pl-k">:</span>g[<span class="pl-c1">2</span>],y2<span class="pl-k">:</span>g[<span class="pl-c1">3</span>],gradientUnits<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>userSpaceOnUse<span class="pl-pds">&quot;</span></span>});f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>radialGradient<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&amp;&amp;!</span><span class="pl-en">s</span>(<span class="pl-smi">g</span>.<span class="pl-smi">gradientUnits</span>)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>g,g<span class="pl-k">=</span><span class="pl-en">y</span>(g,<span class="pl-smi">d</span>.<span class="pl-en">getRadialAttr</span>(p,h),{gradientUnits<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>userSpaceOnUse<span class="pl-pds">&quot;</span></span>}));</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(u <span class="pl-k">in</span> g)u<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">push</span>(u,g[u]);<span class="pl-k">for</span>(u <span class="pl-k">in</span> j)<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(j[u]);r<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);i[r]<span class="pl-k">?</span>p<span class="pl-k">=</span>i[r].<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(<span class="pl-smi">g</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>qb<span class="pl-k">++</span>,i[r]<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">createElement</span>(f).<span class="pl-en">attr</span>(g).<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">defs</span>),<span class="pl-smi">k</span>.<span class="pl-smi">radAttr</span><span class="pl-k">=</span>h,<span class="pl-smi">k</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span>[],<span class="pl-en">n</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a[<span class="pl-c1">1</span>].<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgba<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-en">N</span>(a[<span class="pl-c1">1</span>]),l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(l<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],m<span class="pl-k">=</span><span class="pl-c1">1</span>);a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stop<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({offset<span class="pl-k">:</span>a[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>stop-color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l,<span class="pl-s"><span class="pl-pds">&quot;</span>stop-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>m}).<span class="pl-c1">add</span>(k);<span class="pl-smi">k</span>.<span class="pl-smi">stops</span>.<span class="pl-c1">push</span>(a)}));o<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">url</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,o);<span class="pl-smi">c</span>.<span class="pl-smi">gradient</span><span class="pl-k">=</span>r;<span class="pl-smi">a</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> o}}},<span class="pl-en">applyTextShadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">element</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contrast<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span>{},f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">forExport</span>,g<span class="pl-k">=</span>f<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-smi">textShadow</span><span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;!</span>va;<span class="pl-k">if</span>(d)<span class="pl-smi">e</span>.<span class="pl-smi">textShadow</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>contrast<span class="pl-pds">/</span>g</span>,<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">getContrast</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-smi">fill</span>));<span class="pl-k">if</span>(hb<span class="pl-k">||</span>f)<span class="pl-smi">e</span>.<span class="pl-smi">textRendering</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>geometricPrecision<span class="pl-pds">&quot;</span></span>;g<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">css</span>(e)<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-smi">fakeTS</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">ySetter</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xSetter</span>,c<span class="pl-k">=</span>[].<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>)),<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">?</span>,<span class="pl-c1">\s</span><span class="pl-k">?</span><span class="pl-pds">/</span>g</span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">firstChild</span>,e,f,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);e<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];(f<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> g;c<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>),c<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>));g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">1</span>);<span class="pl-en">J</span>(g,{<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-text-shadow<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>e,stroke<span class="pl-k">:</span>e,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-en">t</span>(<span class="pl-en">E</span>(f),<span class="pl-c1">3</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">b</span>.<span class="pl-c1">insertBefore</span>(g,d)})}))},<span class="pl-en">attr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,f,g<span class="pl-k">=</span><span class="pl-v">this</span>,h;<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>a,a<span class="pl-k">=</span>{},a[d]<span class="pl-k">=</span>b);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">=</span>(<span class="pl-v">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Getter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultGetter</span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,e);<span class="pl-k">else</span>{<span class="pl-k">for</span>(d <span class="pl-k">in</span> a){b<span class="pl-k">=</span>a[d];h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-smi">symbolName</span><span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(x<span class="pl-k">|</span>y<span class="pl-k">|</span>width<span class="pl-k">|</span>height<span class="pl-k">|</span>r<span class="pl-k">|</span>start<span class="pl-k">|</span>end<span class="pl-k">|</span>innerR<span class="pl-k">|</span>anchorX<span class="pl-k">|</span>anchorY)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">(f<span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-en">symbolAttr</span>(a),f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>))<span class="pl-v">this</span>.<span class="pl-smi">doTransform</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;h<span class="pl-k">||</span>(h<span class="pl-k">=</span><span class="pl-v">this</span>[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Setter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">_defaultSetter</span>,<span class="pl-smi">h</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,b,d,e),<span class="pl-v">this</span>.<span class="pl-smi">shadows</span><span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(width<span class="pl-k">|</span>height<span class="pl-k">|</span>visibility<span class="pl-k">|</span>x<span class="pl-k">|</span>y<span class="pl-k">|</span>d<span class="pl-k">|</span>transform<span class="pl-k">|</span>cx<span class="pl-k">|</span>cy<span class="pl-k">|</span>r)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">updateShadows</span>(d,b,h))}<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">doTransform</span>)<span class="pl-v">this</span>.<span class="pl-en">updateTransform</span>(),<span class="pl-v">this</span>.<span class="pl-smi">doTransform</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}c<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>();<span class="pl-k">return</span> g},<span class="pl-en">updateShadows</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">shadows</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)<span class="pl-smi">c</span>.<span class="pl-c1">call</span>(<span class="pl-c1">null</span>,a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b<span class="pl-k">-</span>(d[e].<span class="pl-smi">cutHeight</span><span class="pl-k">||</span><span class="pl-c1">0</span>),<span class="pl-c1">0</span>)<span class="pl-k">:</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">d</span><span class="pl-k">:</span>b,a,d[e])},<span class="pl-en">addClass</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-en">J</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">symbolAttr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-en">n</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x,y,r,start,end,width,height,innerR,anchorX,anchorY<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){b[c]<span class="pl-k">=</span><span class="pl-en">o</span>(a[c],b[c])});<span class="pl-smi">b</span>.<span class="pl-en">attr</span>({d<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">symbols</span>[<span class="pl-smi">b</span>.<span class="pl-smi">symbolName</span>](<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span>,b)})},<span class="pl-en">clip</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>clip-path<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">url</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">crisp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span>{},d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-en">B</span>(e)<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-en">ea</span>((<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d);<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-en">ea</span>((<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d);<span class="pl-smi">a</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">=</span>e;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-v">this</span>[b]<span class="pl-k">!==</span>a[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[b]<span class="pl-k">=</span>c[b]<span class="pl-k">=</span>a[b]);<span class="pl-k">return</span> c},<span class="pl-en">css</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">styles</span>,c<span class="pl-k">=</span>{},d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,e,f,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;e<span class="pl-k">=</span><span class="pl-k">!</span>b;<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>)<span class="pl-smi">a</span>.<span class="pl-smi">fill</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>;<span class="pl-k">if</span>(b)<span class="pl-k">for</span>(f <span class="pl-k">in</span> a)a[f]<span class="pl-k">!==</span>b[f]<span class="pl-k">&amp;&amp;</span>(c[f]<span class="pl-k">=</span>a[f],e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(e){e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">textWidth</span><span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">E</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>)<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">textWidth</span>;b<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">q</span>(b,c));<span class="pl-v">this</span>.<span class="pl-smi">styles</span><span class="pl-k">=</span>a;e<span class="pl-k">&amp;&amp;</span>(ja<span class="pl-k">||!</span>da<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">forExport</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-k">if</span>(va<span class="pl-k">&amp;&amp;!</span>da)<span class="pl-en">L</span>(<span class="pl-v">this</span>.<span class="pl-smi">element</span>,</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">a);<span class="pl-k">else</span>{<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()};<span class="pl-k">for</span>(f <span class="pl-k">in</span> a)g<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span>)<span class="pl-pds">/</span>g</span>,b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[f]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>;<span class="pl-en">J</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,g)}e<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">added</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">buildText</span>(<span class="pl-v">this</span>)}<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">on</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">element</span>;Wa<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">d</span>.<span class="pl-en">ontouchstart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-smi">touchEventFired</span><span class="pl-k">=</span><span class="pl-smi">xa</span>.<span class="pl-en">now</span>();<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(d,a)},<span class="pl-smi">d</span>.<span class="pl-en">onclick</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-smi">ya</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Android<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-smi">xa</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>(<span class="pl-smi">c</span>.<span class="pl-smi">touchEventFired</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1100</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(d,a)})<span class="pl-k">:</span>d[<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">setRadialReference</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">gradients</span>[<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-smi">gradient</span>];</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-smi">radialReference</span><span class="pl-k">=</span>a;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">radAttr</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">animate</span>(<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">getRadialAttr</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">radAttr</span>));<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">attr</span>({translateX<span class="pl-k">:</span>a,translateY<span class="pl-k">:</span>b})},<span class="pl-en">invert</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">inverted</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-en">updateTransform</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">updateTransform</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">translateY</span><span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">scaleX</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">scaleY</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">inverted</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rotation</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>;e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>));a<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>];e<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rotate(90) scale(-1,1)<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">g</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">g</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);(<span class="pl-en">s</span>(c)<span class="pl-k">||</span><span class="pl-en">s</span>(d))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">o</span>(c,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">o</span>(d,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>))},<span class="pl-en">toFront</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>;<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">appendChild</span>(a);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">align</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e,f,g,h<span class="pl-k">=</span>{};e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">alignedObjects</span>;<span class="pl-k">if</span>(a){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">alignOptions</span><span class="pl-k">=</span>a,<span class="pl-v">this</span>.<span class="pl-smi">alignByTranslate</span><span class="pl-k">=</span>b,<span class="pl-k">!</span>c<span class="pl-k">||</span><span class="pl-en">ta</span>(c))<span class="pl-v">this</span>.<span class="pl-smi">alignTo</span><span class="pl-k">=</span>d<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>renderer<span class="pl-pds">&quot;</span></span>,<span class="pl-en">ua</span>(f,<span class="pl-v">this</span>),<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>),c<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">alignOptions</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">alignByTranslate</span>,</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">alignTo</span>;c<span class="pl-k">=</span><span class="pl-en">o</span>(c,e[d],e);d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">align</span>;e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">verticalAlign</span>;f<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>);g<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>)f<span class="pl-k">+=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>{right<span class="pl-k">:</span><span class="pl-c1">1</span>,center<span class="pl-k">:</span><span class="pl-c1">2</span>}[d];h[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-en">B</span>(f);<span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">+=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>({bottom<span class="pl-k">:</span><span class="pl-c1">1</span>,middle<span class="pl-k">:</span><span class="pl-c1">2</span>}[e]<span class="pl-k">||</span><span class="pl-c1">1</span>);h[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-en">B</span>(g);<span class="pl-v">this</span>[<span class="pl-v">this</span>.<span class="pl-smi">placed</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](h);<span class="pl-v">this</span>.<span class="pl-smi">placed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">alignAttr</span><span class="pl-k">=</span>h;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">getBBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,e,f,g,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">styles</span>;e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">textStr</span>;<span class="pl-k">var</span> k,j<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">style</span>,</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">l,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">cache</span>,p<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">cacheKeys</span>,u;f<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-v">this</span>.<span class="pl-smi">rotation</span>);g<span class="pl-k">=</span>f<span class="pl-k">*</span>ia;e<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">||</span><span class="pl-c1">0</span>,i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">fontSize</span>,<span class="pl-smi">h</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),u<span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">Nb</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>num:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">length</span><span class="pl-k">+</span>u<span class="pl-k">:</span>e<span class="pl-k">+</span>u);u<span class="pl-k">&amp;&amp;!</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>m[u]);<span class="pl-k">if</span>(<span class="pl-k">!</span>c){<span class="pl-k">if</span>(<span class="pl-smi">h</span>.<span class="pl-c1">namespaceURI</span><span class="pl-k">===</span>Ca<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">forExport</span>){<span class="pl-k">try</span>{l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">fakeTS</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">n</span>(<span class="pl-smi">h</span>.<span class="pl-c1">querySelectorAll</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.highcharts-text-shadow<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span><span class="pl-k">=</span>a})},Ja<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">textShadow</span><span class="pl-k">?</span>(k<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">textShadow</span>,<span class="pl-smi">j</span>.<span class="pl-smi">textShadow</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">getBBox</span><span class="pl-k">?</span><span class="pl-en">q</span>({},<span class="pl-smi">h</span>.<span class="pl-en">getBBox</span>())<span class="pl-k">:</span>{width<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">offsetWidth</span>,height<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">offsetHeight</span>},k<span class="pl-k">?</span><span class="pl-smi">j</span>.<span class="pl-smi">textShadow</span><span class="pl-k">=</span>k<span class="pl-k">:</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(r){}<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)c<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>}}<span class="pl-k">else</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">htmlGetBBox</span>();<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">isSVG</span>){d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span>;e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span>;<span class="pl-k">if</span>(va<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">fontSize</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">toPrecision</span>(<span class="pl-c1">3</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>16.9<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-c1">14</span>;<span class="pl-k">if</span>(f)<span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-en">Q</span>(e<span class="pl-k">*</span><span class="pl-en">pa</span>(g))<span class="pl-k">+</span><span class="pl-en">Q</span>(d<span class="pl-k">*</span><span class="pl-en">ha</span>(g)),<span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-en">Q</span>(e<span class="pl-k">*</span><span class="pl-en">ha</span>(g))<span class="pl-k">+</span><span class="pl-en">Q</span>(d<span class="pl-k">*</span><span class="pl-en">pa</span>(g))}<span class="pl-k">if</span>(u){<span class="pl-k">for</span>(;<span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">250</span>;)<span class="pl-k">delete</span> m[<span class="pl-smi">p</span>.<span class="pl-c1">shift</span>()];m[u]<span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-c1">push</span>(u);m[u]<span class="pl-k">=</span>c}}<span class="pl-k">return</span> c},<span class="pl-en">show</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">hide</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">fadeOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-smi">b</span>.<span class="pl-c1">animate</span>({opacity<span class="pl-k">:</span><span class="pl-c1">0</span>},{duration<span class="pl-k">:</span>a<span class="pl-k">||</span><span class="pl-c1">150</span>,</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-en">complete</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">9999</span>})}})},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,d;<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.<span class="pl-smi">parentGroup</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">parentInverted</span><span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>;<span class="pl-v">this</span>.<span class="pl-smi">textStr</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">buildText</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">handleZ</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">zIndex</span>)d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">zIndexSetter</span>();d<span class="pl-k">||</span>(a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">box</span>).<span class="pl-c1">appendChild</span>(c);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">onAdd</span>)<span class="pl-v">this</span>.<span class="pl-en">onAdd</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">safeRemoveChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">removeChild</span>(a)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">||</span>{},c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadows</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isSVG</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">parentGroup</span>,e,f;<span class="pl-smi">b</span>.<span class="pl-smi">onclick</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onmouseout</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onmouseover</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onmousemove</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">La</span>(a);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span>)<span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span>.<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">stops</span>){<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">stops</span>[f]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>[f].<span class="pl-en">destroy</span>();<span class="pl-smi">a</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-smi">a</span>.<span class="pl-en">safeRemoveChild</span>(b);<span class="pl-k">for</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">safeRemoveChild</span>(b)});d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">div</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">div</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>;)b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">parentGroup</span>,<span class="pl-smi">a</span>.<span class="pl-en">safeRemoveChild</span>(<span class="pl-smi">d</span>.<span class="pl-smi">div</span>),<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-smi">div</span>,d<span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">alignTo</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">ua</span>(<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">alignedObjects</span>,a);<span class="pl-k">for</span>(e <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[e];<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">shadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e,f,g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">element</span>,h,i,k,j;<span class="pl-k">if</span>(a){i<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-c1">3</span>);k<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">opacity</span><span class="pl-k">||</span><span class="pl-c1">0.15</span>)<span class="pl-k">/</span>i;j<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">parentInverted</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>(-1,-1)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetX</span>,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetY</span>,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;=</span>i;e<span class="pl-k">++</span>){f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">0</span>);h<span class="pl-k">=</span>i<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e;<span class="pl-en">J</span>(f,{isShadow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>k<span class="pl-k">*</span>e,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h,transform<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>translate<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>});<span class="pl-k">if</span>(c)<span class="pl-en">J</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-en">t</span>(<span class="pl-en">J</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">-</span>h,<span class="pl-c1">0</span>)),<span class="pl-smi">f</span>.<span class="pl-smi">cutHeight</span><span class="pl-k">=</span>h;b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(f)<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(f,g);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(f)}<span class="pl-v">this</span>.<span class="pl-smi">shadows</span><span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">xGetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">nodeName</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>}[a]<span class="pl-k">||</span>a);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">_defaultGetter</span>(a)},<span class="pl-en">_defaultGetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>[a],<span class="pl-v">this</span>.<span class="pl-smi">element</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">getAttribute</span>(a)<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-c1">0</span>);<span class="pl-k">/</span><span class="pl-k">^</span>[\<span class="pl-k">-</span><span class="pl-c1">0</span><span class="pl-k">-</span><span class="pl-c1">9</span>\.]<span class="pl-k">+</span>$<span class="pl-k">/</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(a));<span class="pl-k">return</span> a},<span class="pl-en">dSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">join</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>));<span class="pl-k">/</span>(<span class="pl-c1">NaN</span><span class="pl-k">|</span> {<span class="pl-c1">2</span>}<span class="pl-k">|^</span>$)<span class="pl-k">/</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>M 0 0<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,a);<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">dashstyleSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-k">if</span>(a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>()){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdashdotdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>3,1,1,1,1,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdashdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>3,1,1,1<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>1,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdash<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>3,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>longdash<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>8,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>dot<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>1,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dash<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>4,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>,<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">--</span>;)a[b]<span class="pl-k">=</span><span class="pl-en">E</span>(a[b])<span class="pl-k">*</span><span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>];a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NaN<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-dasharray<span class="pl-pds">&quot;</span></span>,a)}},<span class="pl-en">alignSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,{left<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>,center<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,right<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>}[a])},<span class="pl-en">opacitySetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,a)},<span class="pl-en">titleSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>];b<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">(b<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Ca,<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(b));<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-c1">String</span>(<span class="pl-en">o</span>(a),<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)))},<span class="pl-en">textSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">textStr</span>)<span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">bBox</span>,<span class="pl-v">this</span>.<span class="pl-smi">textStr</span><span class="pl-k">=</span>a,<span class="pl-v">this</span>.<span class="pl-smi">added</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">buildText</span>(<span class="pl-v">this</span>)},<span class="pl-en">fillSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,a)<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">colorGradient</span>(a,b,c)},<span class="pl-en">visibilitySetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">removeAttribute</span>(b)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,a)},<span class="pl-en">zIndexSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">parentGroup</span>,</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span>(d<span class="pl-k">||</span>c).<span class="pl-smi">element</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">box</span>,e,f,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,h;e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">added</span>;<span class="pl-k">var</span> i;<span class="pl-en">s</span>(a)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-c1">setAttribute</span>(b,a),a<span class="pl-k">=</span><span class="pl-k">+</span>a,<span class="pl-v">this</span>[b]<span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a);<span class="pl-k">if</span>(e){<span class="pl-k">if</span>((a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">zIndex</span>)<span class="pl-k">&amp;&amp;</span>d)<span class="pl-smi">d</span>.<span class="pl-smi">handleZ</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">childNodes</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>h;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(e<span class="pl-k">=</span>d[i],f<span class="pl-k">=</span><span class="pl-en">J</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>zIndex<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">E</span>(f)<span class="pl-k">&gt;</span>a<span class="pl-k">||!</span><span class="pl-en">s</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(f)))<span class="pl-smi">c</span>.<span class="pl-c1">insertBefore</span>(g,e),h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;h<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(g)}<span class="pl-k">return</span> h},<span class="pl-en">_defaultSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,a)}};<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">yGetter</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">xGetter</span>;<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translateXSetter</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translateYSetter</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">rotationSetter</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">verticalAlignSetter</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">scaleXSetter</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">scaleYSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">doTransform</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-widthSetter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">strokeSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">stroke</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-v">this</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">=</span><span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fillSetter</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-smi">stroke</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>,c),<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]),<span class="pl-v">this</span>.<span class="pl-smi">hasStroke</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">hasStroke</span>)<span class="pl-smi">c</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-smi">hasStroke</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-k">var</span> <span class="pl-en">ma</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-v">arguments</span>)};<span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-c1">Element</span><span class="pl-k">:</span><span class="pl-c1">O</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({version<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1.1<span class="pl-pds">&quot;</span></span>}).<span class="pl-en">css</span>(<span class="pl-v">this</span>.<span class="pl-en">getStyle</span>(d));g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>;<span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(g);<span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlns<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>xmlns<span class="pl-pds">&quot;</span></span>,Ca);<span class="pl-v">this</span>.<span class="pl-smi">isSVG</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>g;<span class="pl-v">this</span>.<span class="pl-smi">boxWrapper</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-smi">alignedObjects</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">url</span><span class="pl-k">=</span>(Ja<span class="pl-k">||</span>hb)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>base<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">z</span>.<span class="pl-c1">location</span>.<span class="pl-c1">href</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>#<span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\(</span>&#39;<span class="pl-cce">\)</span>]</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$1<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span> <span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%20<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>().<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Created with Highmaps 4.2.2<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">defs</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>defs<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>();<span class="pl-v">this</span>.<span class="pl-smi">allowHTML</span><span class="pl-k">=</span>f;<span class="pl-v">this</span>.<span class="pl-smi">forExport</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">cacheKeys</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">imgCount</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-en">setSize</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> h;<span class="pl-k">if</span>(Ja<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">getBoundingClientRect</span>)<span class="pl-v">this</span>.<span class="pl-smi">subPixelFix</span><span class="pl-k">=</span><span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">L</span>(a,{left<span class="pl-k">:</span><span class="pl-c1">0</span>,top<span class="pl-k">:</span><span class="pl-c1">0</span>});h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getBoundingClientRect</span>();<span class="pl-en">L</span>(a,{left<span class="pl-k">:</span><span class="pl-en">ra</span>(<span class="pl-smi">h</span>.<span class="pl-c1">left</span>)<span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-en">ra</span>(<span class="pl-smi">h</span>.<span class="pl-c1">top</span>)<span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">b</span>(),<span class="pl-en">M</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b)},<span class="pl-en">getStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">style</span><span class="pl-k">=</span><span class="pl-en">q</span>({fontFamily<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif<span class="pl-pds">&#39;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">a)},<span class="pl-en">isHidden</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">boxWrapper</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span>},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">defs</span>;<span class="pl-v">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.<span class="pl-smi">boxWrapper</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">boxWrapper</span>.<span class="pl-en">destroy</span>();<span class="pl-en">eb</span>(<span class="pl-v">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">||</span>{});<span class="pl-v">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.<span class="pl-smi">defs</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">destroy</span>();<span class="pl-v">this</span>.<span class="pl-smi">subPixelFix</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">W</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">subPixelFix</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">alignedObjects</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">createElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">this.Element</span>;<span class="pl-smi">b</span>.<span class="pl-en">init</span>(<span class="pl-v">this</span>,a);<span class="pl-k">return</span> b},<span class="pl-en">draw</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">getRadialAttr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>{cx<span class="pl-k">:</span>a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">cx</span><span class="pl-k">*</span>a[<span class="pl-c1">2</span>],cy<span class="pl-k">:</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">cy</span><span class="pl-k">*</span>a[<span class="pl-c1">2</span>],r<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">r</span><span class="pl-k">*</span>a[<span class="pl-c1">2</span>]}},<span class="pl-en">buildText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">forExport</span>,e<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">textStr</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toString</span>(),f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>,h,i,k<span class="pl-k">=</span><span class="pl-en">J</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">styles</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">textWidth</span>,m<span class="pl-k">=</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-c1">lineHeight</span>,p<span class="pl-k">=</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">textShadow</span>,u<span class="pl-k">=</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">textOverflow</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>ellipsis<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,<span class="pl-c1">F</span><span class="pl-k">=</span>l<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">added</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">box</span>,<span class="pl-en">w</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> m<span class="pl-k">?</span><span class="pl-en">E</span>(m)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-sr"><span class="pl-pds">/</span>(px<span class="pl-k">|</span>em)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span><span class="pl-k">:</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-c1">12</span>,a).<span class="pl-smi">h</span>},<span class="pl-en">A</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;lt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>)};r<span class="pl-k">--</span>;)<span class="pl-smi">b</span>.<span class="pl-c1">removeChild</span>(g[r]);<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;!</span>p<span class="pl-k">&amp;&amp;!</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-en">A</span>(e)))<span class="pl-k">:</span>(h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*</span>style=&quot;(<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-c1">.</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>,i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*</span>href=&quot;(http<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-c1">.</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>,<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">F</span>.<span class="pl-c1">appendChild</span>(b),e<span class="pl-k">=</span>f<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(b<span class="pl-k">|</span>strong)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-weight:bold&quot;&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(i<span class="pl-k">|</span>em)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-style:italic&quot;&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;a<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;span<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>(b<span class="pl-k">|</span>strong<span class="pl-k">|</span>i<span class="pl-k">|</span>em<span class="pl-k">|</span>a)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>)<span class="pl-k">:</span>[e],e[<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">pop</span>(),<span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g,m<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>|||&lt;span<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;|||<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|||<span class="pl-pds">&quot;</span></span>);<span class="pl-en">n</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span>{},r<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Ca,<span class="pl-s"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),n;<span class="pl-smi">h</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">match</span>(h)[<span class="pl-c1">1</span>].<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(;<span class="pl-k">|</span> <span class="pl-k">|</span><span class="pl-k">^</span>)color(<span class="pl-c1">[ :]</span>)<span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$1fill$2<span class="pl-pds">&quot;</span></span>),<span class="pl-en">J</span>(r,<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,n));<span class="pl-smi">i</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">J</span>(r,<span class="pl-s"><span class="pl-pds">&quot;</span>onclick<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>location.href=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">match</span>(i)[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>),<span class="pl-en">L</span>(r,{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}));e<span class="pl-k">=</span><span class="pl-en">A</span>(<span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(<span class="pl-c1">.</span><span class="pl-k">|</span><span class="pl-c1">\n</span>)<span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>){<span class="pl-smi">r</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(e));<span class="pl-k">if</span>(m)<span class="pl-smi">p</span>.<span class="pl-smi">dx</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-smi">p</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>k;<span class="pl-en">J</span>(r,p);<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(r);<span class="pl-k">!</span>m<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>da<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">L</span>(r,{display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>}),<span class="pl-en">J</span>(r,<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,<span class="pl-en">w</span>(r)));<span class="pl-k">if</span>(l){<span class="pl-k">for</span>(<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\^</span>]</span>)-<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$1- <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),o<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">||</span>f<span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-c1">whiteSpace</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">F</span>,<span class="pl-c1">V</span>,s,q<span class="pl-k">=</span>[],t<span class="pl-k">=</span><span class="pl-en">w</span>(r),x<span class="pl-k">=</span><span class="pl-c1">1</span>,v<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rotation</span>,<span class="pl-c1">B</span><span class="pl-k">=</span>e,y<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-c1">length</span>;(o<span class="pl-k">||</span>u)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>);)<span class="pl-smi">a</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBBox</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),s<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-c1">width</span>,<span class="pl-k">!</span>da<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">forExport</span><span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">measureSpanWidth</span>(<span class="pl-smi">r</span>.<span class="pl-c1">firstChild</span>.<span class="pl-c1">data</span>,<span class="pl-smi">a</span>.<span class="pl-smi">styles</span>)),<span class="pl-c1">F</span><span class="pl-k">=</span>s<span class="pl-k">&gt;</span>l,<span class="pl-c1">V</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">F</span>),u<span class="pl-k">&amp;&amp;</span><span class="pl-c1">V</span><span class="pl-k">?</span>(y<span class="pl-k">/=</span><span class="pl-c1">2</span>,<span class="pl-c1">B</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||!</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>y<span class="pl-k">&lt;</span><span class="pl-c1">0.5</span><span class="pl-k">?</span>p<span class="pl-k">=</span>[]<span class="pl-k">:</span>(<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-c1">B</span>.<span class="pl-c1">length</span><span class="pl-k">+</span>(<span class="pl-c1">F</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-en">ra</span>(y)),p<span class="pl-k">=</span>[<span class="pl-c1">B</span><span class="pl-k">+</span>(l<span class="pl-k">&gt;</span><span class="pl-c1">3</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2026</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)],<span class="pl-smi">r</span>.<span class="pl-c1">removeChild</span>(<span class="pl-smi">r</span>.<span class="pl-c1">firstChild</span>)))<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">F</span><span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>(p<span class="pl-k">=</span>q,q<span class="pl-k">=</span>[],<span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">++</span>,r<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Ca,<span class="pl-s"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),<span class="pl-en">J</span>(r,{dy<span class="pl-k">:</span>t,x<span class="pl-k">:</span>k}),n<span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(r,<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,n),<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(r)),</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">s<span class="pl-k">&gt;</span>l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>s))<span class="pl-k">:</span>(<span class="pl-smi">r</span>.<span class="pl-c1">removeChild</span>(<span class="pl-smi">r</span>.<span class="pl-c1">firstChild</span>),<span class="pl-smi">q</span>.<span class="pl-c1">unshift</span>(<span class="pl-smi">p</span>.<span class="pl-c1">pop</span>())),<span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-smi">p</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>- <span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)));<span class="pl-c1">V</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">textStr</span>);<span class="pl-smi">a</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span>v}m<span class="pl-k">++</span>}}})}),<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">F</span>.<span class="pl-c1">removeChild</span>(b),p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">applyTextShadow</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">applyTextShadow</span>(p))},<span class="pl-en">getContrast</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-en">N</span>(a).<span class="pl-smi">rgba</span>;<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>a[<span class="pl-c1">2</span>]<span class="pl-k">&gt;</span><span class="pl-c1">384</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>},<span class="pl-en">button</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>(a,b,c,i,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>button<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-c1">0</span>,l,m,p,u,r,n,a<span class="pl-k">=</span>{x1<span class="pl-k">:</span><span class="pl-c1">0</span>,y1<span class="pl-k">:</span><span class="pl-c1">0</span>,x2<span class="pl-k">:</span><span class="pl-c1">0</span>,y2<span class="pl-k">:</span><span class="pl-c1">1</span>},e<span class="pl-k">=</span><span class="pl-en">y</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCCCCC<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FEFEFE<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#F6F6F6<span class="pl-pds">&quot;</span></span>]]},r<span class="pl-k">:</span><span class="pl-c1">2</span>,padding<span class="pl-k">:</span><span class="pl-c1">5</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>}},e);p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">e</span>.<span class="pl-c1">style</span>;f<span class="pl-k">=</span><span class="pl-en">y</span>(e,{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FFF<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#ACF<span class="pl-pds">&quot;</span></span>]]}},f);u<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">f</span>.<span class="pl-c1">style</span>;g<span class="pl-k">=</span><span class="pl-en">y</span>(e,{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#9BD<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#CDF<span class="pl-pds">&quot;</span></span>]]}},g);r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">g</span>.<span class="pl-c1">style</span>;h<span class="pl-k">=</span><span class="pl-en">y</span>(e,{style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>}},h);n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">h</span>.<span class="pl-c1">style</span>;<span class="pl-en">M</span>(<span class="pl-smi">k</span>.<span class="pl-smi">element</span>,va<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseenter<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){j<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(f).<span class="pl-en">css</span>(u)});<span class="pl-en">M</span>(<span class="pl-smi">k</span>.<span class="pl-smi">element</span>,va<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){j<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>[e,f,g][j],m<span class="pl-k">=</span>[p,u,r][j],<span class="pl-smi">k</span>.<span class="pl-en">attr</span>(l).<span class="pl-en">css</span>(m))});<span class="pl-smi">k</span>.<span class="pl-en">setState</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-smi">k</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>j<span class="pl-k">=</span>a)<span class="pl-k">?</span>a<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(g).<span class="pl-en">css</span>(r)<span class="pl-k">:</span>a<span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(h).<span class="pl-en">css</span>(n)<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(e).<span class="pl-en">css</span>(p)};<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){j<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">call</span>(k,a)}).<span class="pl-en">attr</span>(e).<span class="pl-en">css</span>(<span class="pl-en">q</span>({cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>},p))},<span class="pl-en">crispLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a[<span class="pl-c1">1</span>]<span class="pl-k">===</span>a[<span class="pl-c1">4</span>]<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-en">B</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">-</span>b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>);a[<span class="pl-c1">2</span>]<span class="pl-k">===</span>a[<span class="pl-c1">5</span>]<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-en">B</span>(a[<span class="pl-c1">2</span>])<span class="pl-k">+</span>b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span> a},<span class="pl-en">path</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>};<span class="pl-en">Fa</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">d</span><span class="pl-k">=</span>a<span class="pl-k">:</span><span class="pl-en">aa</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(b,a);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(b)},<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-en">aa</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,r<span class="pl-k">:</span>c};b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-smi">xSetter</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">ySetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,a)};<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">attr</span>(a)},<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-en">aa</span>(a))b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">innerR</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arc<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">||</span><span class="pl-c1">0</span>,b<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,{innerR<span class="pl-k">:</span>d<span class="pl-k">||</span><span class="pl-c1">0</span>,start<span class="pl-k">:</span>e<span class="pl-k">||</span><span class="pl-c1">0</span>,end<span class="pl-k">:</span>f<span class="pl-k">||</span><span class="pl-c1">0</span>});<span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> a},<span class="pl-en">rect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">aa</span>(a)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">:</span>e,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">aa</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">===</span>x<span class="pl-k">?</span>{}<span class="pl-k">:</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,width<span class="pl-k">:</span><span class="pl-en">t</span>(c,<span class="pl-c1">0</span>),height<span class="pl-k">:</span><span class="pl-en">t</span>(d,<span class="pl-c1">0</span>)};<span class="pl-k">if</span>(f<span class="pl-k">!==</span>x)<span class="pl-smi">a</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">=</span>f,a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">crisp</span>(a);<span class="pl-k">if</span>(e)<span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>e;<span class="pl-smi">g</span>.<span class="pl-en">rSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">J</span>(<span class="pl-v">this</span>.<span class="pl-smi">element</span>,</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">{rx<span class="pl-k">:</span>a,ry<span class="pl-k">:</span>a})};<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-en">attr</span>(a)},<span class="pl-en">setSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">alignedObjects</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-smi">boxWrapper</span>[<span class="pl-en">o</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({width<span class="pl-k">:</span>a,height<span class="pl-k">:</span>b});e<span class="pl-k">--</span>;)d[e].<span class="pl-c1">align</span>()},<span class="pl-en">g</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-en">s</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a})<span class="pl-k">:</span>b},<span class="pl-en">image</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>{preserveAspectRatio<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>};<span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(f,{x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e});f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>image<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(f);<span class="pl-smi">f</span>.<span class="pl-smi">element</span>.<span class="pl-smi">setAttributeNS</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttributeNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xlink<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>href<span class="pl-pds">&quot;</span></span>,a)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hc-svg-href<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">return</span> f},<span class="pl-en">symbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>,h,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">symbols</span>[a],i<span class="pl-k">=</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-en">i</span>(<span class="pl-en">B</span>(b),<span class="pl-en">B</span>(c),d,e,f),k<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>url<span class="pl-cce">\(</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,j,l;<span class="pl-k">if</span>(i)h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">path</span>(i),<span class="pl-en">q</span>(h,{symbolName<span class="pl-k">:</span>a,x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e}),f<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(h,f);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">test</span>(a))<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span>b[<span class="pl-c1">0</span>],height<span class="pl-k">:</span>b[<span class="pl-c1">1</span>]}),<span class="pl-smi">a</span>.<span class="pl-smi">alignByTranslate</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(<span class="pl-en">B</span>((d<span class="pl-k">-</span>b[<span class="pl-c1">0</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-en">B</span>((e<span class="pl-k">-</span>b[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>)))},j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(k)[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>Hb[j]<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span><span class="pl-k">&amp;&amp;</span>[<span class="pl-smi">f</span>.<span class="pl-c1">width</span>,<span class="pl-smi">f</span>.<span class="pl-c1">height</span>],h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">image</span>(j).<span class="pl-en">attr</span>({x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c}),<span class="pl-smi">h</span>.<span class="pl-smi">isImg</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,a<span class="pl-k">?</span><span class="pl-en">l</span>(h,a)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">h</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>}),<span class="pl-en">ba</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">onload</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">L</span>(<span class="pl-v">this</span>,{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-999em<span class="pl-pds">&quot;</span></span>}),<span class="pl-c1">C</span>.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(<span class="pl-v">this</span>));<span class="pl-en">l</span>(h,Hb[j]<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>]);<span class="pl-v">this</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(<span class="pl-v">this</span>);<span class="pl-smi">g</span>.<span class="pl-smi">imgCount</span><span class="pl-k">--</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-smi">imgCount</span>)<span class="pl-c1">U</span>[<span class="pl-smi">g</span>.<span class="pl-smi">chartIndex</span>].<span class="pl-en">onload</span>()},src<span class="pl-k">:</span>j})),<span class="pl-v">this</span>.<span class="pl-smi">imgCount</span><span class="pl-k">++</span>;<span class="pl-k">return</span> h},symbols<span class="pl-k">:</span>{<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0.166</span><span class="pl-k">*</span>c;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">+</span>e,b,a<span class="pl-k">+</span>c<span class="pl-k">+</span>e,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>e,b<span class="pl-k">+</span>d,a<span class="pl-k">-</span>e,b,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">square</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">c,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">triangle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">triangle-down</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">diamond</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">start</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">||</span>c<span class="pl-k">||</span>d,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">end</span><span class="pl-k">-</span><span class="pl-c1">0.001</span>,d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">innerR</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">open</span>,i<span class="pl-k">=</span><span class="pl-en">ha</span>(f),k<span class="pl-k">=</span><span class="pl-en">pa</span>(f),j<span class="pl-k">=</span><span class="pl-en">ha</span>(g),g<span class="pl-k">=</span><span class="pl-en">pa</span>(g),e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">end</span><span class="pl-k">-</span>f<span class="pl-k">&lt;</span>pb<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">*</span>i,b<span class="pl-k">+</span>c<span class="pl-k">*</span>k,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c,c,<span class="pl-c1">0</span>,e,<span class="pl-c1">1</span>,a<span class="pl-k">+</span>c<span class="pl-k">*</span>j,b<span class="pl-k">+</span>c<span class="pl-k">*</span>g,h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>d<span class="pl-k">*</span>j,b<span class="pl-k">+</span>d<span class="pl-k">*</span>g,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,d,d,<span class="pl-c1">0</span>,e,<span class="pl-c1">0</span>,a<span class="pl-k">+</span>d<span class="pl-k">*</span>i,b<span class="pl-k">+</span>d<span class="pl-k">*</span>k,h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">callout</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">I</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">||</span><span class="pl-c1">0</span>,c,d),g<span class="pl-k">=</span>f<span class="pl-k">+</span><span class="pl-c1">6</span>,h<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">anchorX</span>,e<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">anchorY</span>,i;i<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>f,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">-</span>f,b,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>f,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">-</span>f,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c<span class="pl-k">-</span>f,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>f,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d<span class="pl-k">-</span>f,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a,b<span class="pl-k">+</span>f,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a,b,a,b,a<span class="pl-k">+</span>f,b];h<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;</span>b<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>b<span class="pl-k">+</span>d<span class="pl-k">-</span>g<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">13</span>,<span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,e<span class="pl-k">-</span><span class="pl-c1">6</span>,a<span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-c1">6</span>,e,a<span class="pl-k">+</span>c,e<span class="pl-k">+</span><span class="pl-c1">6</span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">-</span>f)<span class="pl-k">:</span>h<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;</span>b<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>b<span class="pl-k">+</span>d<span class="pl-k">-</span>g<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">33</span>,<span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a,e<span class="pl-k">+</span><span class="pl-c1">6</span>,a<span class="pl-k">-</span><span class="pl-c1">6</span>,e,a,e<span class="pl-k">-</span><span class="pl-c1">6</span>,a,b<span class="pl-k">+</span>f)<span class="pl-k">:</span>e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>a<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>a<span class="pl-k">+</span>c<span class="pl-k">-</span>g<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">23</span>,<span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">+</span><span class="pl-c1">6</span>,b<span class="pl-k">+</span>d,h,b<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-c1">6</span>,h<span class="pl-k">-</span><span class="pl-c1">6</span>,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>f,b<span class="pl-k">+</span>d)<span class="pl-k">:</span>e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>a<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>a<span class="pl-k">+</span>c<span class="pl-k">-</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">-</span><span class="pl-c1">6</span>,b,h,b<span class="pl-k">-</span><span class="pl-c1">6</span>,h<span class="pl-k">+</span><span class="pl-c1">6</span>,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">b,c<span class="pl-k">-</span>f,b);<span class="pl-k">return</span> i}},<span class="pl-en">clipRect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>qb<span class="pl-k">++</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>clipPath<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({id<span class="pl-k">:</span>e}).<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">defs</span>),a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">rect</span>(a,b,c,d,<span class="pl-c1">0</span>).<span class="pl-c1">add</span>(f);<span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>e;<span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span><span class="pl-k">=</span>f;<span class="pl-smi">a</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> a},<span class="pl-en">text</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>ja<span class="pl-k">||!</span>da<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">forExport</span>,f<span class="pl-k">=</span>{};<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">allowHTML</span><span class="pl-k">||!</span><span class="pl-v">this</span>.<span class="pl-smi">forExport</span>))<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">html</span>(a,b,c);<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b<span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(c)<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(c);<span class="pl-k">if</span>(a<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-smi">f</span>.<span class="pl-c1">text</span><span class="pl-k">=</span>a;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(f);e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>});<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-smi">a</span>.<span class="pl-en">xSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">e,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">getAttribute</span>(b),m;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)e<span class="pl-k">=</span>d[m],<span class="pl-smi">e</span>.<span class="pl-c1">getAttribute</span>(b)<span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">setAttribute</span>(b,a);<span class="pl-smi">c</span>.<span class="pl-c1">setAttribute</span>(b,a)};<span class="pl-k">return</span> a},<span class="pl-en">fontMetrics</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>;<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-smi">getComputedStyle</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">element</span><span class="pl-k">||</span>b,a<span class="pl-k">=</span>(c<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-en">getComputedStyle</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">fontSize</span>);a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>px<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a)<span class="pl-k">?</span><span class="pl-en">E</span>(a)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>em<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a)<span class="pl-k">?</span><span class="pl-c1">parseFloat</span>(a)<span class="pl-k">*</span><span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-c1">12</span>;c<span class="pl-k">=</span>a<span class="pl-k">&lt;</span><span class="pl-c1">24</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-en">B</span>(a<span class="pl-k">*</span><span class="pl-c1">1.2</span>);d<span class="pl-k">=</span><span class="pl-en">B</span>(c<span class="pl-k">*</span><span class="pl-c1">0.8</span>);<span class="pl-k">return</span>{h<span class="pl-k">:</span>c,b<span class="pl-k">:</span>d,f<span class="pl-k">:</span>a}},<span class="pl-en">rotCorr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a;b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">t</span>(d<span class="pl-k">*</span><span class="pl-en">ha</span>(b<span class="pl-k">*</span>ia),<span class="pl-c1">4</span>));<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-k">-</span>a<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-en">pa</span>(b<span class="pl-k">*</span>ia),y<span class="pl-k">:</span>d}},<span class="pl-en">label</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>,j<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">g</span>(i),l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">text</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,g).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}),m,p,u<span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-c1">3</span>,o<span class="pl-k">=</span><span class="pl-c1">0</span>,w,<span class="pl-c1">A</span>,<span class="pl-c1">V</span>,t,ca<span class="pl-k">=</span><span class="pl-c1">0</span>,Za<span class="pl-k">=</span>{},v,<span class="pl-c1">C</span>,<span class="pl-c1">D</span>,z,<span class="pl-c1">E</span>;<span class="pl-en">D</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b;a<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">element</span>.<span class="pl-c1">style</span>;p<span class="pl-k">=</span>(w<span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-c1">A</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">j</span>.<span class="pl-smi">styles</span>.<span class="pl-c1">textAlign</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">l</span>.<span class="pl-smi">textStr</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">getBBox</span>();<span class="pl-smi">j</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>(w<span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>r<span class="pl-k">+</span>o;<span class="pl-smi">j</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>(<span class="pl-c1">A</span><span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>r;v<span class="pl-k">=</span>r<span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-en">fontMetrics</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span>,l).<span class="pl-smi">b</span>;<span class="pl-k">if</span>(<span class="pl-c1">C</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>m)a<span class="pl-k">=</span>ca,b<span class="pl-k">=</span>(h<span class="pl-k">?</span><span class="pl-k">-</span>v<span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>ca,<span class="pl-smi">j</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>m<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">symbol</span>(d,a,b,<span class="pl-smi">j</span>.<span class="pl-c1">width</span>,<span class="pl-smi">j</span>.<span class="pl-c1">height</span>,Za)<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">rect</span>(a,b,<span class="pl-smi">j</span>.<span class="pl-c1">width</span>,<span class="pl-smi">j</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,Za[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]),<span class="pl-smi">m</span>.<span class="pl-smi">isImg</span><span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-c1">add</span>(j);<span class="pl-smi">m</span>.<span class="pl-smi">isImg</span><span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-en">attr</span>(<span class="pl-en">q</span>({width<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-smi">j</span>.<span class="pl-c1">width</span>),</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">height<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-smi">j</span>.<span class="pl-c1">height</span>)},Za));Za<span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-en">z</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">styles</span>,a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">textAlign</span>,b<span class="pl-k">=</span>o<span class="pl-k">+</span>r,c;c<span class="pl-k">=</span>h<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>v;<span class="pl-k">if</span>(<span class="pl-en">s</span>(w)<span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))b<span class="pl-k">+=</span>{center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[a]<span class="pl-k">*</span>(w<span class="pl-k">-</span><span class="pl-smi">p</span>.<span class="pl-c1">width</span>);<span class="pl-k">if</span>(b<span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">||</span>c<span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span>)<span class="pl-smi">l</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,b),c<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,c);<span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b;<span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>c};<span class="pl-en">E</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){m<span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-en">attr</span>(a,b)<span class="pl-k">:</span>Za[a]<span class="pl-k">=</span>b};<span class="pl-smi">j</span>.<span class="pl-en">onAdd</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">l</span>.<span class="pl-c1">add</span>(j);<span class="pl-smi">j</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>a<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c});m<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-en">attr</span>({anchorX<span class="pl-k">:</span>e,anchorY<span class="pl-k">:</span>f})};<span class="pl-smi">j</span>.<span class="pl-en">widthSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){w<span class="pl-k">=</span>a};<span class="pl-smi">j</span>.<span class="pl-en">heightSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">A</span><span class="pl-k">=</span>a};<span class="pl-smi">j</span>.<span class="pl-en">paddingSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">s</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>r)r<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">padding</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">a,<span class="pl-en">z</span>()};<span class="pl-smi">j</span>.<span class="pl-en">paddingLeftSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">s</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>o<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span>a,<span class="pl-en">z</span>())};<span class="pl-smi">j</span>.<span class="pl-en">alignSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[a];a<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>a,p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>b}))};<span class="pl-smi">j</span>.<span class="pl-en">textSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">textSetter</span>(a);<span class="pl-en">D</span>();<span class="pl-en">z</span>()};j[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-widthSetter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);ca<span class="pl-k">=</span>a<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-en">E</span>(b,a)};<span class="pl-smi">j</span>.<span class="pl-smi">strokeSetter</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">fillSetter</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">rSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">E</span>(b,a)};<span class="pl-smi">j</span>.<span class="pl-en">anchorXSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){e<span class="pl-k">=</span>a;<span class="pl-en">E</span>(b,<span class="pl-en">B</span>(a)<span class="pl-k">-</span>ca<span class="pl-k">-</span><span class="pl-c1">V</span>)};<span class="pl-smi">j</span>.<span class="pl-en">anchorYSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){f<span class="pl-k">=</span>a;<span class="pl-en">E</span>(b,a<span class="pl-k">-</span>t)};<span class="pl-smi">j</span>.<span class="pl-en">xSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">j</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;u<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">-=</span>u<span class="pl-k">*</span>((w<span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-c1">width</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">*</span>r));<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-en">B</span>(a);<span class="pl-smi">j</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">V</span>)};<span class="pl-smi">j</span>.<span class="pl-en">ySetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){t<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-en">B</span>(a);<span class="pl-smi">j</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span>,t)};<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">css</span>;<span class="pl-k">return</span> <span class="pl-en">q</span>(j,{<span class="pl-en">css</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a){<span class="pl-k">var</span> b<span class="pl-k">=</span>{},a<span class="pl-k">=</span><span class="pl-en">y</span>(a);<span class="pl-en">n</span>(<span class="pl-smi">j</span>.<span class="pl-smi">textProps</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){a[c]<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span>a[c],<span class="pl-k">delete</span> a[c])});<span class="pl-smi">l</span>.<span class="pl-en">css</span>(b)}<span class="pl-k">return</span> <span class="pl-c1">I</span>.<span class="pl-c1">call</span>(j,a)},<span class="pl-en">getBBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{width<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>r,height<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>r,x<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>r,y<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>r}},<span class="pl-en">shadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">shadow</span>(a);<span class="pl-k">return</span> j},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">W</span>(<span class="pl-smi">j</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseenter<span class="pl-pds">&quot;</span></span>);<span class="pl-en">W</span>(<span class="pl-smi">j</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>);l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">destroy</span>());m<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">destroy</span>());<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">destroy</span>.<span class="pl-c1">call</span>(j);</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">=</span>z<span class="pl-k">=</span><span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">null</span>}})}};Ra<span class="pl-k">=</span>ma;<span class="pl-en">q</span>(<span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">htmlCss</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>;<span class="pl-k">if</span>(b<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">tagName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>)<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-smi">textWidth</span><span class="pl-k">=</span>b,<span class="pl-v">this</span>.<span class="pl-en">updateTransform</span>();<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">textOverflow</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>ellipsis<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-c1">whiteSpace</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">overflow</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">styles</span><span class="pl-k">=</span><span class="pl-en">q</span>(<span class="pl-v">this</span>.<span class="pl-smi">styles</span>,a);<span class="pl-en">L</span>(<span class="pl-v">this</span>.<span class="pl-smi">element</span>,a);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">htmlGetBBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">position</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetLeft</span>,y<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetTop</span>,width<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span>,height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetHeight</span>}},<span class="pl-en">htmlUpdateTransform</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">added</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">translateY</span><span class="pl-k">||</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">textAlign</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[g],i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">shadows</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">styles</span>;<span class="pl-en">L</span>(b,{marginLeft<span class="pl-k">:</span>c,marginTop<span class="pl-k">:</span>d});i<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">L</span>(a,{marginLeft<span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>,marginTop<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>})});<span class="pl-v">this</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">invertChild</span>(c,b)});<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">tagName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rotation</span>,j<span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-v">this</span>.<span class="pl-smi">textWidth</span>),l<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">whiteSpace</span>,m<span class="pl-k">=</span>[i,g,<span class="pl-smi">b</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-v">this</span>.<span class="pl-smi">textWidth</span>,<span class="pl-v">this</span>.<span class="pl-c1">textAlign</span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(m<span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">cTT</span>){k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">b</span>;</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-en">s</span>(i)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">setSpanRotation</span>(i,h,k);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">&gt;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ <span class="pl-cce">\-</span>]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">b</span>.<span class="pl-smi">textContent</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">innerText</span>))<span class="pl-en">L</span>(b,{width<span class="pl-k">:</span>j<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span>l<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>}),<span class="pl-v">this</span>.<span class="pl-smi">hasTextWidth</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">hasTextWidth</span>)<span class="pl-en">L</span>(b,{width<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span>l<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>}),<span class="pl-v">this</span>.<span class="pl-smi">hasTextWidth</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-en">getSpanCorrection</span>(<span class="pl-v">this</span>.<span class="pl-smi">hasTextWidth</span><span class="pl-k">?</span>j<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetWidth</span>,k,h,i,g)}<span class="pl-en">L</span>(b,{left<span class="pl-k">:</span>e<span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>f<span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">if</span>(hb)k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetHeight</span>;<span class="pl-v">this</span>.<span class="pl-smi">cTT</span><span class="pl-k">=</span>m}}<span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-smi">alignOnAdd</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">setSpanRotation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{},</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span>va<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-ms-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>hb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Ja<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>MozTransform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Fb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-o-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;d[e]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">transform</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>deg)<span class="pl-pds">&quot;</span></span>;d[e<span class="pl-k">+</span>(Ja<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Origin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-origin<span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">transformOrigin</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>% <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;<span class="pl-en">L</span>(<span class="pl-v">this</span>.<span class="pl-smi">element</span>,d)},<span class="pl-en">getSpanCorrection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">=</span><span class="pl-k">-</span>a<span class="pl-k">*</span>c;<span class="pl-v">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">=</span><span class="pl-k">-</span>b}});<span class="pl-en">q</span>(<span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">html</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-en">fa</span>(a,c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Setter<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,c,d,e);b[d]<span class="pl-k">=</span>c})})};<span class="pl-smi">d</span>.<span class="pl-en">textSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">bBox</span>;<span class="pl-smi">e</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">textStr</span><span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-en">htmlUpdateTransform</span>()};<span class="pl-en">g</span>(d,<span class="pl-smi">d</span>.<span class="pl-smi">element</span>.<span class="pl-c1">style</span>);<span class="pl-smi">d</span>.<span class="pl-smi">xSetter</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ySetter</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">alignSetter</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">rotationSetter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAlign<span class="pl-pds">&quot;</span></span>);d[b]<span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-en">htmlUpdateTransform</span>()};<span class="pl-smi">d</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>a,x<span class="pl-k">:</span><span class="pl-en">B</span>(b),y<span class="pl-k">:</span><span class="pl-en">B</span>(c)}).<span class="pl-en">css</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,fontFamily<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontFamily</span>,fontSize<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>});<span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-c1">whiteSpace</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">d</span>.<span class="pl-smi">css</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">htmlCss</span>;<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">isSVG</span>)<span class="pl-smi">d</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">box</span>.<span class="pl-c1">parentNode</span>,j<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">parentGroup</span><span class="pl-k">=</span>a){<span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">div</span>,<span class="pl-k">!</span>b){<span class="pl-k">for</span>(;a;)<span class="pl-smi">j</span>.<span class="pl-c1">push</span>(a),</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">parentGroup</span>;<span class="pl-en">n</span>(<span class="pl-smi">j</span>.<span class="pl-c1">reverse</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-en">J</span>(<span class="pl-smi">a</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>);e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>{className<span class="pl-k">:</span>e});b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">div</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">div</span><span class="pl-k">||</span><span class="pl-en">ba</span>(Ia,e,{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">translateY</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},b<span class="pl-k">||</span>c);d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>;<span class="pl-en">q</span>(a,{<span class="pl-en">translateXSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-c1">left</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;a[c]<span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">doTransform</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">translateYSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;a[c]<span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">doTransform</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}});<span class="pl-en">g</span>(a,d)})}}<span class="pl-k">else</span> b<span class="pl-k">=</span>c;<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(e);<span class="pl-smi">d</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">alignOnAdd</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">htmlUpdateTransform</span>();<span class="pl-k">return</span> d};<span class="pl-k">return</span> d}});<span class="pl-k">var</span> $a,<span class="pl-c1">R</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>da<span class="pl-k">&amp;&amp;!</span>ja)<span class="pl-c1">R</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s"><span class="pl-pds">&#39;</span> filled=&quot;f&quot; stroked=&quot;f&quot;<span class="pl-pds">&#39;</span></span>],d<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>position: <span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span>b<span class="pl-k">===</span>Ia;(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>left:0;top:0;width:1px;height:1px;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibility: <span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-k">if</span>(b)c<span class="pl-k">=</span>e<span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">prepVML</span>(c),<span class="pl-v">this</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-en">ba</span>(c);<span class="pl-v">this</span>.<span class="pl-smi">renderer</span><span class="pl-k">=</span>a},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">box</span>,e<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>,d<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">||</span>a<span class="pl-k">:</span>d;<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.<span class="pl-smi">parentGroup</span><span class="pl-k">=</span>a;e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">invertChild</span>(c,d);<span class="pl-smi">d</span>.<span class="pl-c1">appendChild</span>(c);<span class="pl-v">this</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">alignOnAdd</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">deferUpdateTransform</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">updateTransform</span>();<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">onAdd</span>)<span class="pl-v">this</span>.<span class="pl-en">onAdd</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>},updateTransform<span class="pl-k">:</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">htmlUpdateTransform</span>,<span class="pl-en">setSpanRotation</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rotation</span>,b<span class="pl-k">=</span><span class="pl-en">ha</span>(a<span class="pl-k">*</span>ia),c<span class="pl-k">=</span><span class="pl-en">pa</span>(a<span class="pl-k">*</span>ia);<span class="pl-en">L</span>(<span class="pl-v">this</span>.<span class="pl-smi">element</span>,{filter<span class="pl-k">:</span>a<span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>progid:DXImageTransform.Microsoft.Matrix(M11=<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>, M12=<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span>c,<span class="pl-s"><span class="pl-pds">&quot;</span>, M21=<span class="pl-pds">&quot;</span></span>,c,<span class="pl-s"><span class="pl-pds">&quot;</span>, M22=<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>, sizingMethod=&#39;auto expand&#39;)<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">getSpanCorrection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-en">ha</span>(d<span class="pl-k">*</span>ia)<span class="pl-k">:</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-en">pa</span>(d<span class="pl-k">*</span>ia)<span class="pl-k">:</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">elemHeight</span>,<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-smi">offsetHeight</span>),i;<span class="pl-v">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span>a;<span class="pl-v">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">=</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span>h;i<span class="pl-k">=</span>f<span class="pl-k">*</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">+=</span>g<span class="pl-k">*</span>b<span class="pl-k">*</span>(i<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">:</span>c);<span class="pl-v">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">-=</span>f<span class="pl-k">*</span>b<span class="pl-k">*</span>(d<span class="pl-k">?</span>i<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">:</span><span class="pl-c1">1</span>);e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">-=</span>a<span class="pl-k">*</span>c<span class="pl-k">*</span>(f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>),d<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">-=</span>h<span class="pl-k">*</span>c<span class="pl-k">*</span>(g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)),<span class="pl-en">L</span>(<span class="pl-v">this</span>.<span class="pl-smi">element</span>,{textAlign<span class="pl-k">:</span>e}))},<span class="pl-en">pathToVML</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span>[];b<span class="pl-k">--</span>;)<span class="pl-k">if</span>(<span class="pl-en">na</span>(a[b]))c[b]<span class="pl-k">=</span><span class="pl-en">B</span>(a[b]<span class="pl-k">*</span><span class="pl-c1">10</span>)<span class="pl-k">-</span><span class="pl-c1">5</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>)c[b]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c[b]<span class="pl-k">=</span>a[b],<span class="pl-smi">a</span>.<span class="pl-smi">isArc</span><span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>))c[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">===</span>c[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">&amp;&amp;</span>(c[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">+=</span>a[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">&gt;</span>a[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>),c[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">===</span>c[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">&amp;&amp;</span>(c[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">+=</span>a[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">&gt;</span>a[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>},<span class="pl-en">clip</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>,c;a<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">members</span>,<span class="pl-en">ua</span>(c,b),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b),<span class="pl-smi">b</span>.<span class="pl-en">destroyClip</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">ua</span>(c,b)},a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getCSS</span>(b))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">destroyClip</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">destroyClip</span>(),a<span class="pl-k">=</span>{clip<span class="pl-k">:</span>gb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect(auto)<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">css</span>(a)},css<span class="pl-k">:</span><span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">htmlCss</span>,<span class="pl-en">safeRemoveChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Pa</span>(a)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">destroyClip</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">destroyClip</span>();<span class="pl-k">return</span> <span class="pl-c1">O</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">destroy</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>)},<span class="pl-en">on</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">element</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">event</span>;<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">srcElement</span>;<span class="pl-en">b</span>(a)};<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">cutOffPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ ,]</span><span class="pl-pds">/</span></span>);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">9</span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-c1">11</span>)a[c<span class="pl-k">-</span><span class="pl-c1">4</span>]<span class="pl-k">=</span>a[c<span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-en">E</span>(a[c<span class="pl-k">-</span><span class="pl-c1">2</span>])<span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)},<span class="pl-en">shadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,h,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">style</span>,k,j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">path</span>,l,m,p,u;j<span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">j</span>.<span class="pl-c1">value</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">=</span>j;<span class="pl-k">if</span>(a){p<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-c1">3</span>);u<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">opacity</span><span class="pl-k">||</span><span class="pl-c1">0.15</span>)<span class="pl-k">/</span>p;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;=</span><span class="pl-c1">3</span>;e<span class="pl-k">++</span>){l<span class="pl-k">=</span>p<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e;c<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">cutOffPath</span>(<span class="pl-smi">j</span>.<span class="pl-c1">value</span>,l<span class="pl-k">+</span><span class="pl-c1">0.5</span>));k<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;shape isShadow=&quot;true&quot; strokeweight=&quot;<span class="pl-pds">&#39;</span></span>,l,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; filled=&quot;false&quot; path=&quot;<span class="pl-pds">&#39;</span></span>,m,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; coordsize=&quot;10 10&quot; style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">f</span>.<span class="pl-c1">style</span>.<span class="pl-smi">cssText</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; /&gt;<span class="pl-pds">&#39;</span></span>];h<span class="pl-k">=</span><span class="pl-en">ba</span>(<span class="pl-smi">g</span>.<span class="pl-en">prepVML</span>(k),<span class="pl-c1">null</span>,{left<span class="pl-k">:</span><span class="pl-en">E</span>(<span class="pl-smi">i</span>.<span class="pl-c1">left</span>)<span class="pl-k">+</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetX</span>,<span class="pl-c1">1</span>),top<span class="pl-k">:</span><span class="pl-en">E</span>(<span class="pl-smi">i</span>.<span class="pl-c1">top</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetY</span>,<span class="pl-c1">1</span>)});<span class="pl-k">if</span>(c)<span class="pl-smi">h</span>.<span class="pl-smi">cutOff</span><span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-c1">1</span>;k<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;stroke color=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; opacity=&quot;<span class="pl-pds">&#39;</span></span>,u<span class="pl-k">*</span>e,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>];<span class="pl-en">ba</span>(<span class="pl-smi">g</span>.<span class="pl-en">prepVML</span>(k),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,h);b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(h)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(h,f);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(h)}<span class="pl-v">this</span>.<span class="pl-smi">shadows</span><span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-v">this</span>},updateShadows<span class="pl-k">:</span><span class="pl-c1">T</span>,<span class="pl-en">setAttr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){gb<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>[a]<span class="pl-k">=</span>b<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(a,b)},<span class="pl-en">classSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">element</span>.<span class="pl-c1">className</span><span class="pl-k">=</span>a},<span class="pl-en">dashstyleSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){(<span class="pl-smi">c</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-en">ba</span>(<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">prepVML</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;stroke/&gt;<span class="pl-pds">&quot;</span></span>]),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c))[b]<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">dSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">shadows</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];<span class="pl-v">this</span>.<span class="pl-smi">d</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">join</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">pathToVML</span>(a);<span class="pl-k">if</span>(d)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;c<span class="pl-k">--</span>;)d[c].<span class="pl-smi">path</span><span class="pl-k">=</span>d[c].<span class="pl-smi">cutOff</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">cutOffPath</span>(a,d[c].<span class="pl-smi">cutOff</span>)<span class="pl-k">:</span>a;<span class="pl-v">this</span>.<span class="pl-en">setAttr</span>(b,a)},<span class="pl-en">fillSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">nodeName</span>;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">c</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>a;<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">c</span>.<span class="pl-smi">filled</span><span class="pl-k">=</span>a<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-en">setAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fillcolor<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">color</span>(a,c,b,<span class="pl-v">this</span>))},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">fill-opacitySetter</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">ba</span>(<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">prepVML</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&#39;</span> opacity=&quot;<span class="pl-pds">&#39;</span></span>,a,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>]),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line">c)},opacitySetter<span class="pl-k">:</span><span class="pl-c1">T</span>,<span class="pl-en">rotationSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">style</span>;<span class="pl-v">this</span>[b]<span class="pl-k">=</span>c[b]<span class="pl-k">=</span>a;<span class="pl-smi">c</span>.<span class="pl-c1">left</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-en">B</span>(<span class="pl-en">pa</span>(a<span class="pl-k">*</span>ia)<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">top</span><span class="pl-k">=</span><span class="pl-en">B</span>(<span class="pl-en">ha</span>(a<span class="pl-k">*</span>ia))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},<span class="pl-en">strokeSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-en">setAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>strokecolor<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">color</span>(a,c,b,<span class="pl-v">this</span>))},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">stroke-widthSetter</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-smi">stroked</span><span class="pl-k">=</span><span class="pl-k">!!</span>a;<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;<span class="pl-en">na</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-en">setAttr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>strokeweight<span class="pl-pds">&quot;</span></span>,a)},<span class="pl-en">titleSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-en">setAttr</span>(b,a)},<span class="pl-en">visibilitySetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">shadows</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">shadows</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-c1">style</span>[b]<span class="pl-k">=</span>a});<span class="pl-smi">c</span>.<span class="pl-c1">nodeName</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-999em<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">0</span>,gb<span class="pl-k">||</span>(<span class="pl-smi">c</span>.<span class="pl-c1">style</span>[b]<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">style</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">xSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">updateClipping</span><span class="pl-k">?</span>(<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a,<span class="pl-v">this</span>.<span class="pl-en">updateClipping</span>())<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">style</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">zIndexSetter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-c1">style</span>[b]<span class="pl-k">=</span>a}},<span class="pl-c1">R</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-opacitySetter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-c1">R</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>fill-opacitySetter<span class="pl-pds">&quot;</span></span>],<span class="pl-smi">v</span>.<span class="pl-smi">VMLElement</span><span class="pl-k">=</span><span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">O</span>,<span class="pl-c1">R</span>),<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">ySetter</span><span class="pl-k">=</span><span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">widthSetter</span><span class="pl-k">=</span><span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">heightSetter</span><span class="pl-k">=</span><span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">xSetter</span>,<span class="pl-c1">R</span><span class="pl-k">=</span>{<span class="pl-c1">Element</span><span class="pl-k">:</span><span class="pl-c1">R</span>,isIE8<span class="pl-k">:</span><span class="pl-smi">ya</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MSIE 8.0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e;<span class="pl-v">this</span>.<span class="pl-smi">alignedObjects</span><span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(Ia).<span class="pl-en">css</span>(<span class="pl-en">q</span>(<span class="pl-v">this</span>.<span class="pl-en">getStyle</span>(d),{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>}));e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>;<span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">d</span>.<span class="pl-smi">element</span>);<span class="pl-v">this</span>.<span class="pl-smi">isVML</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.<span class="pl-smi">boxWrapper</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">cacheKeys</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">imgCount</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-en">setSize</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">C</span>.<span class="pl-c1">namespaces</span>.<span class="pl-smi">hcv</span>){<span class="pl-c1">C</span>.<span class="pl-c1">namespaces</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hcv<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>urn:schemas-microsoft-com:vml<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{<span class="pl-c1">C</span>.<span class="pl-c1">createStyleSheet</span>().<span class="pl-smi">cssText</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hcv<span class="pl-cce">\\</span>:fill, hcv<span class="pl-cce">\\</span>:path, hcv<span class="pl-cce">\\</span>:shape, hcv<span class="pl-cce">\\</span>:stroke{ behavior:url(#default#VML); display: inline-block; } <span class="pl-pds">&quot;</span></span>}<span class="pl-k">catch</span>(f){<span class="pl-c1">C</span>.<span class="pl-c1">styleSheets</span>[<span class="pl-c1">0</span>].<span class="pl-smi">cssText</span><span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>hcv<span class="pl-cce">\\</span>:fill, hcv<span class="pl-cce">\\</span>:path, hcv<span class="pl-cce">\\</span>:shape, hcv<span class="pl-cce">\\</span>:stroke{ behavior:url(#default#VML); display: inline-block; } <span class="pl-pds">&quot;</span></span>}}},<span class="pl-en">isHidden</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">box</span>.<span class="pl-smi">offsetWidth</span>},<span class="pl-en">clipRect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(),f<span class="pl-k">=</span><span class="pl-en">aa</span>(a);<span class="pl-k">return</span> <span class="pl-en">q</span>(e,{members<span class="pl-k">:</span>[],count<span class="pl-k">:</span><span class="pl-c1">0</span>,left<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">:</span>a)<span class="pl-k">+</span><span class="pl-c1">1</span>,top<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">:</span>b)<span class="pl-k">+</span><span class="pl-c1">1</span>,width<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">:</span>c)<span class="pl-k">-</span><span class="pl-c1">1</span>,height<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">:</span>d)<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">getCSS</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">top</span><span class="pl-k">-</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetTop</span><span class="pl-k">:</span><span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">left</span>,b<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">width</span>,f<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">height</span>,d<span class="pl-k">=</span>{clip<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">B</span>(a<span class="pl-k">?</span>e<span class="pl-k">:</span>d)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-en">B</span>(a<span class="pl-k">?</span>f<span class="pl-k">:</span>b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">B</span>(a<span class="pl-k">?</span>b<span class="pl-k">:</span>f)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">B</span>(a<span class="pl-k">?</span>d<span class="pl-k">:</span>e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px)<span class="pl-pds">&quot;</span></span>};<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>gb<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(d,{width<span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> d},<span class="pl-en">updateClipping</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">members</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-smi">e</span>.<span class="pl-en">getCSS</span>(a))})}})},<span class="pl-en">color</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f,g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-pds">/</span></span>,h,i,k<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">linearGradient</span><span class="pl-k">?</span>i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>gradient<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">radialGradient</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>pattern<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(i){<span class="pl-k">var</span> j,l,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">linearGradient</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">radialGradient</span>,p,u,r,o,w,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>,<span class="pl-c1">V</span>,s<span class="pl-k">=</span>[],<span class="pl-en">ca</span><span class="pl-k">=</span><span class="pl-k">function</span>(){h<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;fill colors=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">s</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; opacity=&quot;<span class="pl-pds">&#39;</span></span>,r,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; o:opacity2=&quot;<span class="pl-pds">&#39;</span></span>,u,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; type=&quot;<span class="pl-pds">&#39;</span></span>,i,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; <span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">A</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>focus=&quot;100%&quot; method=&quot;any&quot; /&gt;<span class="pl-pds">&#39;</span></span>];<span class="pl-en">ba</span>(<span class="pl-smi">e</span>.<span class="pl-en">prepVML</span>(h),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b)};p<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-c1">V</span><span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];p[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">unshift</span>([<span class="pl-c1">0</span>,p[<span class="pl-c1">1</span>]]);<span class="pl-c1">V</span>[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>([<span class="pl-c1">1</span>,<span class="pl-c1">V</span>[<span class="pl-c1">1</span>]]);<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">g</span>.<span class="pl-c1">test</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-en">N</span>(a[<span class="pl-c1">1</span>]),j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(j<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-smi">s</span>.<span class="pl-c1">push</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>% <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j);b<span class="pl-k">?</span>(r<span class="pl-k">=</span>l,o<span class="pl-k">=</span>j)<span class="pl-k">:</span>(u<span class="pl-k">=</span>l,w<span class="pl-k">=</span>j)});<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>gradient<span class="pl-pds">&quot;</span></span>)c<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">x1</span><span class="pl-k">||</span>m[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">y1</span><span class="pl-k">||</span>m[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">x2</span><span class="pl-k">||</span>m[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">y2</span><span class="pl-k">||</span>m[<span class="pl-c1">3</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>angle=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>(<span class="pl-c1">90</span><span class="pl-k">-</span><span class="pl-c1">H</span>.<span class="pl-en">atan</span>((m<span class="pl-k">-</span>a)<span class="pl-k">/</span>(p<span class="pl-k">-</span>c))<span class="pl-k">*</span><span class="pl-c1">180</span><span class="pl-k">/</span>pb)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-en">ca</span>();<span class="pl-k">else</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">r</span>,q<span class="pl-k">=</span>k<span class="pl-k">*</span><span class="pl-c1">2</span>,t<span class="pl-k">=</span>k<span class="pl-k">*</span><span class="pl-c1">2</span>,x<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">cx</span>,v<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">cy</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">radialReference</span>,y,<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">getBBox</span>(),x<span class="pl-k">+=</span>(<span class="pl-c1">B</span>[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-smi">y</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-smi">y</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,v<span class="pl-k">+=</span>(<span class="pl-c1">B</span>[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-smi">y</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-smi">y</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,q<span class="pl-k">*=</span><span class="pl-c1">B</span>[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-smi">y</span>.<span class="pl-c1">width</span>,t<span class="pl-k">*=</span><span class="pl-c1">B</span>[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-smi">y</span>.<span class="pl-c1">height</span>);<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>src=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-c1">K</span>.<span class="pl-smi">global</span>.<span class="pl-smi">VMLRadialGradientURL</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; size=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>t<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; origin=&quot;0.5,0.5&quot; position=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>x<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; color2=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>w<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; <span class="pl-pds">&#39;</span></span>;<span class="pl-en">ca</span>()};<span class="pl-smi">d</span>.<span class="pl-smi">added</span><span class="pl-k">?</span><span class="pl-en">k</span>()<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">onAdd</span><span class="pl-k">=</span>k;k<span class="pl-k">=</span>o}<span class="pl-k">else</span> k<span class="pl-k">=</span>j}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">tagName</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span>)f<span class="pl-k">=</span><span class="pl-en">N</span>(a),d[c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-opacitySetter<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>),c,b),k<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(c);<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">length</span>)k[<span class="pl-c1">0</span>].<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-c1">1</span>,k[<span class="pl-c1">0</span>].<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>;k<span class="pl-k">=</span>a}<span class="pl-k">return</span> k},<span class="pl-en">prepVML</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isIE8</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);b<span class="pl-k">?</span>(a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span> xmlns=&quot;urn:schemas-microsoft-com:vml&quot; /&gt;<span class="pl-pds">&#39;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;display:inline-block;behavior:url(#default#VML);&quot; /&gt;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;display:inline-block;behavior:url(#default#VML);<span class="pl-pds">&#39;</span></span>))<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;hcv:<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a},text<span class="pl-k">:</span><span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">html</span>,<span class="pl-en">path</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{coordsize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>10 10<span class="pl-pds">&quot;</span></span>};<span class="pl-en">Fa</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">d</span><span class="pl-k">=</span>a<span class="pl-k">:</span><span class="pl-en">aa</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(b,a);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(b)},<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-en">aa</span>(a))c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isCircle</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b})},<span class="pl-en">g</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>{className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a});<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(Ia).<span class="pl-en">attr</span>(b)},<span class="pl-en">image</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({src<span class="pl-k">:</span>a});<span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e});<span class="pl-k">return</span> f},<span class="pl-en">createElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">symbol</span>(a)<span class="pl-k">:</span><span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">createElement</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a)},<span class="pl-en">invertChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>;<span class="pl-en">L</span>(a,{flip<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-en">E</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span>)<span class="pl-k">-</span>(e<span class="pl-k">?</span><span class="pl-en">E</span>(<span class="pl-smi">e</span>.<span class="pl-c1">top</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>),top<span class="pl-k">:</span><span class="pl-en">E</span>(<span class="pl-smi">d</span>.<span class="pl-c1">height</span>)<span class="pl-k">-</span>(e<span class="pl-k">?</span><span class="pl-en">E</span>(<span class="pl-smi">e</span>.<span class="pl-c1">left</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>),rotation<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">90</span>});<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">c</span>.<span class="pl-en">invertChild</span>(b,a)})},symbols<span class="pl-k">:</span>{<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">start</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">end</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">||</span>c<span class="pl-k">||</span>d,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">innerR</span>,d<span class="pl-k">=</span><span class="pl-en">ha</span>(f),i<span class="pl-k">=</span><span class="pl-en">pa</span>(f),k<span class="pl-k">=</span><span class="pl-en">ha</span>(g),j<span class="pl-k">=</span><span class="pl-en">pa</span>(g);<span class="pl-k">if</span>(g<span class="pl-k">-</span>f<span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>h,b<span class="pl-k">-</span>h,a<span class="pl-k">+</span>h,b<span class="pl-k">+</span>h,a<span class="pl-k">+</span>h<span class="pl-k">*</span>d,b<span class="pl-k">+</span>h<span class="pl-k">*</span>i,a<span class="pl-k">+</span>h<span class="pl-k">*</span>k,b<span class="pl-k">+</span>h<span class="pl-k">*</span>j];<span class="pl-smi">e</span>.<span class="pl-smi">open</span><span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b);<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>c,b<span class="pl-k">-</span>c,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>c,a<span class="pl-k">+</span>c<span class="pl-k">*</span>k,b<span class="pl-k">+</span>c<span class="pl-k">*</span>j,a<span class="pl-k">+</span>c<span class="pl-k">*</span>d,b<span class="pl-k">+</span>c<span class="pl-k">*</span>i,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-smi">isArc</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> f},<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span>);e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">isCircle</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">-=</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">-=</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">rect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>[<span class="pl-k">!</span><span class="pl-en">s</span>(e)<span class="pl-k">||!</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>callout<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">call</span>(<span class="pl-c1">0</span>,a,b,c,d,e)}}},<span class="pl-smi">v</span>.<span class="pl-smi">VMLRenderer</span><span class="pl-k">=</span><span class="pl-en">$a</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>)},<span class="pl-smi">$a</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>,<span class="pl-c1">R</span>),Ra<span class="pl-k">=</span>$a;<span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">measureSpanWidth</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),d;d<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(a);<span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(d);<span class="pl-en">L</span>(c,b);<span class="pl-v">this</span>.<span class="pl-smi">box</span>.<span class="pl-c1">appendChild</span>(c);d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">offsetWidth</span>;<span class="pl-en">Pa</span>(c);<span class="pl-k">return</span> d};<span class="pl-k">var</span> Ib;<span class="pl-k">if</span>(ja)<span class="pl-smi">v</span>.<span class="pl-smi">CanVGRenderer</span><span class="pl-k">=</span><span class="pl-en">R</span><span class="pl-k">=</span><span class="pl-k">function</span>(){Ca<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>},<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span><span class="pl-k">=</span>{},Ib<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,d;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">++</span>)b[d]();b<span class="pl-k">=</span>[]}<span class="pl-k">var</span> b<span class="pl-k">=</span>[];<span class="pl-k">return</span>{<span class="pl-en">push</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>head<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>script<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>text/javascript<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">f</span>.<span class="pl-smi">src</span><span class="pl-k">=</span>d;<span class="pl-smi">f</span>.<span class="pl-smi">onload</span><span class="pl-k">=</span>a;<span class="pl-smi">e</span>.<span class="pl-c1">appendChild</span>(f)}<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c)}}}(),Ra<span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">addLabel</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">axis</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">categories</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">names</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">labels</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,i<span class="pl-k">=</span>f<span class="pl-k">===</span>h[<span class="pl-c1">0</span>],k<span class="pl-k">=</span>f<span class="pl-k">===</span>h[<span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],e<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-en">o</span>(d[f],e[f],f)<span class="pl-k">:</span>f,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>,h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">info</span>,j;<span class="pl-smi">a</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dateTimeLabelFormats</span>[<span class="pl-smi">h</span>.<span class="pl-smi">higherRanks</span>[f]<span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">unitName</span>]);<span class="pl-v">this</span>.<span class="pl-smi">isFirst</span><span class="pl-k">=</span>i;<span class="pl-v">this</span>.<span class="pl-smi">isLast</span><span class="pl-k">=</span>k;b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">labelFormatter</span>.<span class="pl-c1">call</span>({axis<span class="pl-k">:</span>a,chart<span class="pl-k">:</span>c,isFirst<span class="pl-k">:</span>i,isLast<span class="pl-k">:</span>k,dateTimeLabelFormat<span class="pl-k">:</span>j,value<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span><span class="pl-k">?</span><span class="pl-en">wa</span>(<span class="pl-en">oa</span>(e))<span class="pl-k">:</span>e});<span class="pl-en">s</span>(d)<span class="pl-k">?</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>b})<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-smi">labelLength</span><span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-en">s</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">enabled</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">g</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">css</span>(<span class="pl-en">y</span>(<span class="pl-smi">g</span>.<span class="pl-c1">style</span>)).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelGroup</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-c1">0</span>)},<span class="pl-en">getLabelSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">label</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">getBBox</span>()[<span class="pl-v">this</span>.<span class="pl-c1">axis</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-en">handleOverflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">axis</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">chartWidth</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">spacing</span>,f<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">labelLeft</span>,<span class="pl-en">I</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pos</span>,e[<span class="pl-c1">3</span>])),e<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">labelRight</span>,<span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span>,d<span class="pl-k">-</span>e[<span class="pl-c1">1</span>])),g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">rotation</span>,i<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[<span class="pl-smi">b</span>.<span class="pl-smi">labelAlign</span>],k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">slotWidth</span>,l<span class="pl-k">=</span><span class="pl-c1">1</span>,m,p<span class="pl-k">=</span>{};<span class="pl-k">if</span>(h)h<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">-</span>i<span class="pl-k">*</span>k<span class="pl-k">&lt;</span>f<span class="pl-k">?</span>m<span class="pl-k">=</span><span class="pl-en">B</span>(c<span class="pl-k">/</span><span class="pl-en">ha</span>(h<span class="pl-k">*</span>ia)<span class="pl-k">-</span>f)<span class="pl-k">:</span>h<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">+</span>i<span class="pl-k">*</span>k<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-en">B</span>((d<span class="pl-k">-</span>c)<span class="pl-k">/</span><span class="pl-en">ha</span>(h<span class="pl-k">*</span>ia)));<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">=</span>c<span class="pl-k">+</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>i)<span class="pl-k">*</span>k,c<span class="pl-k">-</span>i<span class="pl-k">*</span>k<span class="pl-k">&lt;</span>f<span class="pl-k">?</span>j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>j<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>i)<span class="pl-k">-</span>f<span class="pl-k">:</span>d<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>j<span class="pl-k">*</span>i,l<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>),j<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-smi">b</span>.<span class="pl-smi">slotWidth</span>,j),j<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">slotWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>l<span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-smi">slotWidth</span><span class="pl-k">-</span>j<span class="pl-k">-</span>i<span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-smi">slotWidth</span><span class="pl-k">-</span><span class="pl-en">I</span>(k,j)))),k<span class="pl-k">&gt;</span>j<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">autoRotation</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">styles</span>.<span class="pl-c1">width</span>)m<span class="pl-k">=</span>j;<span class="pl-k">if</span>(m){<span class="pl-smi">p</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>m;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>.<span class="pl-c1">style</span>.<span class="pl-smi">textOverflow</span>)<span class="pl-smi">p</span>.<span class="pl-smi">textOverflow</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ellipsis<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">g</span>.<span class="pl-en">css</span>(p)}},<span class="pl-en">getPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">axis</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartHeight</span>;<span class="pl-k">return</span>{x<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(b<span class="pl-k">+</span>c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d)<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">transB</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span>(<span class="pl-smi">e</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartWidth</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartWidth</span>)<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">right</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>a<span class="pl-k">?</span>g<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">bottom</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">offset</span><span class="pl-k">-</span>(<span class="pl-smi">e</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>g<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(b<span class="pl-k">+</span>c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d)<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">transB</span>}},<span class="pl-en">getLabelPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">axis</span>,k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">transA</span>,j<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">reversed</span>,</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">staggerLines</span>,m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">tickRotCorr</span><span class="pl-k">||</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>;<span class="pl-en">s</span>(p)<span class="pl-k">||</span>(p<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">side</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">8</span><span class="pl-k">:</span>p<span class="pl-k">=</span><span class="pl-en">ha</span>(<span class="pl-smi">c</span>.<span class="pl-smi">rotation</span><span class="pl-k">*</span>ia)<span class="pl-k">*</span>(<span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-en">getBBox</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>).<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>));a<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>(f<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">?</span>f<span class="pl-k">*</span>k<span class="pl-k">*</span>(j<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>);b<span class="pl-k">=</span>b<span class="pl-k">+</span>p<span class="pl-k">-</span>(f<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">?</span>f<span class="pl-k">*</span>k<span class="pl-k">*</span>(j<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>);l<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>g<span class="pl-k">/</span>(h<span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>l,<span class="pl-smi">i</span>.<span class="pl-smi">opposite</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>l<span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>),b<span class="pl-k">+=</span>c<span class="pl-k">*</span>(<span class="pl-smi">i</span>.<span class="pl-smi">labelOffset</span><span class="pl-k">/</span>l));<span class="pl-k">return</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span><span class="pl-en">B</span>(b)}},<span class="pl-en">getMarkPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-en">crispLine</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>(e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">-</span>c),b<span class="pl-k">+</span>(e<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>)],d)},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">axis</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">horiz</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">type</span>,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">labels</span>,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">gridLine</span>,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span>h<span class="pl-k">?</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Grid<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>grid<span class="pl-pds">&quot;</span></span>,p<span class="pl-k">=</span>h<span class="pl-k">?</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Tick<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>,u<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineWidth<span class="pl-pds">&quot;</span></span>],r<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineColor<span class="pl-pds">&quot;</span></span>],n<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineDashStyle<span class="pl-pds">&quot;</span></span>],w<span class="pl-k">=</span>e[p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Length<span class="pl-pds">&quot;</span></span>],m<span class="pl-k">=</span><span class="pl-en">o</span>(e[p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>],<span class="pl-k">!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>),<span class="pl-c1">A</span><span class="pl-k">=</span>e[p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Color<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">V</span><span class="pl-k">=</span>e[p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Position<span class="pl-pds">&quot;</span></span>],p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mark</span>,s<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">step</span>,ca<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickmarkOffset</span>,t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getPosition</span>(g,k,q,b),v<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">x</span>,t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">y</span>,<span class="pl-c1">B</span><span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span>v<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">||!</span>g<span class="pl-k">&amp;&amp;</span>t<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-en">o</span>(c,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(u){k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getPlotLinePath</span>(k<span class="pl-k">+</span>q,u<span class="pl-k">*</span><span class="pl-c1">B</span>,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(l<span class="pl-k">===</span>x){l<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>r,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>u};<span class="pl-k">if</span>(n)<span class="pl-smi">l</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span>n;<span class="pl-k">if</span>(<span class="pl-k">!</span>h)<span class="pl-smi">l</span>.<span class="pl-c1">zIndex</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(b)<span class="pl-smi">l</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">gridLine</span><span class="pl-k">=</span>l<span class="pl-k">=</span>u<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">path</span>(k).<span class="pl-en">attr</span>(l).<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">gridGroup</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>}<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;</span>k)l[<span class="pl-v">this</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span>k,opacity<span class="pl-k">:</span>c})}<span class="pl-k">if</span>(m<span class="pl-k">&amp;&amp;</span>w)<span class="pl-c1">V</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>inside<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span><span class="pl-k">-</span>w),<span class="pl-smi">d</span>.<span class="pl-smi">opposite</span><span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span><span class="pl-k">-</span>w),h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getMarkPath</span>(v,t,w,m<span class="pl-k">*</span><span class="pl-c1">B</span>,g,f),p<span class="pl-k">?</span><span class="pl-smi">p</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>h,opacity<span class="pl-k">:</span>c})<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">mark</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">path</span>(h).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-c1">A</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>m,opacity<span class="pl-k">:</span>c}).<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">axisGroup</span>);<span class="pl-k">if</span>(i<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(v))<span class="pl-smi">i</span>.<span class="pl-smi">xy</span><span class="pl-k">=</span>t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getLabelPosition</span>(v,t,i,g,j,q,a,s),<span class="pl-v">this</span>.<span class="pl-smi">isFirst</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isLast</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">showFirstLabel</span>,<span class="pl-c1">1</span>)<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">isLast</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isFirst</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">showLastLabel</span>,<span class="pl-c1">1</span>)<span class="pl-k">?</span>ca<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>g<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">isRadial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">j</span>.<span class="pl-smi">step</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">j</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">handleOverflow</span>(t),s<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">%</span>s<span class="pl-k">&amp;&amp;</span>(ca<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>),ca<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">t</span>.<span class="pl-c1">y</span>)<span class="pl-k">?</span>(<span class="pl-smi">t</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span>c,i[<span class="pl-v">this</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](t),<span class="pl-v">this</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">9999</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">eb</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-c1">axis</span>)}};<span class="pl-k">var</span> <span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">Axis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>)};<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{defaultOptions<span class="pl-k">:</span>{dateTimeLabelFormats<span class="pl-k">:</span>{millisecond<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,second<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M:%S<span class="pl-pds">&quot;</span></span>,minute<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M<span class="pl-pds">&quot;</span></span>,hour<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M<span class="pl-pds">&quot;</span></span>,day<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%e. %b<span class="pl-pds">&quot;</span></span>,week<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%e. %b<span class="pl-pds">&quot;</span></span>,month<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%b &#39;%y<span class="pl-pds">&quot;</span></span>,year<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>},endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,gridLineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#D8D8D8<span class="pl-pds">&quot;</span></span>,labels<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span>},x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">15</span>},</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0D0E0<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.01</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0.01</span>,minorGridLineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#E0E0E0<span class="pl-pds">&quot;</span></span>,minorGridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minorTickColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#A0A0A0<span class="pl-pds">&quot;</span></span>,minorTickLength<span class="pl-k">:</span><span class="pl-c1">2</span>,minorTickPosition<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outside<span class="pl-pds">&quot;</span></span>,startOfWeek<span class="pl-k">:</span><span class="pl-c1">1</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,tickColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0D0E0<span class="pl-pds">&quot;</span></span>,tickLength<span class="pl-k">:</span><span class="pl-c1">10</span>,tickmarkPlacement<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">100</span>,tickPosition<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outside<span class="pl-pds">&quot;</span></span>,title<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#707070<span class="pl-pds">&quot;</span></span>}},type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>},defaultYAxisOptions<span class="pl-k">:</span>{endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,gridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">72</span>,showLastLabel<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">8</span>,y<span class="pl-k">:</span><span class="pl-c1">3</span>},lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">maxPadding<span class="pl-k">:</span><span class="pl-c1">0.05</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.05</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">270</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Values<span class="pl-pds">&quot;</span></span>},stackLabels<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(<span class="pl-v">this</span>.<span class="pl-smi">total</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)},style<span class="pl-k">:</span><span class="pl-en">y</span>(<span class="pl-c1">X</span>.<span class="pl-smi">line</span>.<span class="pl-smi">dataLabels</span>.<span class="pl-c1">style</span>,{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>})}},defaultLeftAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">15</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">270</span>}},defaultRightAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">15</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">90</span>}},defaultBottomAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{autoRotation<span class="pl-k">:</span>[<span class="pl-k">-</span><span class="pl-c1">45</span>],x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">0</span>}},defaultTopAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{autoRotation<span class="pl-k">:</span>[<span class="pl-k">-</span><span class="pl-c1">45</span>],x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">15</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">0</span>}},</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isX</span>;<span class="pl-v">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span><span class="pl-k">!</span>c<span class="pl-k">:</span>c;<span class="pl-v">this</span>.<span class="pl-smi">coll</span><span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">=</span>c)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">opposite</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">opposite</span>;<span class="pl-v">this</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span><span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>);<span class="pl-v">this</span>.<span class="pl-en">setOptions</span>(b);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">type</span>;<span class="pl-v">this</span>.<span class="pl-smi">labelFormatter</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">labels</span>.<span class="pl-smi">formatter</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">defaultLabelFormatter</span>;<span class="pl-v">this</span>.<span class="pl-smi">userOptions</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">reversed</span>;<span class="pl-v">this</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.<span class="pl-smi">categories</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">categories</span><span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">names</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">names</span><span class="pl-k">||</span>[];<span class="pl-v">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>logarithmic<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">=</span><span class="pl-en">s</span>(<span class="pl-smi">d</span>.<span class="pl-smi">linkedTo</span>);<span class="pl-v">this</span>.<span class="pl-smi">ticks</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">labelEdge</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">minorTicks</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">plotLinesAndBands</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">alternateBands</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">userMinRange</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minRange</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">maxZoom</span>;<span class="pl-v">this</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">range</span>;<span class="pl-v">this</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">offset</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">stacks</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">oldStacks</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">stacksTouched</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.<span class="pl-smi">crosshair</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">crosshair</span>,<span class="pl-en">qa</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">crosshairs</span>)[c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>],<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> f,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span>;<span class="pl-en">za</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isColorAxis</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>.<span class="pl-c1">splice</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">length</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>),a[<span class="pl-v">this</span>.<span class="pl-smi">coll</span>].<span class="pl-c1">push</span>(<span class="pl-v">this</span>));<span class="pl-v">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span><span class="pl-k">||</span>[];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">===</span>x)<span class="pl-v">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">removePlotLine</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">removePlotBand</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">removePlotBandOrLine</span>;<span class="pl-k">for</span>(f <span class="pl-k">in</span> d)<span class="pl-en">M</span>(<span class="pl-v">this</span>,f,d[f]);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">isLog</span>)<span class="pl-v">this</span>.<span class="pl-smi">val2lin</span><span class="pl-k">=</span>Ta,<span class="pl-v">this</span>.<span class="pl-smi">lin2val</span><span class="pl-k">=</span>oa},<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-v">this</span>.<span class="pl-smi">defaultOptions</span>,<span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span>{}<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">defaultYAxisOptions</span>,[<span class="pl-v">this</span>.<span class="pl-smi">defaultTopAxisOptions</span>,<span class="pl-v">this</span>.<span class="pl-smi">defaultRightAxisOptions</span>,<span class="pl-v">this</span>.<span class="pl-smi">defaultBottomAxisOptions</span>,</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">defaultLeftAxisOptions</span>][<span class="pl-v">this</span>.<span class="pl-smi">side</span>],<span class="pl-en">y</span>(<span class="pl-c1">K</span>[<span class="pl-v">this</span>.<span class="pl-smi">coll</span>],a))},<span class="pl-en">defaultLabelFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">axis</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">value</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">categories</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dateTimeLabelFormat</span>,e<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">lang</span>.<span class="pl-smi">numericSymbols</span>,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,g,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>.<span class="pl-smi">format</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span><span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">tickInterval</span>;<span class="pl-k">if</span>(h)g<span class="pl-k">=</span><span class="pl-en">Ba</span>(h,<span class="pl-v">this</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(c)g<span class="pl-k">=</span>b;<span class="pl-k">else</span> <span class="pl-k">if</span>(d)g<span class="pl-k">=</span><span class="pl-en">Oa</span>(d,b);<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">1E3</span>)<span class="pl-k">for</span>(;f<span class="pl-k">--</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span>x;)c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">1E3</span>,f<span class="pl-k">+</span><span class="pl-c1">1</span>),a<span class="pl-k">&gt;=</span>c<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">*</span><span class="pl-c1">10</span><span class="pl-k">%</span>c<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>e[f]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(b<span class="pl-k">/</span>c,<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>e[f]);g<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-en">Q</span>(b)<span class="pl-k">&gt;=</span><span class="pl-c1">1E4</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(b,<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(b,<span class="pl-k">-</span><span class="pl-c1">1</span>,x,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> g},</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getSeriesExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasVisibleSeries</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">threshold</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-smi">softThreshold</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">isXAxis</span>;<span class="pl-smi">a</span>.<span class="pl-smi">buildStacks</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">buildStacks</span>();<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">threshold</span>,f;<span class="pl-smi">a</span>.<span class="pl-smi">hasVisibleSeries</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isXAxis</span>){<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xData</span>,<span class="pl-smi">d</span>.<span class="pl-c1">length</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>,d[<span class="pl-c1">0</span>]),<span class="pl-en">Ua</span>(d)),<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>,d[<span class="pl-c1">0</span>]),<span class="pl-en">Ha</span>(d))}<span class="pl-k">else</span>{<span class="pl-smi">c</span>.<span class="pl-en">getExtremes</span>();f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>;c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataMin</span>;<span class="pl-k">if</span>(<span class="pl-en">s</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(f))<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>,</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">c),c),<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>,f),f);<span class="pl-k">if</span>(<span class="pl-en">s</span>(e))<span class="pl-smi">a</span>.<span class="pl-smi">threshold</span><span class="pl-k">=</span>e;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">softThreshold</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span>)<span class="pl-smi">a</span>.<span class="pl-smi">softThreshold</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}})},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">linkedParent</span><span class="pl-k">||</span><span class="pl-v">this</span>,h<span class="pl-k">=</span><span class="pl-c1">1</span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-smi">oldTransA</span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">transA</span>,d<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-smi">oldMin</span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">min</span>,j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">minPixelPadding</span>,e<span class="pl-k">=</span>(<span class="pl-smi">g</span>.<span class="pl-smi">isOrdinal</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-smi">isBroken</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">lin2val</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>k)k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">transA</span>;<span class="pl-k">if</span>(c)h<span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">len</span>;<span class="pl-smi">g</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,i<span class="pl-k">-=</span>h<span class="pl-k">*</span>(<span class="pl-smi">g</span>.<span class="pl-smi">sector</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-smi">len</span>));b<span class="pl-k">?</span>(a<span class="pl-k">=</span>a<span class="pl-k">*</span>h<span class="pl-k">+</span>i,a<span class="pl-k">-=</span>j,a<span class="pl-k">=</span>a<span class="pl-k">/</span>k<span class="pl-k">+</span>d,e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">lin2val</span>(a)))<span class="pl-k">:</span>(e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">val2lin</span>(a)),f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">0.5</span>),a<span class="pl-k">=</span>h<span class="pl-k">*</span>(a<span class="pl-k">-</span>d)<span class="pl-k">*</span>k<span class="pl-k">+</span>i<span class="pl-k">+</span>h<span class="pl-k">*</span>j<span class="pl-k">+</span>(<span class="pl-en">na</span>(f)<span class="pl-k">?</span>k<span class="pl-k">*</span>f<span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-smi">pointRange</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>));<span class="pl-k">return</span> a},<span class="pl-en">toPixels</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>)},<span class="pl-en">toValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">translate</span>(a<span class="pl-k">-</span>(b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">getPlotLinePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">left</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">top</span>,i,k,j<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartHeight</span>,l<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartWidth</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartWidth</span>,m;i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">transB</span>;<span class="pl-k">var</span> <span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span>b<span class="pl-k">||</span>a<span class="pl-k">&gt;</span>c)d<span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(b,a),c)<span class="pl-k">:</span>m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> a},e<span class="pl-k">=</span><span class="pl-en">o</span>(e,<span class="pl-v">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c)),a<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-en">B</span>(e<span class="pl-k">+</span>i);i<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-en">B</span>(j<span class="pl-k">-</span>e<span class="pl-k">-</span>i);<span class="pl-c1">isNaN</span>(e)<span class="pl-k">?</span>m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line">(i<span class="pl-k">=</span>h,k<span class="pl-k">=</span>j<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">bottom</span>,a<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-en">p</span>(a,g,g<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">width</span>))<span class="pl-k">:</span>(a<span class="pl-k">=</span>g,c<span class="pl-k">=</span>l<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">right</span>,i<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-en">p</span>(i,h,h<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">height</span>));<span class="pl-k">return</span> m<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">crispLine</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,i,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,c,k],b<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">getLinearTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-en">wa</span>(<span class="pl-en">ea</span>(b<span class="pl-k">/</span>a)<span class="pl-k">*</span>a),f<span class="pl-k">=</span><span class="pl-en">wa</span>(<span class="pl-en">ra</span>(c<span class="pl-k">/</span>a)<span class="pl-k">*</span>a),g<span class="pl-k">=</span>[];<span class="pl-k">if</span>(b<span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(b))<span class="pl-k">return</span>[b];<span class="pl-k">for</span>(b<span class="pl-k">=</span>e;b<span class="pl-k">&lt;=</span>f;){<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(b);b<span class="pl-k">=</span><span class="pl-en">wa</span>(b<span class="pl-k">+</span>a);<span class="pl-k">if</span>(b<span class="pl-k">===</span>d)<span class="pl-k">break</span>;d<span class="pl-k">=</span>b}<span class="pl-k">return</span> g},<span class="pl-en">getMinorTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">minorTickInterval</span>,d<span class="pl-k">=</span>[],e,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointRangePadding</span><span class="pl-k">||</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">-</span>f;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">+</span>f,g<span class="pl-k">=</span>f<span class="pl-k">-</span>e;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">/</span>c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">/</span><span class="pl-c1">3</span>)<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">isLog</span>){f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-v">this</span>.<span class="pl-en">getLogTickPositions</span>(c,b[e<span class="pl-k">-</span><span class="pl-c1">1</span>],b[e],<span class="pl-k">!</span><span class="pl-c1">0</span>))}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-v">this</span>.<span class="pl-en">getTimeTicks</span>(<span class="pl-v">this</span>.<span class="pl-en">normalizeTimeTickInterval</span>(c),e,f,<span class="pl-smi">a</span>.<span class="pl-smi">startOfWeek</span>));<span class="pl-k">else</span> <span class="pl-k">for</span>(b<span class="pl-k">=</span>e<span class="pl-k">+</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">-</span>e)<span class="pl-k">%</span>c;b<span class="pl-k">&lt;=</span>f;b<span class="pl-k">+=</span>c)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b);<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">trimTicks</span>(d,<span class="pl-smi">a</span>.<span class="pl-smi">startOnTick</span>,<span class="pl-smi">a</span>.<span class="pl-smi">endOnTick</span>);<span class="pl-k">return</span> d},<span class="pl-en">adjustForMinRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">max</span>,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">minRange</span>,f,g,h,i,k,j;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isLog</span>)<span class="pl-en">s</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>)<span class="pl-k">||</span><span class="pl-en">s</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">:</span>(<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xData</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;g<span class="pl-k">--</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span>i[g]<span class="pl-k">-</span>i[g<span class="pl-k">-</span><span class="pl-c1">1</span>],f<span class="pl-k">===</span>x<span class="pl-k">||</span>h<span class="pl-k">&lt;</span>f)f<span class="pl-k">=</span>h}),<span class="pl-v">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-en">I</span>(f<span class="pl-k">*</span><span class="pl-c1">5</span>,<span class="pl-v">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>));<span class="pl-k">if</span>(c<span class="pl-k">-</span>b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">minRange</span>){j<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">minRange</span>;d<span class="pl-k">=</span>(j<span class="pl-k">-</span>c<span class="pl-k">+</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span>;d<span class="pl-k">=</span>[b<span class="pl-k">-</span>d,<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>,b<span class="pl-k">-</span>d)];<span class="pl-k">if</span>(e)d[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>;b<span class="pl-k">=</span><span class="pl-en">Ha</span>(d);c<span class="pl-k">=</span>[b<span class="pl-k">+</span>j,<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>,b<span class="pl-k">+</span>j)];<span class="pl-k">if</span>(e)c[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMax</span>;c<span class="pl-k">=</span><span class="pl-en">Ua</span>(c);c<span class="pl-k">-</span>b<span class="pl-k">&lt;</span>j<span class="pl-k">&amp;&amp;</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>c<span class="pl-k">-</span>j,d[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>,c<span class="pl-k">-</span>j),b<span class="pl-k">=</span><span class="pl-en">Ha</span>(d))}<span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>c},<span class="pl-en">setAxisTranslation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">min</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>,e,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>,i<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">categories</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isXAxis</span>;<span class="pl-k">if</span>(j<span class="pl-k">||</span>i<span class="pl-k">||</span>d)<span class="pl-k">if</span>(h<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">minPointOffset</span>,g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">pointRangePadding</span>)<span class="pl-k">:</span>(<span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">closestPointRange</span>;<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">noSharedTooltip</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(b)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-en">s</span>(e)<span class="pl-k">?</span><span class="pl-en">I</span>(e,b)<span class="pl-k">:</span>b)}),<span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>i<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>j<span class="pl-k">?</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pointRange</span>,e,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pointPlacement</span>;d<span class="pl-k">=</span><span class="pl-en">t</span>(d,c);<span class="pl-smi">b</span>.<span class="pl-smi">single</span><span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-en">t</span>(f,<span class="pl-en">ta</span>(a)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>),g<span class="pl-k">=</span><span class="pl-en">t</span>(g,a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c))})),h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">/</span>e<span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-smi">b</span>.<span class="pl-smi">minPointOffset</span><span class="pl-k">=</span>f<span class="pl-k">*=</span>h,<span class="pl-smi">b</span>.<span class="pl-smi">pointRangePadding</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">*=</span>h,<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span><span class="pl-en">I</span>(d,c),j)<span class="pl-smi">b</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">=</span>e;<span class="pl-k">if</span>(a)<span class="pl-smi">b</span>.<span class="pl-smi">oldTransA</span><span class="pl-k">=</span>k;<span class="pl-smi">b</span>.<span class="pl-smi">translationSlope</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span><span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">/</span>(c<span class="pl-k">+</span>g<span class="pl-k">||</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">transB</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">bottom</span>;<span class="pl-smi">b</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">=</span>k<span class="pl-k">*</span>f},<span class="pl-en">minFromRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">range</span>},<span class="pl-en">setTickInterval</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isLog</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isDatetimeAxis</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isXAxis</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isLinked</span>,i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">maxPadding</span>,k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minPadding</span>,j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickInterval</span>,l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickPixelInterval</span>,m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">categories</span>,p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">threshold</span>,u<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">softThreshold</span>,r,<span class="pl-c1">F</span>,w,<span class="pl-c1">A</span>;<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;!</span>m<span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">getTickAmount</span>();w<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">userMin</span>,</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">min</span>);<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">userMax</span>,<span class="pl-smi">d</span>.<span class="pl-smi">max</span>);h<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span><span class="pl-k">=</span>c[<span class="pl-smi">b</span>.<span class="pl-smi">coll</span>][<span class="pl-smi">d</span>.<span class="pl-smi">linkedTo</span>],c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-en">getExtremes</span>(),<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">min</span>,<span class="pl-smi">c</span>.<span class="pl-smi">dataMin</span>),<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">max</span>,<span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>),<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-c1">options</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">11</span>,<span class="pl-c1">1</span>))<span class="pl-k">:</span>(<span class="pl-k">!</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(p)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&gt;=</span>p<span class="pl-k">?</span>(r<span class="pl-k">=</span>p,k<span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span><span class="pl-k">&lt;=</span>p<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span><span class="pl-k">=</span>p,i<span class="pl-k">=</span><span class="pl-c1">0</span>)),<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">o</span>(w,r,<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>),<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-c1">A</span>,<span class="pl-c1">F</span>,<span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span>));<span class="pl-k">if</span>(e)<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>,<span class="pl-smi">b</span>.<span class="pl-smi">min</span>))<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">10</span>,<span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">wa</span>(<span class="pl-en">Ta</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>),<span class="pl-c1">15</span>),<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">wa</span>(<span class="pl-en">Ta</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>),<span class="pl-c1">15</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>))<span class="pl-smi">b</span>.<span class="pl-smi">userMin</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>w<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-en">minFromRange</span>()),<span class="pl-smi">b</span>.<span class="pl-smi">userMax</span><span class="pl-k">=</span><span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span>,<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">b</span>.<span class="pl-smi">beforePadding</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">beforePadding</span>();<span class="pl-smi">b</span>.<span class="pl-en">adjustForMinRange</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>m<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">usePercentage</span><span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>))<span class="pl-k">!</span><span class="pl-en">s</span>(w)<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">-=</span>c<span class="pl-k">*</span>k),<span class="pl-k">!</span><span class="pl-en">s</span>(<span class="pl-c1">A</span>)<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">+=</span>c<span class="pl-k">*</span>i);<span class="pl-k">if</span>(<span class="pl-en">na</span>(<span class="pl-smi">d</span>.<span class="pl-smi">floor</span>))<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-smi">d</span>.<span class="pl-smi">floor</span>);<span class="pl-k">if</span>(<span class="pl-en">na</span>(<span class="pl-smi">d</span>.<span class="pl-smi">ceiling</span>))<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>,<span class="pl-smi">d</span>.<span class="pl-smi">ceiling</span>);<span class="pl-k">if</span>(u<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>))<span class="pl-k">if</span>(p<span class="pl-k">=</span>p<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-en">s</span>(w)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">&lt;</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&gt;=</span>p)<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>p;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">s</span>(<span class="pl-c1">A</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">&gt;</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span><span class="pl-k">&lt;=</span>p)<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>p;<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>h<span class="pl-k">&amp;&amp;!</span>j<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tickPixelInterval</span><span class="pl-k">?</span>j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-en">o</span>(j,<span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span><span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">/</span><span class="pl-en">t</span>(<span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,m<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">*</span>l<span class="pl-k">/</span><span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">len</span>,l));g<span class="pl-k">&amp;&amp;!</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">processData</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">oldMin</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">oldMax</span>)});<span class="pl-smi">b</span>.<span class="pl-en">setAxisTranslation</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-smi">beforeSetTickPositions</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">beforeSetTickPositions</span>();<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">postProcessTickInterval</span>)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">postProcessTickInterval</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">&amp;&amp;!</span>j)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span>,<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>);a<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">minTickInterval</span>,<span class="pl-smi">b</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">closestPointRange</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">&lt;</span>a)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line">a;<span class="pl-k">if</span>(<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;!</span>e<span class="pl-k">&amp;&amp;!</span>j)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-en">ub</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-c1">null</span>,<span class="pl-c1">H</span>.<span class="pl-en">pow</span>(<span class="pl-c1">10</span>,<span class="pl-en">ea</span>(<span class="pl-c1">H</span>.<span class="pl-en">log</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>)<span class="pl-k">/</span><span class="pl-c1">H</span>.<span class="pl-c1">LN10</span>)),<span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">allowDecimals</span>,<span class="pl-k">!</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">&gt;</span><span class="pl-c1">0.5</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">&lt;</span><span class="pl-c1">5</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">&gt;</span><span class="pl-c1">1E3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">&lt;</span><span class="pl-c1">9999</span>)),<span class="pl-k">!!</span><span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">len</span>)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">unsquish</span>();<span class="pl-v">this</span>.<span class="pl-en">setTickPositions</span>()},<span class="pl-en">setTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositioner</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">startOnTick</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">endOnTick</span>,g;<span class="pl-v">this</span>.<span class="pl-smi">tickmarkOffset</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">categories</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">tickmarkPlacement</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">/</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">minorTickInterval</span>;<span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span><span class="pl-k">=</span>b<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">getTimeTicks</span>(<span class="pl-v">this</span>.<span class="pl-en">normalizeTimeTickInterval</span>(<span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-smi">a</span>.<span class="pl-smi">units</span>),<span class="pl-v">this</span>.<span class="pl-smi">min</span>,<span class="pl-v">this</span>.<span class="pl-smi">max</span>,<span class="pl-smi">a</span>.<span class="pl-smi">startOfWeek</span>,<span class="pl-v">this</span>.<span class="pl-smi">ordinalPositions</span>,<span class="pl-v">this</span>.<span class="pl-smi">closestPointRange</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">getLogTickPositions</span>(<span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-v">this</span>.<span class="pl-smi">min</span>,<span class="pl-v">this</span>.<span class="pl-smi">max</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">getLinearTickPositions</span>(<span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-v">this</span>.<span class="pl-smi">min</span>,<span class="pl-v">this</span>.<span class="pl-smi">max</span>),<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>[b[<span class="pl-c1">0</span>],<span class="pl-smi">b</span>.<span class="pl-c1">pop</span>()]),<span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">b,d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,[<span class="pl-v">this</span>.<span class="pl-smi">min</span>,<span class="pl-v">this</span>.<span class="pl-smi">max</span>]))))<span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span><span class="pl-k">=</span>b<span class="pl-k">=</span>d;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">isLinked</span>)<span class="pl-v">this</span>.<span class="pl-en">trimTicks</span>(b,e,f),<span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-v">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">-=</span><span class="pl-c1">0.5</span>,<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">+=</span><span class="pl-c1">0.5</span>),<span class="pl-v">this</span>.<span class="pl-smi">single</span><span class="pl-k">=</span>g,<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">adjustTickAmount</span>()},<span class="pl-en">trimTicks</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">minPointOffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(b)<span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">for</span>(;<span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">-</span>f<span class="pl-k">&gt;</span>a[<span class="pl-c1">0</span>];)<span class="pl-smi">a</span>.<span class="pl-c1">shift</span>();<span class="pl-k">if</span>(c)<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>e;<span class="pl-k">else</span> <span class="pl-k">for</span>(;<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">+</span>f<span class="pl-k">&lt;</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];)<span class="pl-smi">a</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(d)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>((e<span class="pl-k">+</span>d)<span class="pl-k">/</span><span class="pl-c1">2</span>)},<span class="pl-en">alignToOthers</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{},</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line">b,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>;<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">alignTicks</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">alignTicks</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>[<span class="pl-v">this</span>.<span class="pl-smi">coll</span>],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span>[<span class="pl-smi">c</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">top</span>,<span class="pl-smi">e</span>.<span class="pl-c1">width</span>,<span class="pl-smi">e</span>.<span class="pl-c1">height</span>,<span class="pl-smi">e</span>.<span class="pl-smi">pane</span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(a[e]<span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span>a[e]<span class="pl-k">=</span><span class="pl-c1">1</span>)});<span class="pl-k">return</span> b},<span class="pl-en">getTickAmount</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickAmount</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPixelInterval</span>;<span class="pl-k">!</span><span class="pl-en">s</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tickInterval</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isRadial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">startOnTick</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">endOnTick</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">alignToOthers</span>()<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">ra</span>(<span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">/</span>c)<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(b<span class="pl-k">&lt;</span><span class="pl-c1">4</span>)<span class="pl-v">this</span>.<span class="pl-smi">finalTickAmt</span><span class="pl-k">=</span>b,b<span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line">b},<span class="pl-en">adjustTickAmount</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tickAmount</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">finalTickAmt</span>,e<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(e<span class="pl-k">&lt;</span>c){<span class="pl-k">for</span>(;<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>c;)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-en">wa</span>(b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>a));<span class="pl-v">this</span>.<span class="pl-smi">transA</span><span class="pl-k">*=</span>(e<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]}<span class="pl-k">else</span> e<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">*=</span><span class="pl-c1">2</span>,<span class="pl-v">this</span>.<span class="pl-en">setTickPositions</span>());<span class="pl-k">if</span>(<span class="pl-en">s</span>(d)){<span class="pl-k">for</span>(a<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;a<span class="pl-k">--</span>;)(d<span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">||</span>d<span class="pl-k">&lt;=</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">finalTickAmt</span><span class="pl-k">=</span>x}},<span class="pl-en">setScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b;<span class="pl-v">this</span>.<span class="pl-smi">oldMin</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>;<span class="pl-v">this</span>.<span class="pl-smi">oldMax</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">max</span>;<span class="pl-v">this</span>.<span class="pl-smi">oldAxisLength</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span>;<span class="pl-v">this</span>.<span class="pl-en">setAxisSize</span>();</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">oldAxisLength</span>;<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">isDirty</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">isDirty</span>)a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(b<span class="pl-k">||</span>a<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">forceRedraw</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">userMin</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">oldUserMin</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">userMax</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">oldUserMax</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">alignToOthers</span>()){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">resetStacks</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">resetStacks</span>(),<span class="pl-v">this</span>.<span class="pl-smi">forceRedraw</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-v">this</span>.<span class="pl-en">getSeriesExtremes</span>(),<span class="pl-v">this</span>.<span class="pl-en">setTickInterval</span>(),<span class="pl-v">this</span>.<span class="pl-smi">oldUserMin</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">userMin</span>,<span class="pl-v">this</span>.<span class="pl-smi">oldUserMax</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">userMax</span>,<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">isDirty</span>)<span class="pl-v">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">oldMin</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">oldMax</span>}<span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-smi">cleanStacks</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-en">cleanStacks</span>()},<span class="pl-en">setExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-en">o</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">n</span>(<span class="pl-smi">f</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">kdTree</span>});e<span class="pl-k">=</span><span class="pl-en">q</span>(e,{min<span class="pl-k">:</span>a,max<span class="pl-k">:</span>b});<span class="pl-en">G</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>setExtremes<span class="pl-pds">&quot;</span></span>,e,<span class="pl-k">function</span>(){<span class="pl-smi">f</span>.<span class="pl-smi">userMin</span><span class="pl-k">=</span>a;<span class="pl-smi">f</span>.<span class="pl-smi">userMax</span><span class="pl-k">=</span>b;<span class="pl-smi">f</span>.<span class="pl-smi">eventArgs</span><span class="pl-k">=</span>e;c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">redraw</span>(d)})},<span class="pl-en">zoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMax</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-en">I</span>(c,<span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">min</span>,c)),e<span class="pl-k">=</span><span class="pl-en">t</span>(d,<span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">max</span>,d));<span class="pl-v">this</span>.<span class="pl-smi">allowZoomOutside</span><span class="pl-k">||</span>(<span class="pl-en">s</span>(c)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span>f<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>f),<span class="pl-en">s</span>(d)<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>e));<span class="pl-v">this</span>.<span class="pl-smi">displayBtn</span><span class="pl-k">=</span>a<span class="pl-k">!==</span>x<span class="pl-k">||</span>b<span class="pl-k">!==</span>x;<span class="pl-v">this</span>.<span class="pl-en">setExtremes</span>(a,b,<span class="pl-k">!</span><span class="pl-c1">1</span>,x,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">setAxisSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetLeft</span><span class="pl-k">||</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,e<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>c<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">offsetRight</span><span class="pl-k">||</span><span class="pl-c1">0</span>)),f<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">height</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotHeight</span>),g<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">top</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>),b<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">left</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span>c),c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>%<span class="pl-k">$</span><span class="pl-pds">/</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">test</span>(f)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">parseFloat</span>(f)<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">plotHeight</span>));<span class="pl-smi">c</span>.<span class="pl-c1">test</span>(g)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">parseFloat</span>(g)<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>));<span class="pl-v">this</span>.<span class="pl-c1">left</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>g;<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>f;<span class="pl-v">this</span>.<span class="pl-c1">bottom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span>f<span class="pl-k">-</span>g;<span class="pl-v">this</span>.<span class="pl-c1">right</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span>e<span class="pl-k">-</span>b;<span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">=</span><span class="pl-en">t</span>(d<span class="pl-k">?</span>e<span class="pl-k">:</span>f,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span>d<span class="pl-k">?</span>b<span class="pl-k">:</span>g},<span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isLog</span>;<span class="pl-k">return</span>{min<span class="pl-k">:</span>a<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-en">wa</span>(<span class="pl-en">oa</span>(<span class="pl-v">this</span>.<span class="pl-smi">min</span>))<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>,max<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-en">wa</span>(<span class="pl-en">oa</span>(<span class="pl-v">this</span>.<span class="pl-smi">max</span>))<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">max</span>,dataMin<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>,dataMax<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">dataMax</span>,userMin<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">userMin</span>,userMax<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">userMax</span>}},<span class="pl-en">getThreshold</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isLog</span>,c<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-en">oa</span>(<span class="pl-v">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>,b<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-en">oa</span>(<span class="pl-v">this</span>.<span class="pl-smi">max</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">max</span>;a<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>a<span class="pl-k">=</span>b<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>b<span class="pl-k">:</span>c<span class="pl-k">:</span>c<span class="pl-k">&gt;</span>a<span class="pl-k">?</span>a<span class="pl-k">=</span>c<span class="pl-k">:</span>b<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)},<span class="pl-en">autoLabelAlign</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span>(<span class="pl-en">o</span>(a,<span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">side</span><span class="pl-k">*</span><span class="pl-c1">90</span><span class="pl-k">+</span><span class="pl-c1">720</span>)<span class="pl-k">%</span><span class="pl-c1">360</span>;<span class="pl-k">return</span> a<span class="pl-k">&gt;</span><span class="pl-c1">15</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">165</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">195</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">345</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},<span class="pl-en">unsquish</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">ticks</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span>,</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span>d,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">/</span>(((<span class="pl-v">this</span>.<span class="pl-smi">categories</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">/</span>d),g,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span>,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>,a[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">label</span>),k,j<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,l,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">/=</span>f<span class="pl-k">||</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span>a<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-en">ra</span>(a)<span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> a<span class="pl-k">*</span>d};c<span class="pl-k">?</span>(l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">step</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">s</span>(h)<span class="pl-k">?</span>[h]<span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">autoRotationLimit</span>,<span class="pl-c1">80</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">autoRotation</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(l,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-k">if</span>(a<span class="pl-k">===</span>h<span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-k">-</span><span class="pl-c1">90</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-c1">90</span>)k<span class="pl-k">=</span><span class="pl-en">m</span>(<span class="pl-en">Q</span>(<span class="pl-smi">i</span>.<span class="pl-smi">h</span><span class="pl-k">/</span><span class="pl-en">pa</span>(ia<span class="pl-k">*</span>a))),b<span class="pl-k">=</span>k<span class="pl-k">+</span><span class="pl-en">Q</span>(a<span class="pl-k">/</span><span class="pl-c1">360</span>),b<span class="pl-k">&lt;</span>j<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>b,g<span class="pl-k">=</span>a,e<span class="pl-k">=</span>k)})<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">step</span><span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-en">m</span>(<span class="pl-smi">i</span>.<span class="pl-smi">h</span>));<span class="pl-v">this</span>.<span class="pl-smi">autoRotation</span><span class="pl-k">=</span>l;<span class="pl-v">this</span>.<span class="pl-smi">labelRotation</span><span class="pl-k">=</span><span class="pl-en">o</span>(g,h);<span class="pl-k">return</span> e},<span class="pl-en">renderUnsquish</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">ticks</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">margin</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">categories</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">slotWidth</span><span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">step</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">/</span>h<span class="pl-k">||!</span>f<span class="pl-k">&amp;&amp;</span>(g[<span class="pl-c1">3</span>]<span class="pl-k">&amp;&amp;</span>g[<span class="pl-c1">3</span>]<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">spacing</span>[<span class="pl-c1">3</span>]<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">*</span><span class="pl-c1">0.33</span>),i<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">1</span>,<span class="pl-en">B</span>(g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">e</span>.<span class="pl-smi">padding</span><span class="pl-k">||</span><span class="pl-c1">5</span>))),k<span class="pl-k">=</span>{},h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>,d[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">0</span>].<span class="pl-c1">label</span>),j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-smi">textOverflow</span>,l,m<span class="pl-k">=</span><span class="pl-c1">0</span>,p,u;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">ta</span>(<span class="pl-smi">e</span>.<span class="pl-smi">rotation</span>))<span class="pl-smi">k</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">rotation</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">autoRotation</span>)<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>((a<span class="pl-k">=</span>d[a])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">labelLength</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">m)m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">labelLength</span>}),m<span class="pl-k">&gt;</span>i<span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&gt;</span><span class="pl-smi">h</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">labelRotation</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">labelRotation</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>{width<span class="pl-k">:</span>i<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},<span class="pl-k">!</span>j)){<span class="pl-smi">l</span>.<span class="pl-smi">textOverflow</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>clip<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;</span>p<span class="pl-k">--</span>;)<span class="pl-k">if</span>(u<span class="pl-k">=</span>c[p],i<span class="pl-k">=</span>d[u].<span class="pl-c1">label</span>)<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-smi">styles</span>.<span class="pl-smi">textOverflow</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>ellipsis<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">css</span>({textOverflow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clip<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">i</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">/</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>(<span class="pl-smi">h</span>.<span class="pl-smi">h</span><span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-smi">f</span>)<span class="pl-k">||</span>d[u].<span class="pl-smi">labelLength</span><span class="pl-k">&gt;</span>g)<span class="pl-smi">i</span>.<span class="pl-smi">specCss</span><span class="pl-k">=</span>{textOverflow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ellipsis<span class="pl-pds">&quot;</span></span>}}<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>{width<span class="pl-k">:</span>(m<span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">*</span><span class="pl-c1">0.5</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">*</span><span class="pl-c1">0.33</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartHeight</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},<span class="pl-k">!</span>j))<span class="pl-smi">l</span>.<span class="pl-smi">textOverflow</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ellipsis<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">align</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">autoLabelAlign</span>(<span class="pl-v">this</span>.<span class="pl-smi">labelRotation</span>))<span class="pl-smi">k</span>.<span class="pl-c1">align</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">labelAlign</span>;<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>(a<span class="pl-k">=</span>d[a])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">label</span>;<span class="pl-k">if</span>(b)<span class="pl-smi">b</span>.<span class="pl-en">attr</span>(k),l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-en">y</span>(l,<span class="pl-smi">b</span>.<span class="pl-smi">specCss</span>)),<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">specCss</span>,<span class="pl-smi">a</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">rotation</span>});<span class="pl-v">this</span>.<span class="pl-smi">tickRotCorr</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rotCorr</span>(<span class="pl-smi">h</span>.<span class="pl-smi">b</span>,<span class="pl-v">this</span>.<span class="pl-smi">labelRotation</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">side</span><span class="pl-k">!==</span><span class="pl-c1">0</span>)},<span class="pl-en">hasData</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">hasVisibleSeries</span><span class="pl-k">||</span><span class="pl-en">s</span>(<span class="pl-v">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-v">this</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;!!</span><span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span>},<span class="pl-en">getOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ticks</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">side</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>][h]<span class="pl-k">:</span>h,k,j,l<span class="pl-k">=</span><span class="pl-c1">0</span>,m,p<span class="pl-k">=</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">title</span>,r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">labels</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">opposite</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">axisOffset</span>,</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">clipOffset</span>,<span class="pl-c1">V</span><span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>][h],q,ca<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axisParent</span>;k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">hasData</span>();<span class="pl-smi">a</span>.<span class="pl-smi">showAxis</span><span class="pl-k">=</span>j<span class="pl-k">=</span>k<span class="pl-k">||</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">showEmpty</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">staggerLines</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span>)<span class="pl-smi">a</span>.<span class="pl-smi">gridGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>grid<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">gridZIndex</span><span class="pl-k">||</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(ca),<span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>axis<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">2</span>}).<span class="pl-c1">add</span>(ca),<span class="pl-smi">a</span>.<span class="pl-smi">labelGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>axis-labels<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">7</span>}).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">coll</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-labels<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(ca);<span class="pl-k">if</span>(k<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">isLinked</span>){<span class="pl-k">if</span>(<span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){f[b]<span class="pl-k">?</span>f[b].<span class="pl-en">addLabel</span>()<span class="pl-k">:</span>f[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qa</span>(a,b)}),<span class="pl-smi">a</span>.<span class="pl-en">renderUnsquish</span>(),<span class="pl-smi">r</span>.<span class="pl-smi">reserveSpace</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>h<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">||</span>{<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>}[h]<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-en">t</span>(f[a].<span class="pl-en">getLabelSize</span>(),<span class="pl-c1">F</span>)}),<span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span>)<span class="pl-c1">F</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span>,<span class="pl-smi">a</span>.<span class="pl-smi">labelOffset</span><span class="pl-k">=</span><span class="pl-c1">F</span><span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(q <span class="pl-k">in</span> f)f[q].<span class="pl-en">destroy</span>(),<span class="pl-k">delete</span> f[q];<span class="pl-k">if</span>(u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-c1">text</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-smi">enabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>)<span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">text</span>(<span class="pl-smi">u</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">u</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>,rotation<span class="pl-k">:</span><span class="pl-smi">u</span>.<span class="pl-smi">rotation</span><span class="pl-k">||</span><span class="pl-c1">0</span>,align<span class="pl-k">:</span><span class="pl-smi">u</span>.<span class="pl-c1">textAlign</span><span class="pl-k">||</span>{low<span class="pl-k">:</span>w<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,middle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,high<span class="pl-k">:</span>w<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">u</span>.<span class="pl-c1">align</span>]}).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">coll</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>-title<span class="pl-pds">&quot;</span></span>).<span class="pl-en">css</span>(<span class="pl-smi">u</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span>),<span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(j)l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>.<span class="pl-en">getBBox</span>()[g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>],m<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">offset</span>,p<span class="pl-k">=</span><span class="pl-en">s</span>(m)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">u</span>.<span class="pl-smi">margin</span>,g<span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">10</span>);<span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>[j<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>)}<span class="pl-smi">a</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-c1">V</span><span class="pl-k">*</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">offset</span>,<span class="pl-c1">A</span>[h]);<span class="pl-smi">a</span>.<span class="pl-smi">tickRotCorr</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickRotCorr</span><span class="pl-k">||</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>};c<span class="pl-k">=</span>h<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">tickRotCorr</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-c1">0</span>;g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">F</span>)<span class="pl-k">+</span>p<span class="pl-k">+</span>(<span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">V</span><span class="pl-k">*</span>(g<span class="pl-k">?</span><span class="pl-en">o</span>(<span class="pl-smi">r</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-smi">tickRotCorr</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-c1">x</span>)<span class="pl-k">-</span>c);<span class="pl-smi">a</span>.<span class="pl-smi">axisTitleMargin</span><span class="pl-k">=</span><span class="pl-en">o</span>(m,g);<span class="pl-c1">A</span>[h]<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">A</span>[h],<span class="pl-smi">a</span>.<span class="pl-smi">axisTitleMargin</span><span class="pl-k">+</span>l<span class="pl-k">+</span><span class="pl-c1">V</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">offset</span>,g);d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">offset</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-en">ea</span>(<span class="pl-smi">d</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">*</span><span class="pl-c1">2</span>;b[i]<span class="pl-k">=</span><span class="pl-en">t</span>(b[i],d)},<span class="pl-en">getLinePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">opposite</span>,</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">offset</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">left</span><span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">bottom</span><span class="pl-k">-</span>(c<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;c<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">crispLine</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">left</span><span class="pl-k">:</span>f,e<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">top</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">right</span><span class="pl-k">:</span>f,e<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">bottom</span>],a)},<span class="pl-en">getTitlePosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">left</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">top</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span>,f<span class="pl-k">=</span>a<span class="pl-k">?</span>b<span class="pl-k">:</span>c,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">opposite</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">offset</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-c1">12</span>),d<span class="pl-k">=</span>{low<span class="pl-k">:</span>f<span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d),middle<span class="pl-k">:</span>f<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,high<span class="pl-k">:</span>f<span class="pl-k">+</span>(a<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">0</span>)}[<span class="pl-smi">e</span>.<span class="pl-c1">align</span>],b<span class="pl-k">=</span>(a<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">:</span>b)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line">(a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(g<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">axisTitleMargin</span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-smi">side</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span>j<span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">return</span>{x<span class="pl-k">:</span>a<span class="pl-k">?</span>d<span class="pl-k">+</span>i<span class="pl-k">:</span>b<span class="pl-k">+</span>(g<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>h<span class="pl-k">+</span>i,y<span class="pl-k">:</span>a<span class="pl-k">?</span>b<span class="pl-k">+</span>k<span class="pl-k">-</span>(g<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>h<span class="pl-k">:</span>d<span class="pl-k">+</span>k}},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isLinked</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ticks</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">minorTicks</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alternateBands</span>,l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">stackLabels</span>,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">alternateGridColor</span>,p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickmarkOffset</span>,u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">lineWidth</span>,r,o<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">a</span>.<span class="pl-smi">oldMin</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">a</span>.<span class="pl-smi">oldMin</span>),w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">showAxis</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">globalAnimation</span>,t,q;<span class="pl-smi">a</span>.<span class="pl-smi">labelEdge</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">overlap</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-en">n</span>([i,k,j],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)a[b].<span class="pl-smi">isActive</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">hasData</span>()<span class="pl-k">||</span>f){<span class="pl-smi">a</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">categories</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-en">getMinorTickPositions</span>(),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){k[b]<span class="pl-k">||</span>(k[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qa</span>(a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>minor<span class="pl-pds">&quot;</span></span>));o<span class="pl-k">&amp;&amp;</span>k[b].<span class="pl-smi">isNew</span><span class="pl-k">&amp;&amp;</span>k[b].<span class="pl-en">render</span>(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);k[b].<span class="pl-en">render</span>(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)});<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">n</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>f<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>)i[b]<span class="pl-k">||</span>(i[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qa</span>(a,b)),o<span class="pl-k">&amp;&amp;</span>i[b].<span class="pl-smi">isNew</span><span class="pl-k">&amp;&amp;</span>i[b].<span class="pl-en">render</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">0.1</span>),i[b].<span class="pl-en">render</span>(c)}),p<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">single</span>)))i[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>(i[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qa</span>(a,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)),i[<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">render</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>);m<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){q<span class="pl-k">=</span>g[d<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span>x<span class="pl-k">?</span>g[d<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>p<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">-</span>p;<span class="pl-k">if</span>(d<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">polar</span><span class="pl-k">?</span><span class="pl-k">-</span>p<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line">p))j[c]<span class="pl-k">||</span>(j[c]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">v.PlotLineOrBand</span>(a)),t<span class="pl-k">=</span>c<span class="pl-k">+</span>p,j[c].<span class="pl-c1">options</span><span class="pl-k">=</span>{from<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-en">oa</span>(t)<span class="pl-k">:</span>t,to<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-en">oa</span>(q)<span class="pl-k">:</span>q,color<span class="pl-k">:</span>m},j[c].<span class="pl-en">render</span>(),j[c].<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">_addedPlotLB</span>)<span class="pl-en">n</span>((<span class="pl-smi">d</span>.<span class="pl-smi">plotLines</span><span class="pl-k">||</span>[]).<span class="pl-c1">concat</span>(<span class="pl-smi">d</span>.<span class="pl-smi">plotBands</span><span class="pl-k">||</span>[]),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">addPlotBandOrLine</span>(b)}),<span class="pl-smi">a</span>.<span class="pl-smi">_addedPlotLB</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-en">n</span>([i,k,j],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c,d,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">A</span><span class="pl-k">?</span><span class="pl-c1">A</span>.<span class="pl-smi">duration</span><span class="pl-k">||</span><span class="pl-c1">500</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-k">!</span>a[c].<span class="pl-smi">isActive</span>)a[c].<span class="pl-en">render</span>(c,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>),a[c].<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(c);<span class="pl-en">Na</span>(<span class="pl-k">function</span>(){<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;d<span class="pl-k">--</span>;)a[e[d]]<span class="pl-k">&amp;&amp;!</span>a[e[d]].<span class="pl-smi">isActive</span><span class="pl-k">&amp;&amp;</span>(a[e[d]].<span class="pl-en">destroy</span>(),<span class="pl-k">delete</span> a[e[d]])},a<span class="pl-k">===</span>j<span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span>f<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>f)});<span class="pl-k">if</span>(u)r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getLinePath</span>(u),<span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>r})<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">path</span>(r).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">lineColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>u,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span>),<span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span>[w<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span>w)h[<span class="pl-smi">h</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">a</span>.<span class="pl-en">getTitlePosition</span>()),<span class="pl-smi">h</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">renderStackTotals</span>();<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">redraw</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">render</span>(),<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotLinesAndBands</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">render</span>()}));<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">stacks</span>,d,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLinesAndBands</span>;</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">||</span><span class="pl-en">W</span>(b);<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-en">eb</span>(c[d]),c[d]<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">n</span>([<span class="pl-smi">b</span>.<span class="pl-smi">ticks</span>,<span class="pl-smi">b</span>.<span class="pl-smi">minorTicks</span>,<span class="pl-smi">b</span>.<span class="pl-smi">alternateBands</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">eb</span>(a)});<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;a<span class="pl-k">--</span>;)e[a].<span class="pl-en">destroy</span>();<span class="pl-en">n</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b[a]<span class="pl-k">&amp;&amp;</span>(b[a]<span class="pl-k">=</span>b[a].<span class="pl-en">destroy</span>())});<span class="pl-v">this</span>.<span class="pl-smi">cross</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">drawCrosshair</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">crosshair</span>,e,f;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">crosshair</span><span class="pl-k">||</span>(<span class="pl-en">s</span>(b)<span class="pl-k">||!</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">snap</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.<span class="pl-en">hideCrosshair</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">snap</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-en">s</span>(b)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">plotX</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotY</span>)<span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isRadial</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">getPlotLinePath</span>(<span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">stackY</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>))<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">getPlotLinePath</span>(<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c)<span class="pl-k">||</span><span class="pl-c1">null</span>,c<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-v">this</span>.<span class="pl-en">hideCrosshair</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">categories</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isRadial</span>,f<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span>,e<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">transA</span><span class="pl-k">:</span><span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">cross</span>)<span class="pl-v">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">attr</span>({d<span class="pl-k">:</span>c,visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f});<span class="pl-k">else</span>{e<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f,stroke<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">||</span>(e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(155,200,255,0.2)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>),zIndex<span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span>,<span class="pl-c1">2</span>)};<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">dashStyle</span>)<span class="pl-smi">e</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dashStyle</span>;<span class="pl-v">this</span>.<span class="pl-smi">cross</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(c).<span class="pl-en">attr</span>(e).<span class="pl-c1">add</span>()}},</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-en">hideCrosshair</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">cross</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">hide</span>()}};<span class="pl-en">q</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>);<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getLogTickPositions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span>,g<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-v">this</span>.<span class="pl-smi">_minorAutoInterval</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span><span class="pl-c1">0.5</span>)a<span class="pl-k">=</span><span class="pl-en">B</span>(a),g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getLinearTickPositions</span>(a,b,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span><span class="pl-c1">0.08</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">ea</span>(b),h,i,k,j,l,e<span class="pl-k">=</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0.3</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>]<span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0.15</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>]<span class="pl-k">:</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>];f<span class="pl-k">&lt;</span>c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>l;f<span class="pl-k">++</span>){i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>i<span class="pl-k">&amp;&amp;!</span>l;h<span class="pl-k">++</span>)k<span class="pl-k">=</span><span class="pl-en">Ta</span>(<span class="pl-en">oa</span>(f)<span class="pl-k">*</span>e[h]),k<span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>d<span class="pl-k">||</span>j<span class="pl-k">&lt;=</span>c)<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(j),j<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),j<span class="pl-k">=</span>k}<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-en">oa</span>(b),c<span class="pl-k">=</span><span class="pl-en">oa</span>(c),a<span class="pl-k">=</span>e[d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>minorTickInterval<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>tickInterval<span class="pl-pds">&quot;</span></span>],a<span class="pl-k">=</span><span class="pl-en">o</span>(a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>a,<span class="pl-v">this</span>.<span class="pl-smi">_minorAutoInterval</span>,(c<span class="pl-k">-</span>b)<span class="pl-k">*</span>(<span class="pl-smi">e</span>.<span class="pl-smi">tickPixelInterval</span><span class="pl-k">/</span>(d<span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">1</span>))<span class="pl-k">/</span>((d<span class="pl-k">?</span>f<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">tickPositions</span>.<span class="pl-c1">length</span><span class="pl-k">:</span>f)<span class="pl-k">||</span><span class="pl-c1">1</span>)),a<span class="pl-k">=</span><span class="pl-en">ub</span>(a,<span class="pl-c1">null</span>,<span class="pl-c1">H</span>.<span class="pl-en">pow</span>(<span class="pl-c1">10</span>,<span class="pl-en">ea</span>(<span class="pl-c1">H</span>.<span class="pl-en">log</span>(a)<span class="pl-k">/</span><span class="pl-c1">H</span>.<span class="pl-c1">LN10</span>))),g<span class="pl-k">=</span><span class="pl-en">Ea</span>(<span class="pl-v">this</span>.<span class="pl-en">getLinearTickPositions</span>(a,b,c),Ta),<span class="pl-k">!</span>d)<span class="pl-v">this</span>.<span class="pl-smi">_minorAutoInterval</span><span class="pl-k">=</span>a<span class="pl-k">/</span><span class="pl-c1">5</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-v">this</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> g};<span class="pl-k">var</span> Jb<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">Tooltip</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>)};<span class="pl-smi">Jb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">borderWidth</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>,e<span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-smi">d</span>.<span class="pl-smi">padding</span>);<span class="pl-v">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">crosshairs</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">now</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-v">this</span>.<span class="pl-smi">isHidden</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">label</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">shape</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>callout<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-smi">b</span>.<span class="pl-smi">useHTML</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tooltip<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({padding<span class="pl-k">:</span>e,fill<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">backgroundColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c,r<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">borderRadius</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">8</span>}).<span class="pl-en">css</span>(d).<span class="pl-en">css</span>({padding<span class="pl-k">:</span><span class="pl-c1">0</span>}).<span class="pl-c1">add</span>().<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">9999</span>});ja<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">shadow</span>(<span class="pl-smi">b</span>.<span class="pl-smi">shadow</span>);<span class="pl-v">this</span>.<span class="pl-smi">shared</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">shared</span>},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">label</span>)<span class="pl-v">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">destroy</span>();<span class="pl-c1">clearTimeout</span>(<span class="pl-v">this</span>.<span class="pl-smi">hideTimer</span>);<span class="pl-c1">clearTimeout</span>(<span class="pl-v">this</span>.<span class="pl-smi">tooltipTimeout</span>)},<span class="pl-en">move</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">now</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">isHidden</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">Q</span>(a<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Q</span>(b<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1</span>),h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">followPointer</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>;<span class="pl-en">q</span>(f,{x<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>a)<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">:</span>a,y<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>b,anchorX<span class="pl-k">:</span>h<span class="pl-k">?</span>x<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-smi">anchorX</span><span class="pl-k">+</span>c)<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">:</span>c,anchorY<span class="pl-k">:</span>h<span class="pl-k">?</span>x<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-smi">anchorY</span><span class="pl-k">+</span>d)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>d});<span class="pl-smi">e</span>.<span class="pl-c1">label</span>.<span class="pl-en">attr</span>(f);<span class="pl-k">if</span>(g)<span class="pl-c1">clearTimeout</span>(<span class="pl-v">this</span>.<span class="pl-smi">tooltipTimeout</span>),<span class="pl-v">this</span>.<span class="pl-smi">tooltipTimeout</span><span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">move</span>(a,b,c,d)},<span class="pl-c1">32</span>)},<span class="pl-en">hide</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-c1">clearTimeout</span>(<span class="pl-v">this</span>.<span class="pl-smi">hideTimer</span>);a<span class="pl-k">=</span><span class="pl-en">o</span>(a,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">hideDelay</span>,<span class="pl-c1">500</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">isHidden</span>)<span class="pl-v">this</span>.<span class="pl-smi">hideTimer</span><span class="pl-k">=</span><span class="pl-en">Na</span>(<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">label</span>[a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>fadeOut<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]();<span class="pl-smi">b</span>.<span class="pl-smi">isHidden</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},a)},<span class="pl-en">getAnchor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">inverted</span>,</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>,k,j,a<span class="pl-k">=</span><span class="pl-en">qa</span>(a);c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">tooltipPos</span>;<span class="pl-v">this</span>.<span class="pl-smi">followPointer</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">chartX</span><span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">pointer</span>.<span class="pl-c1">normalize</span>(b)),c<span class="pl-k">=</span>[<span class="pl-smi">b</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">b</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span>f]);c<span class="pl-k">||</span>(<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">yAxis</span>;j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">xAxis</span>;h<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">?</span><span class="pl-smi">j</span>.<span class="pl-c1">left</span><span class="pl-k">-</span>g<span class="pl-k">:</span><span class="pl-c1">0</span>);i<span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotLow</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotLow</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotHigh</span>)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotY</span>)<span class="pl-k">+</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-c1">top</span><span class="pl-k">-</span>f<span class="pl-k">:</span><span class="pl-c1">0</span>)}),h<span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,i<span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span>[e<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>i<span class="pl-k">:</span>h,<span class="pl-v">this</span>.<span class="pl-smi">shared</span><span class="pl-k">&amp;&amp;!</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span>f<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>h<span class="pl-k">:</span>i]);<span class="pl-k">return</span> <span class="pl-en">Ea</span>(c,<span class="pl-c1">B</span>)},<span class="pl-en">getPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">distance</span>,</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span>{},g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">h</span><span class="pl-k">||</span><span class="pl-c1">0</span>,h,i<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-smi">chartHeight</span>,b,<span class="pl-smi">c</span>.<span class="pl-smi">plotY</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span>,<span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span>,<span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>],k<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-smi">chartWidth</span>,a,<span class="pl-smi">c</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">plotWidth</span>],j<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">ttBelow</span>,<span class="pl-smi">d</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">negative</span><span class="pl-k">||!</span><span class="pl-smi">d</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">negative</span>),<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>c<span class="pl-k">&lt;</span>d<span class="pl-k">-</span>e,l<span class="pl-k">=</span>d<span class="pl-k">+</span>e<span class="pl-k">+</span>c<span class="pl-k">&lt;</span>b,m<span class="pl-k">=</span>d<span class="pl-k">-</span>e<span class="pl-k">-</span>c;d<span class="pl-k">+=</span>e;<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;</span>l)f[a]<span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>j<span class="pl-k">&amp;&amp;</span>k)f[a]<span class="pl-k">=</span>m;<span class="pl-k">else</span> <span class="pl-k">if</span>(k)f[a]<span class="pl-k">=</span><span class="pl-en">I</span>(i<span class="pl-k">-</span>c,m<span class="pl-k">-</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>m<span class="pl-k">:</span>m<span class="pl-k">-</span>g);<span class="pl-k">else</span> <span class="pl-k">if</span>(l)f[a]<span class="pl-k">=</span><span class="pl-en">t</span>(h,d<span class="pl-k">+</span>g<span class="pl-k">+</span>c<span class="pl-k">&gt;</span>b<span class="pl-k">?</span>d<span class="pl-k">:</span>d<span class="pl-k">+</span>g);<span class="pl-k">else</span> <span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> g;d<span class="pl-k">&lt;</span>e<span class="pl-k">||</span>d<span class="pl-k">&gt;</span>b<span class="pl-k">-</span>e<span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>f[a]<span class="pl-k">=</span>d<span class="pl-k">&lt;</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>d<span class="pl-k">&gt;</span>b<span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">?</span>b<span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span>d<span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">return</span> g},<span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">i;i<span class="pl-k">=</span>k;k<span class="pl-k">=</span>b;h<span class="pl-k">=</span>a},<span class="pl-en">u</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">l</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">0</span>,i)<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">0</span>,k)<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">p</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">u</span>())<span class="pl-k">:</span>h<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span>(<span class="pl-en">p</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">u</span>())};(<span class="pl-smi">d</span>.<span class="pl-smi">inverted</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">p</span>();<span class="pl-en">u</span>();<span class="pl-k">return</span> f},<span class="pl-en">defaultFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">points</span><span class="pl-k">||</span><span class="pl-en">qa</span>(<span class="pl-v">this</span>),c;c<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">tooltipFooterHeaderFormatter</span>(b[<span class="pl-c1">0</span>])];c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-en">bodyFormatter</span>(b));<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-en">tooltipFooterHeaderFormatter</span>(b[<span class="pl-c1">0</span>],<span class="pl-k">!</span><span class="pl-c1">0</span>));<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">refresh</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,f,g,h,i<span class="pl-k">=</span>{},k,j<span class="pl-k">=</span>[];k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">formatter</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">defaultFormatter</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span>,l,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">shared</span>;</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">clearTimeout</span>(<span class="pl-v">this</span>.<span class="pl-smi">hideTimer</span>);<span class="pl-v">this</span>.<span class="pl-smi">followPointer</span><span class="pl-k">=</span><span class="pl-en">qa</span>(a)[<span class="pl-c1">0</span>].<span class="pl-smi">series</span>.<span class="pl-smi">tooltipOptions</span>.<span class="pl-smi">followPointer</span>;h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getAnchor</span>(a,b);f<span class="pl-k">=</span>h[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>h[<span class="pl-c1">1</span>];m<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">=</span>a,i<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()}),<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">j</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-en">getLabelConfig</span>())}),i<span class="pl-k">=</span>{x<span class="pl-k">:</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">category</span>,y<span class="pl-k">:</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">y</span>},<span class="pl-smi">i</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>j,<span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>,a<span class="pl-k">=</span>a[<span class="pl-c1">0</span>])<span class="pl-k">:</span>i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getLabelConfig</span>();k<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">call</span>(i,<span class="pl-v">this</span>);i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;<span class="pl-v">this</span>.<span class="pl-smi">distance</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">i</span>.<span class="pl-smi">tooltipOptions</span>.<span class="pl-smi">distance</span>,<span class="pl-c1">16</span>);k<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">hide</span>()<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-smi">isHidden</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">La</span>(d),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>).<span class="pl-en">show</span>()),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>k}),l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">borderColor</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span>l}),<span class="pl-v">this</span>.<span class="pl-en">updatePosition</span>({plotX<span class="pl-k">:</span>f,plotY<span class="pl-k">:</span>g,negative<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">negative</span>,ttBelow<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">ttBelow</span>,h<span class="pl-k">:</span>h[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>}),<span class="pl-v">this</span>.<span class="pl-smi">isHidden</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">G</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>tooltipRefresh<span class="pl-pds">&quot;</span></span>,{text<span class="pl-k">:</span>k,x<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">plotLeft</span>,y<span class="pl-k">:</span>g<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">plotTop</span>,borderColor<span class="pl-k">:</span>l})},<span class="pl-en">updatePosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">label</span>,c<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">positioner</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">getPosition</span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-smi">c</span>.<span class="pl-c1">width</span>,<span class="pl-smi">c</span>.<span class="pl-c1">height</span>,a);<span class="pl-v">this</span>.<span class="pl-c1">move</span>(<span class="pl-en">B</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span>),<span class="pl-en">B</span>(<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotY</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)},<span class="pl-en">getXDateFormat</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dateTimeLabelFormats</span>,e<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">closestPointRange</span>,f,g<span class="pl-k">=</span>{millisecond<span class="pl-k">:</span><span class="pl-c1">15</span>,second<span class="pl-k">:</span><span class="pl-c1">12</span>,minute<span class="pl-k">:</span><span class="pl-c1">9</span>,hour<span class="pl-k">:</span><span class="pl-c1">6</span>,day<span class="pl-k">:</span><span class="pl-c1">3</span>},h,i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>millisecond<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(e){h<span class="pl-k">=</span><span class="pl-en">Oa</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%m-%d %H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-k">for</span>(f <span class="pl-k">in</span> ib){<span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-smi">ib</span>.<span class="pl-smi">week</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">+</span><span class="pl-en">Oa</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%w<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">startOfWeek</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">6</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>00:00:00.000<span class="pl-pds">&quot;</span></span>){f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(ib[f]<span class="pl-k">&gt;</span>e){f<span class="pl-k">=</span>i;<span class="pl-k">break</span>}<span class="pl-k">if</span>(g[f]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">substr</span>(g[f])<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>01-01 00:00:00.000<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">substr</span>(g[f]))<span class="pl-k">break</span>;f<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>f)}f<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>b[f])}<span class="pl-k">else</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">day</span>;<span class="pl-k">return</span> d<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">year</span>},<span class="pl-en">tooltipFooterHeaderFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>footer<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>header<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">tooltipOptions</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xDateFormat</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">xAxis</span>,h<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">options</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-smi">a</span>.<span class="pl-smi">key</span>),c<span class="pl-k">=</span>e[c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Format<span class="pl-pds">&quot;</span></span>];h<span class="pl-k">&amp;&amp;!</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getXDateFormat</span>(a,e,g));h<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{point.key}<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>{point.key:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> <span class="pl-en">Ba</span>(c,{point<span class="pl-k">:</span>a,series<span class="pl-k">:</span>d})},<span class="pl-en">bodyFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">Ea</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">tooltipOptions</span>;<span class="pl-k">return</span>(<span class="pl-smi">c</span>.<span class="pl-smi">pointFormatter</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">point</span>.<span class="pl-smi">tooltipFormatter</span>).<span class="pl-c1">call</span>(<span class="pl-smi">a</span>.<span class="pl-smi">point</span>,<span class="pl-smi">c</span>.<span class="pl-smi">pointFormat</span>)})}};<span class="pl-k">var</span> ka;Wa<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-c1">documentElement</span>.<span class="pl-smi">ontouchstart</span><span class="pl-k">!==</span>x;<span class="pl-k">var</span> Aa<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">Pointer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-en">init</span>(a,b)};<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">events</span>,e<span class="pl-k">=</span>ja<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">zoomType</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>,f;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-smi">zoomX</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>x<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(e);<span class="pl-v">this</span>.<span class="pl-smi">zoomY</span><span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>y<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(e);<span class="pl-v">this</span>.<span class="pl-smi">zoomHor</span><span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">||</span>e<span class="pl-k">&amp;&amp;</span>c;<span class="pl-v">this</span>.<span class="pl-smi">zoomVert</span><span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span>c;<span class="pl-v">this</span>.<span class="pl-smi">hasZoom</span><span class="pl-k">=</span>f<span class="pl-k">||</span>e;<span class="pl-v">this</span>.<span class="pl-smi">runChartClick</span><span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;!!</span><span class="pl-smi">d</span>.<span class="pl-smi">click</span>;<span class="pl-v">this</span>.<span class="pl-smi">pinchDown</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">lastValidTouch</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-smi">v</span>.<span class="pl-smi">Tooltip</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">enabled</span>)<span class="pl-smi">a</span>.<span class="pl-smi">tooltip</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Jb</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>),<span class="pl-v">this</span>.<span class="pl-smi">followTouchMove</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">followTouchMove</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-en">setDOMEvents</span>()},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">z</span>.<span class="pl-c1">event</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span>)<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">srcElement</span>;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">item</span>(<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">changedTouches</span>[<span class="pl-c1">0</span>]<span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-v">this</span>.<span class="pl-smi">chartPosition</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-en">rb</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>);<span class="pl-smi">d</span>.<span class="pl-c1">pageX</span><span class="pl-k">===</span>x<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span>),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">pageX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">pageY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">top</span>);<span class="pl-k">return</span> <span class="pl-en">q</span>(a,{chartX<span class="pl-k">:</span><span class="pl-en">B</span>(c),chartY<span class="pl-k">:</span><span class="pl-en">B</span>(d)})},<span class="pl-en">getCoordinates</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{xAxis<span class="pl-k">:</span>[],yAxis<span class="pl-k">:</span>[]};<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){b[<span class="pl-smi">c</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">push</span>({axis<span class="pl-k">:</span>c,value<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">toValue</span>(a[<span class="pl-smi">c</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartY<span class="pl-pds">&quot;</span></span>])})});<span class="pl-k">return</span> b},<span class="pl-en">runPointActions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,e<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">shared</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>,</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span>,h<span class="pl-k">=</span>[<span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,<span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>],i,k,j<span class="pl-k">=</span>[],l<span class="pl-k">=</span>[],m;<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;!</span>g)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[b].<span class="pl-smi">directTouch</span><span class="pl-k">||!</span>c[b].<span class="pl-c1">options</span>.<span class="pl-smi">stickyTracking</span>)c<span class="pl-k">=</span>[];g<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-smi">noSharedTooltip</span><span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">directTouch</span>)<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">?</span>l<span class="pl-k">=</span>[f]<span class="pl-k">:</span>(<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">noSharedTooltip</span><span class="pl-k">&amp;&amp;</span>e;k<span class="pl-k">=</span><span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">directTouch</span>;<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;!</span>i<span class="pl-k">&amp;&amp;!</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">enableMouseTracking</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">searchPoint</span>(a,<span class="pl-k">!</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">kdDimensions</span><span class="pl-k">===</span><span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-c1">push</span>(m)}),<span class="pl-en">n</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>dist<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>distX<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">typeof</span> a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a[b]<span class="pl-k">&lt;</span>h[c]<span class="pl-k">&amp;&amp;</span>(h[c]<span class="pl-k">=</span>a[b],l[c]<span class="pl-k">=</span>a)})}));<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-c1">length</span>;b<span class="pl-k">--</span>;)(j[b].<span class="pl-smi">clientX</span><span class="pl-k">!==</span>l[<span class="pl-c1">1</span>].<span class="pl-smi">clientX</span><span class="pl-k">||</span>j[b].<span class="pl-smi">series</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(l[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(l[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-smi">prevKDPoint</span><span class="pl-k">||</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isHidden</span>))<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>l[<span class="pl-c1">0</span>].<span class="pl-smi">series</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">refresh</span>(j,a),<span class="pl-en">n</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">onMouseOver</span>(a,b<span class="pl-k">!==</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">directTouch</span><span class="pl-k">&amp;&amp;</span>f<span class="pl-k">||</span>l[<span class="pl-c1">0</span>]))}),<span class="pl-v">this</span>.<span class="pl-smi">prevKDPoint</span><span class="pl-k">=</span>l[<span class="pl-c1">1</span>];<span class="pl-k">else</span>{d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">refresh</span>(l[<span class="pl-c1">0</span>],a);<span class="pl-k">if</span>(<span class="pl-k">!</span>g<span class="pl-k">||!</span><span class="pl-smi">g</span>.<span class="pl-smi">directTouch</span>)l[<span class="pl-c1">0</span>].<span class="pl-en">onMouseOver</span>(a);<span class="pl-v">this</span>.<span class="pl-smi">prevKDPoint</span><span class="pl-k">=</span>l[<span class="pl-c1">0</span>]}<span class="pl-k">else</span> c<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">tooltipOptions</span>.<span class="pl-smi">followPointer</span>,d<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">isHidden</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getAnchor</span>([{}],a),<span class="pl-smi">d</span>.<span class="pl-en">updatePosition</span>({plotX<span class="pl-k">:</span>c[<span class="pl-c1">0</span>],plotY<span class="pl-k">:</span>c[<span class="pl-c1">1</span>]}));</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>)<span class="pl-v">this</span>.<span class="pl-en">_onDocumentMouseMove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">U</span>[ka])<span class="pl-c1">U</span>[ka].<span class="pl-smi">pointer</span>.<span class="pl-en">onDocumentMouseMove</span>(a)},<span class="pl-en">M</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>);<span class="pl-en">n</span>(e<span class="pl-k">?</span>j<span class="pl-k">:</span>[<span class="pl-en">o</span>(l[<span class="pl-c1">1</span>],f)],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>;c<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>colorAxis<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">d</span>){c[d]<span class="pl-k">&amp;&amp;</span>c[d].<span class="pl-en">drawCrosshair</span>(a,b)})})},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverSeries</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoint</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">tooltip</span>,h<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">shared</span><span class="pl-k">?</span>f<span class="pl-k">:</span>e;(a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>h)<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-en">qa</span>(h),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-smi">plotX</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">if</span>(a)<span class="pl-smi">g</span>.<span class="pl-en">refresh</span>(h),e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-en">setState</span>(<span class="pl-smi">e</span>.<span class="pl-smi">state</span>,</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">crosshair</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">crosshair</span>.<span class="pl-smi">snap</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">drawCrosshair</span>(<span class="pl-c1">null</span>,e)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">hideCrosshair</span>()}));<span class="pl-k">else</span>{<span class="pl-k">if</span>(e)<span class="pl-smi">e</span>.<span class="pl-en">onMouseOut</span>();f<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()});<span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-en">onMouseOut</span>();g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">hide</span>(b);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>)<span class="pl-en">W</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>),<span class="pl-v">this</span>.<span class="pl-smi">_onDocumentMouseMove</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">hideCrosshair</span>()});<span class="pl-v">this</span>.<span class="pl-smi">hoverX</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">=</span><span class="pl-c1">null</span>}},<span class="pl-en">scaleGroups</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d;<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){d<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-en">getPlotBox</span>();<span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">group</span>.<span class="pl-en">attr</span>(d),<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-en">attr</span>(d),<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-c1">clip</span>(b<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">clipRect</span><span class="pl-k">:</span><span class="pl-c1">null</span>)),<span class="pl-smi">e</span>.<span class="pl-smi">dataLabelsGroup</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">dataLabelsGroup</span>.<span class="pl-en">attr</span>(d))});<span class="pl-smi">c</span>.<span class="pl-smi">clipRect</span>.<span class="pl-en">attr</span>(b<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">clipBox</span>)},<span class="pl-en">dragStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseIsDown</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>;<span class="pl-smi">b</span>.<span class="pl-smi">cancelClick</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseDownX</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mouseDownX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseDownY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mouseDownY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>},<span class="pl-en">drag</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">zoomHor</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">zoomVert</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span>,</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">l,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">selectionMarker</span>,p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mouseDownX</span>,u<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mouseDownY</span>,r<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">panKey</span><span class="pl-k">&amp;&amp;</span>a[<span class="pl-smi">c</span>.<span class="pl-smi">panKey</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Key<span class="pl-pds">&quot;</span></span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>m<span class="pl-k">||!</span><span class="pl-smi">m</span>.<span class="pl-smi">touch</span>)<span class="pl-k">if</span>(d<span class="pl-k">&lt;</span>h<span class="pl-k">?</span>d<span class="pl-k">=</span>h<span class="pl-k">:</span>d<span class="pl-k">&gt;</span>h<span class="pl-k">+</span>k<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>h<span class="pl-k">+</span>k),e<span class="pl-k">&lt;</span>i<span class="pl-k">?</span>e<span class="pl-k">=</span>i<span class="pl-k">:</span>e<span class="pl-k">&gt;</span>i<span class="pl-k">+</span>j<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>i<span class="pl-k">+</span>j),<span class="pl-v">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(p<span class="pl-k">-</span>d,<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(u<span class="pl-k">-</span>e,<span class="pl-c1">2</span>)),<span class="pl-v">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">&gt;</span><span class="pl-c1">10</span>){l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(p<span class="pl-k">-</span>h,u<span class="pl-k">-</span>i);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">zoomX</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">zoomY</span>)<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;!</span>r<span class="pl-k">&amp;&amp;!</span>m)<span class="pl-v">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">rect</span>(h,i,f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>k,g<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>j,<span class="pl-c1">0</span>).<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">selectionMarkerFill</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(69,114,167,0.25)<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-c1">add</span>();m<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">-=</span>p,<span class="pl-smi">m</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-en">Q</span>(d),x<span class="pl-k">:</span>(d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d)<span class="pl-k">+</span>p}));</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e<span class="pl-k">-</span>u,<span class="pl-smi">m</span>.<span class="pl-en">attr</span>({height<span class="pl-k">:</span><span class="pl-en">Q</span>(d),y<span class="pl-k">:</span>(d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d)<span class="pl-k">+</span>u}));l<span class="pl-k">&amp;&amp;!</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">panning</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">pan</span>(a,<span class="pl-smi">c</span>.<span class="pl-smi">panning</span>)}},<span class="pl-en">drop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasPinched</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">selectionMarker</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>{originalEvent<span class="pl-k">:</span>a,xAxis<span class="pl-k">:</span>[],yAxis<span class="pl-k">:</span>[]},f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">selectionMarker</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span>,k<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span>,j;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">||</span>d)<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">c</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">||</span>b[{xAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoomX<span class="pl-pds">&quot;</span></span>,yAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoomY<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">c</span>.<span class="pl-smi">coll</span>]])){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">horiz</span>,p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">:</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toValue</span>((f<span class="pl-k">?</span>g<span class="pl-k">:</span>h)<span class="pl-k">+</span>p),f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toValue</span>((f<span class="pl-k">?</span>g<span class="pl-k">+</span>i<span class="pl-k">:</span>h<span class="pl-k">+</span>k)<span class="pl-k">-</span>p);e[<span class="pl-smi">c</span>.<span class="pl-smi">coll</span>].<span class="pl-c1">push</span>({axis<span class="pl-k">:</span>c,min<span class="pl-k">:</span><span class="pl-en">I</span>(u,f),max<span class="pl-k">:</span><span class="pl-en">t</span>(u,f)});j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}),j<span class="pl-k">&amp;&amp;</span><span class="pl-en">G</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>selection<span class="pl-pds">&quot;</span></span>,e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-en">zoom</span>(<span class="pl-en">q</span>(a,d<span class="pl-k">?</span>{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">:</span><span class="pl-c1">null</span>))});<span class="pl-v">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">selectionMarker</span>.<span class="pl-en">destroy</span>();d<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">scaleGroups</span>()}<span class="pl-k">if</span>(c)<span class="pl-en">L</span>(<span class="pl-smi">c</span>.<span class="pl-smi">container</span>,{cursor<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">_cursor</span>}),<span class="pl-smi">c</span>.<span class="pl-smi">cancelClick</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">&gt;</span><span class="pl-c1">10</span>,<span class="pl-smi">c</span>.<span class="pl-smi">mouseIsDown</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasPinched</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-v">this</span>.<span class="pl-smi">pinchDown</span><span class="pl-k">=</span>[]},<span class="pl-en">onContainerMouseDown</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">a</span>.<span class="pl-smi">preventDefault</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-en">dragStart</span>(a)},<span class="pl-en">onDocumentMouseUp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">U</span>[ka]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span>[ka].<span class="pl-smi">pointer</span>.<span class="pl-en">drop</span>(a)},<span class="pl-en">onDocumentMouseMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartPosition</span>,a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a,c);c<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-c1">reset</span>()},<span class="pl-en">onContainerMouseLeave</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">U</span>[ka];<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">relatedTarget</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">toElement</span>))<span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-c1">reset</span>(),<span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-smi">chartPosition</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">onContainerMouseMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">s</span>(ka)<span class="pl-k">||!</span><span class="pl-c1">U</span>[ka].<span class="pl-smi">mouseIsDown</span>)ka<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">index</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">a</span>.<span class="pl-smi">returnValue</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseIsDown</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">drag</span>(a);(<span class="pl-v">this</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>))<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">openMenu</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">runPointActions</span>(a)},<span class="pl-en">inClass</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c;a;){<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-en">J</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(b)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-container<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>}},<span class="pl-en">onTrackerMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hoverSeries</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">relatedTarget</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">toElement</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stickyTracking</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-en">inClass</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tooltip<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-en">inClass</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-series-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">index</span>))<span class="pl-smi">b</span>.<span class="pl-en">onMouseOut</span>()},<span class="pl-en">onContainerClick</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>,a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">b</span>.<span class="pl-smi">cancelClick</span><span class="pl-k">||</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>(<span class="pl-en">G</span>(<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-en">q</span>(a,{point<span class="pl-k">:</span>c})),<span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,a))<span class="pl-k">:</span>(<span class="pl-en">q</span>(a,<span class="pl-v">this</span>.<span class="pl-en">getCoordinates</span>(a)),<span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span>d,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-en">G</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,a)))},<span class="pl-en">setDOMEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>;<span class="pl-smi">b</span>.<span class="pl-smi">onmousedown</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerMouseDown</span>(b)};<span class="pl-smi">b</span>.<span class="pl-en">onmousemove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerMouseMove</span>(b)};<span class="pl-smi">b</span>.<span class="pl-en">onclick</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerClick</span>(b)};<span class="pl-en">M</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">onContainerMouseLeave</span>);Xa<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">M</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">onDocumentMouseUp</span>);<span class="pl-k">if</span>(Wa)<span class="pl-smi">b</span>.<span class="pl-en">ontouchstart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerTouchStart</span>(b)},<span class="pl-smi">b</span>.<span class="pl-en">ontouchmove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerTouchMove</span>(b)},Xa<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">M</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">onDocumentTouchEnd</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-en">W</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">onContainerMouseLeave</span>);Xa<span class="pl-k">||</span>(<span class="pl-en">W</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">onDocumentMouseUp</span>),</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line"><span class="pl-en">W</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">onDocumentTouchEnd</span>));<span class="pl-c1">clearInterval</span>(<span class="pl-v">this</span>.<span class="pl-smi">tooltipTimeout</span>);<span class="pl-k">for</span>(a <span class="pl-k">in</span> <span class="pl-v">this</span>)<span class="pl-v">this</span>[a]<span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-en">q</span>(<span class="pl-smi">v</span>.<span class="pl-smi">Pointer</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">pinchTranslate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){(<span class="pl-v">this</span>.<span class="pl-smi">zoomHor</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">pinchHor</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">pinchTranslateDirection</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,a,b,c,d,e,f);(<span class="pl-v">this</span>.<span class="pl-smi">zoomVert</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">pinchVert</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">pinchTranslateDirection</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,a,b,c,d,e,f)},<span class="pl-en">pinchTranslateDirection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,k<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,j<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j,m<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,p<span class="pl-k">=</span>i[<span class="pl-s"><span class="pl-pds">&quot;</span>plot<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>)],u,r,o<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-c1">1</span>,n<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">inverted</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">bounds</span>[a<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>],t<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span>,q<span class="pl-k">=</span>b[<span class="pl-c1">0</span>][l],s<span class="pl-k">=</span>c[<span class="pl-c1">0</span>][l],v<span class="pl-k">=</span><span class="pl-k">!</span>t<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">1</span>][l],x<span class="pl-k">=</span><span class="pl-k">!</span>t<span class="pl-k">&amp;&amp;</span>c[<span class="pl-c1">1</span>][l],<span class="pl-c1">B</span>,<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">!</span>t<span class="pl-k">&amp;&amp;</span><span class="pl-en">Q</span>(q<span class="pl-k">-</span>v)<span class="pl-k">&gt;</span><span class="pl-c1">20</span><span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-en">Q</span>(s<span class="pl-k">-</span>x)<span class="pl-k">/</span><span class="pl-en">Q</span>(q<span class="pl-k">-</span>v));r<span class="pl-k">=</span>(p<span class="pl-k">-</span>s)<span class="pl-k">/</span>o<span class="pl-k">+</span>q;u<span class="pl-k">=</span>i[<span class="pl-s"><span class="pl-pds">&quot;</span>plot<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>)]<span class="pl-k">/</span>o};<span class="pl-en">c</span>();b<span class="pl-k">=</span>r;b<span class="pl-k">&lt;</span><span class="pl-c1">A</span>.<span class="pl-smi">min</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">min</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>b<span class="pl-k">+</span>u<span class="pl-k">&gt;</span><span class="pl-c1">A</span>.<span class="pl-smi">max</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">max</span><span class="pl-k">-</span>u,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">B</span><span class="pl-k">?</span>(s<span class="pl-k">-=</span><span class="pl-c1">0.8</span><span class="pl-k">*</span>(s<span class="pl-k">-</span>g[k][<span class="pl-c1">0</span>]),t<span class="pl-k">||</span>(x<span class="pl-k">-=</span><span class="pl-c1">0.8</span><span class="pl-k">*</span>(x<span class="pl-k">-</span>g[k][<span class="pl-c1">1</span>])),<span class="pl-en">c</span>())<span class="pl-k">:</span>g[k]<span class="pl-k">=</span>[s,x];n<span class="pl-k">||</span>(f[k]<span class="pl-k">=</span>r<span class="pl-k">-</span>p,f[m]<span class="pl-k">=</span>u);f<span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>o<span class="pl-k">:</span>o;e[m]<span class="pl-k">=</span>u;e[k]<span class="pl-k">=</span>b;d[n<span class="pl-k">?</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>scaleY<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>scaleX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>scale<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j]<span class="pl-k">=</span>o;d[<span class="pl-s"><span class="pl-pds">&quot;</span>translate<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j]<span class="pl-k">=</span>f<span class="pl-k">*</span>p<span class="pl-k">+</span>(s<span class="pl-k">-</span>f<span class="pl-k">*</span>q)},<span class="pl-en">pinch</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pinchDown</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lastValidTouch</span>,h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">hasZoom</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">selectionMarker</span>,k<span class="pl-k">=</span>{},j<span class="pl-k">=</span>f<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">runTrackerClick</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">runChartClick</span>),l<span class="pl-k">=</span>{};<span class="pl-k">if</span>(f<span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-smi">b</span>.<span class="pl-smi">initiated</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">initiated</span><span class="pl-k">&amp;&amp;!</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();<span class="pl-en">Ea</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">normalize</span>(a)});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>)<span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){d[b]<span class="pl-k">=</span>{chartX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>,chartY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>}}),<span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>[d[<span class="pl-c1">0</span>].<span class="pl-smi">chartX</span>,d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">1</span>].<span class="pl-smi">chartX</span>],<span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>[d[<span class="pl-c1">0</span>].<span class="pl-smi">chartY</span>,d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">1</span>].<span class="pl-smi">chartY</span>],<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">zoomEnabled</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>[<span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>],d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">minPixelPadding</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toPixels</span>(<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">min</span>,</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>)),f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toPixels</span>(<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">max</span>,<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>)),g<span class="pl-k">=</span><span class="pl-en">I</span>(e,f),e<span class="pl-k">=</span><span class="pl-en">t</span>(e,f);<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-smi">a</span>.<span class="pl-smi">pos</span>,g<span class="pl-k">-</span>d);<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">len</span>,e<span class="pl-k">+</span>d)}}),<span class="pl-smi">b</span>.<span class="pl-smi">res</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>i)<span class="pl-smi">b</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-en">q</span>({destroy<span class="pl-k">:</span><span class="pl-c1">T</span>,touch<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-smi">c</span>.<span class="pl-smi">plotBox</span>);<span class="pl-smi">b</span>.<span class="pl-en">pinchTranslate</span>(d,e,k,i,l,g);<span class="pl-smi">b</span>.<span class="pl-smi">hasPinched</span><span class="pl-k">=</span>h;<span class="pl-smi">b</span>.<span class="pl-en">scaleGroups</span>(k,l);<span class="pl-k">if</span>(<span class="pl-k">!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">followTouchMove</span><span class="pl-k">&amp;&amp;</span>f<span class="pl-k">===</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.<span class="pl-en">runPointActions</span>(<span class="pl-smi">b</span>.<span class="pl-c1">normalize</span>(a));<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">res</span>)<span class="pl-smi">b</span>.<span class="pl-smi">res</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-v">this</span>.<span class="pl-c1">reset</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">touch</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>;ka<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>;<span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a),<span class="pl-smi">c</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">plotLeft</span>,</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">plotTop</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">openMenu</span><span class="pl-k">?</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">runPointActions</span>(a),<span class="pl-v">this</span>.<span class="pl-en">pinch</span>(a))<span class="pl-k">:</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-c1">reset</span>())<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">pinch</span>(a)},<span class="pl-en">onContainerTouchStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-en">touch</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">onContainerTouchMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-en">touch</span>(a)},<span class="pl-en">onDocumentTouchEnd</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">U</span>[ka]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span>[ka].<span class="pl-smi">pointer</span>.<span class="pl-en">drop</span>(a)}});<span class="pl-k">if</span>(<span class="pl-smi">z</span>.<span class="pl-smi">PointerEvent</span><span class="pl-k">||</span><span class="pl-smi">z</span>.<span class="pl-smi">MSPointerEvent</span>){<span class="pl-k">var</span> sa<span class="pl-k">=</span>{},sb<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">z</span>.<span class="pl-smi">PointerEvent</span>,<span class="pl-en">Ob</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span>[];<span class="pl-smi">b</span>.<span class="pl-en">item</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>[a]};<span class="pl-k">for</span>(a <span class="pl-k">in</span> sa)<span class="pl-smi">sa</span>.<span class="pl-en">hasOwnProperty</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>({pageX<span class="pl-k">:</span>sa[a].<span class="pl-c1">pageX</span>,pageY<span class="pl-k">:</span>sa[a].<span class="pl-c1">pageY</span>,target<span class="pl-k">:</span>sa[a].<span class="pl-c1">target</span>});</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> b},<span class="pl-en">tb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>((<span class="pl-smi">a</span>.<span class="pl-smi">pointerType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>touch<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">pointerType</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">MSPOINTER_TYPE_TOUCH</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span>[ka])<span class="pl-en">d</span>(a),d<span class="pl-k">=</span><span class="pl-c1">U</span>[ka].<span class="pl-smi">pointer</span>,d[b]({type<span class="pl-k">:</span>c,target<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">currentTarget</span>,preventDefault<span class="pl-k">:</span><span class="pl-c1">T</span>,touches<span class="pl-k">:</span><span class="pl-en">Ob</span>()})};<span class="pl-en">q</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">onContainerPointerDown</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">tb</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>onContainerTouchStart<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){sa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>]<span class="pl-k">=</span>{pageX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageX</span>,pageY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageY</span>,target<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">currentTarget</span>}})},<span class="pl-en">onContainerPointerMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">tb</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>onContainerTouchMove<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){sa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>]<span class="pl-k">=</span>{pageX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageX</span>,pageY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageY</span>};</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>sa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>].<span class="pl-c1">target</span>)sa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>].<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">currentTarget</span>})},<span class="pl-en">onDocumentPointerUp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">tb</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>onDocumentTouchEnd<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> sa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>]})},<span class="pl-en">batchMSEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,sb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointerdown<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MSPointerDown<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">onContainerPointerDown</span>);<span class="pl-en">a</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,sb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointermove<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MSPointerMove<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">onContainerPointerMove</span>);<span class="pl-en">a</span>(<span class="pl-c1">C</span>,sb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointerup<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MSPointerUp<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">onDocumentPointerUp</span>)}});<span class="pl-en">fa</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,b,c);<span class="pl-v">this</span>.<span class="pl-smi">hasZoom</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-en">L</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>,{<span class="pl-s"><span class="pl-pds">&quot;</span>-ms-touch-action<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touch-action<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>})});<span class="pl-en">fa</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setDOMEvents<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>);(<span class="pl-v">this</span>.<span class="pl-smi">hasZoom</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">followTouchMove</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">batchMSEvents</span>(<span class="pl-c1">M</span>)});<span class="pl-en">fa</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-en">batchMSEvents</span>(<span class="pl-c1">W</span>);<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)})}<span class="pl-k">var</span> ab<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">Legend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-en">init</span>(a,b)};<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">itemStyle</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">itemMarginTop</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">enabled</span>)<span class="pl-smi">c</span>.<span class="pl-smi">itemStyle</span><span class="pl-k">=</span>d,<span class="pl-smi">c</span>.<span class="pl-smi">itemHiddenStyle</span><span class="pl-k">=</span><span class="pl-en">y</span>(d,<span class="pl-smi">b</span>.<span class="pl-smi">itemHiddenStyle</span>),<span class="pl-smi">c</span>.<span class="pl-smi">itemMarginTop</span><span class="pl-k">=</span>e,<span class="pl-smi">c</span>.<span class="pl-smi">padding</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">padding</span>,</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">8</span>),<span class="pl-smi">c</span>.<span class="pl-smi">initialItemX</span><span class="pl-k">=</span>d,<span class="pl-smi">c</span>.<span class="pl-smi">initialItemY</span><span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">5</span>,<span class="pl-smi">c</span>.<span class="pl-smi">maxItemWidth</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a,<span class="pl-smi">c</span>.<span class="pl-smi">itemHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">symbolWidth</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">symbolWidth</span>,<span class="pl-c1">16</span>),<span class="pl-smi">c</span>.<span class="pl-smi">pages</span><span class="pl-k">=</span>[],<span class="pl-smi">c</span>.<span class="pl-en">render</span>(),<span class="pl-en">M</span>(<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>endResize<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-en">positionCheckboxes</span>()})},<span class="pl-en">colorizeItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendLine</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendSymbol</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">itemHiddenStyle</span>.<span class="pl-c1">color</span>,c<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">itemStyle</span>.<span class="pl-c1">color</span><span class="pl-k">:</span>g,h<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">legendColor</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,i<span class="pl-k">=</span>{fill<span class="pl-k">:</span>h},k;d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">css</span>({fill<span class="pl-k">:</span>c,color<span class="pl-k">:</span>c});e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span>h});<span class="pl-k">if</span>(f){<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">isMarker</span>)<span class="pl-k">for</span>(k <span class="pl-k">in</span> <span class="pl-smi">i</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">h,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(g),g)d<span class="pl-k">=</span>g[k],d<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(i[k]<span class="pl-k">=</span>d);<span class="pl-smi">f</span>.<span class="pl-en">attr</span>(i)}},<span class="pl-en">positionItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">symbolPadding</span>,b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">rtl</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_legendItemPos</span>,e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>;(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(b<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">legendWidth</span><span class="pl-k">-</span>e<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span><span class="pl-c1">4</span>,d);<span class="pl-k">if</span>(f)<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>e,<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>d},<span class="pl-en">destroyItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>;<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>legendItem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legendLine<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legendSymbol<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legendGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){a[b]<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span>a[b].<span class="pl-en">destroy</span>())});b<span class="pl-k">&amp;&amp;</span><span class="pl-en">Pa</span>(<span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">group</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">box</span>;<span class="pl-k">if</span>(b)<span class="pl-v">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">destroy</span>();</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(a)<span class="pl-v">this</span>.<span class="pl-smi">group</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">positionCheckboxes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">group</span>.<span class="pl-smi">alignAttr</span>,c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipHeight</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">legendHeight</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">titleHeight</span>;<span class="pl-k">if</span>(b)c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">translateY</span>,<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">allItems</span>,<span class="pl-k">function</span>(<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">checkbox</span>,h;g<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>c<span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>(a<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">3</span>,<span class="pl-en">L</span>(g,{left<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">checkboxOffset</span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">20</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span>h<span class="pl-k">&gt;</span>c<span class="pl-k">-</span><span class="pl-c1">6</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">6</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>}))})},<span class="pl-en">renderTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">padding</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">text</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-c1">title</span>)<span class="pl-v">this</span>.<span class="pl-c1">title</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">label</span>(<span class="pl-smi">b</span>.<span class="pl-c1">text</span>,a<span class="pl-k">-</span><span class="pl-c1">3</span>,a<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legend-title<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-en">css</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">group</span>);a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">title</span>.<span class="pl-en">getBBox</span>();c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>;<span class="pl-v">this</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-v">this</span>.<span class="pl-smi">contentGroup</span>.<span class="pl-en">attr</span>({translateY<span class="pl-k">:</span>c})}<span class="pl-v">this</span>.<span class="pl-smi">titleHeight</span><span class="pl-k">=</span>c},<span class="pl-en">setText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>;<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">labelFormat</span><span class="pl-k">?</span><span class="pl-en">Ba</span>(<span class="pl-smi">b</span>.<span class="pl-smi">labelFormat</span>,a)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">labelFormatter</span>.<span class="pl-c1">call</span>(a)})},<span class="pl-en">renderItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">layout</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">symbolWidth</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">symbolPadding</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">itemStyle</span>,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">itemHiddenStyle</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">padding</span>,j<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">itemDistance</span>,</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">20</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">rtl</span>,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,p<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">itemMarginBottom</span><span class="pl-k">||</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">itemMarginTop</span>,r<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">initialItemX</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>,w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">drawLegendSymbol</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">:</span>a,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">options</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">createCheckboxForItem</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">A</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">A</span>.<span class="pl-smi">showCheckbox</span>,q<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">useHTML</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">F</span>){<span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>legend-item<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">scrollGroup</span>);<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span><span class="pl-k">=</span><span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">text</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,l<span class="pl-k">?</span>f<span class="pl-k">+</span>g<span class="pl-k">:</span><span class="pl-k">-</span>g,<span class="pl-v">this</span>.<span class="pl-smi">baseline</span><span class="pl-k">||</span><span class="pl-c1">0</span>,q).<span class="pl-en">css</span>(<span class="pl-en">y</span>(<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span>h<span class="pl-k">:</span>i)).<span class="pl-en">attr</span>({align<span class="pl-k">:</span>l<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">baseline</span>)<span class="pl-v">this</span>.<span class="pl-smi">fontMetrics</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">h</span>.<span class="pl-c1">fontSize</span>,<span class="pl-c1">F</span>),</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">baseline</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">fontMetrics</span>.<span class="pl-smi">f</span><span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">+</span>n,<span class="pl-c1">F</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-smi">baseline</span>);<span class="pl-smi">w</span>.<span class="pl-en">drawLegendSymbol</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">setItemEvents</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">setItemEvents</span>(a,<span class="pl-c1">F</span>,q,h,i);<span class="pl-c1">A</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">createCheckboxForItem</span>(a)}<span class="pl-v">this</span>.<span class="pl-en">colorizeItem</span>(a,<span class="pl-smi">a</span>.<span class="pl-smi">visible</span>);<span class="pl-v">this</span>.<span class="pl-en">setText</span>(a);c<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-en">getBBox</span>();f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">checkboxOffset</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">itemWidth</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItemWidth</span><span class="pl-k">||</span>f<span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">+</span>j<span class="pl-k">+</span>(<span class="pl-c1">A</span><span class="pl-k">?</span><span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">itemHeight</span><span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-en">B</span>(<span class="pl-smi">a</span>.<span class="pl-smi">legendItemHeight</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span>);<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">-</span>r<span class="pl-k">+</span>f<span class="pl-k">&gt;</span>(m<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>k<span class="pl-k">-</span>r<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>))<span class="pl-v">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">=</span>r,<span class="pl-v">this</span>.<span class="pl-smi">itemY</span><span class="pl-k">+=</span>n<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">+</span>p,<span class="pl-v">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">maxItemWidth</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-v">this</span>.<span class="pl-smi">maxItemWidth</span>,</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">f);<span class="pl-v">this</span>.<span class="pl-smi">lastItemY</span><span class="pl-k">=</span>n<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">itemY</span><span class="pl-k">+</span>p;<span class="pl-v">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span><span class="pl-en">t</span>(g,<span class="pl-v">this</span>.<span class="pl-smi">lastLineHeight</span>);<span class="pl-smi">a</span>.<span class="pl-smi">_legendItemPos</span><span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-smi">itemX</span>,<span class="pl-v">this</span>.<span class="pl-smi">itemY</span>];e<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">+=</span>f<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-smi">itemY</span><span class="pl-k">+=</span>n<span class="pl-k">+</span>g<span class="pl-k">+</span>p,<span class="pl-v">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span>g);<span class="pl-v">this</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">=</span>m<span class="pl-k">||</span><span class="pl-en">t</span>((e<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">-</span>r<span class="pl-k">-</span>j<span class="pl-k">:</span>f)<span class="pl-k">+</span>k,<span class="pl-v">this</span>.<span class="pl-smi">offsetWidth</span>)},<span class="pl-en">getAllItems</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(<span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">showInLegend</span>,<span class="pl-k">!</span><span class="pl-en">s</span>(<span class="pl-smi">c</span>.<span class="pl-smi">linkedTo</span>)<span class="pl-k">?</span>x<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">b</span>.<span class="pl-smi">legendItems</span><span class="pl-k">||</span>(<span class="pl-smi">c</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">data</span><span class="pl-k">:</span>b))});<span class="pl-k">return</span> a},<span class="pl-en">adjustMargins</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">align</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">verticalAlign</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">layout</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-c1">display</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">floating</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>([<span class="pl-sr"><span class="pl-pds">/</span>(lth<span class="pl-k">|</span>ct<span class="pl-k">|</span>rth)<span class="pl-pds">/</span></span>,<span class="pl-sr"><span class="pl-pds">/</span>(rtv<span class="pl-k">|</span>rm<span class="pl-k">|</span>rbv)<span class="pl-pds">/</span></span>,<span class="pl-sr"><span class="pl-pds">/</span>(rbh<span class="pl-k">|</span>cb<span class="pl-k">|</span>lbh)<span class="pl-pds">/</span></span>,<span class="pl-sr"><span class="pl-pds">/</span>(lbv<span class="pl-k">|</span>lm<span class="pl-k">|</span>ltv)<span class="pl-pds">/</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-smi">f</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">s</span>(a[g])<span class="pl-k">&amp;&amp;</span>(c[jb[g]]<span class="pl-k">=</span><span class="pl-en">t</span>(c[jb[g]],<span class="pl-smi">c</span>.<span class="pl-smi">legend</span>[(g<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>legendHeight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>legendWidth<span class="pl-pds">&quot;</span></span>]<span class="pl-k">+</span>[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>][g]<span class="pl-k">*</span>d[g<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>]<span class="pl-k">+</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">margin</span>,<span class="pl-c1">12</span>)<span class="pl-k">+</span>b[g]))})},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>,e,f,g,h,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">box</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">padding</span>,l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">borderWidth</span>,m<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">backgroundColor</span>;<span class="pl-smi">a</span>.<span class="pl-smi">itemX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">initialItemX</span>;<span class="pl-smi">a</span>.<span class="pl-smi">itemY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">initialItemY</span>;<span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">lastItemY</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-smi">a</span>.<span class="pl-smi">group</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>legend<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-c1">add</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">contentGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>().<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(d),<span class="pl-smi">a</span>.<span class="pl-smi">scrollGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>().<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">contentGroup</span>);<span class="pl-smi">a</span>.<span class="pl-en">renderTitle</span>();e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getAllItems</span>();<span class="pl-en">db</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legendIndex</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legendIndex</span><span class="pl-k">||</span><span class="pl-c1">0</span>)});<span class="pl-smi">k</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">reverse</span>();<span class="pl-smi">a</span>.<span class="pl-smi">allItems</span><span class="pl-k">=</span>e;<span class="pl-smi">a</span>.<span class="pl-c1">display</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-smi">a</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">renderItem</span>(b)});g<span class="pl-k">=</span>(<span class="pl-smi">k</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span>)<span class="pl-k">+</span>j;h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lastItemY</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">titleHeight</span>;h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">handleOverflow</span>(h);h<span class="pl-k">+=</span>j;<span class="pl-k">if</span>(l<span class="pl-k">||</span>m){<span class="pl-k">if</span>(i){<span class="pl-k">if</span>(g<span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)i[<span class="pl-smi">i</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">i</span>.<span class="pl-en">crisp</span>({width<span class="pl-k">:</span>g,height<span class="pl-k">:</span>h})),<span class="pl-smi">i</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">rect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,g,h,<span class="pl-smi">k</span>.<span class="pl-smi">borderRadius</span>,l<span class="pl-k">||</span><span class="pl-c1">0</span>).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">borderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l<span class="pl-k">||</span><span class="pl-c1">0</span>,fill<span class="pl-k">:</span>m<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">add</span>(d).<span class="pl-en">shadow</span>(<span class="pl-smi">k</span>.<span class="pl-smi">shadow</span>),<span class="pl-smi">i</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;i[f<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}<span class="pl-smi">a</span>.<span class="pl-smi">legendWidth</span><span class="pl-k">=</span>g;<span class="pl-smi">a</span>.<span class="pl-smi">legendHeight</span><span class="pl-k">=</span>h;<span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">positionItem</span>(b)});f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">align</span>(<span class="pl-en">q</span>({width<span class="pl-k">:</span>g,height<span class="pl-k">:</span>h},k),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-smi">isResizing</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">positionCheckboxes</span>()},<span class="pl-en">handleOverflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">spacingBox</span>.<span class="pl-c1">height</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">e</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">-</span>f<span class="pl-k">:</span>f)<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">padding</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">maxHeight</span>,h,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipRect</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">navigation</span>,j<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">k</span>.<span class="pl-smi">animation</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">arrowSize</span><span class="pl-k">||</span><span class="pl-c1">12</span>,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">nav</span>,p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pages</span>,u<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">padding</span>,r,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">allItems</span>,<span class="pl-en">w</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">i</span>.<span class="pl-en">attr</span>({height<span class="pl-k">:</span>a});<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">contentGroup</span>.<span class="pl-smi">div</span>)<span class="pl-smi">b</span>.<span class="pl-smi">contentGroup</span>.<span class="pl-smi">div</span>.<span class="pl-c1">style</span>.<span class="pl-c1">clip</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>u<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,9999px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(u<span class="pl-k">+</span>a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,0)<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">e</span>.<span class="pl-smi">layout</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">/=</span><span class="pl-c1">2</span>);g<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-en">I</span>(f,g));<span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span>f){<span class="pl-v">this</span>.<span class="pl-smi">clipHeight</span><span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-en">t</span>(f<span class="pl-k">-</span><span class="pl-c1">20</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">titleHeight</span><span class="pl-k">-</span>u,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">currentPage</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">currentPage</span>,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">fullHeight</span><span class="pl-k">=</span>a;<span class="pl-en">n</span>(<span class="pl-c1">F</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">_legendItemPos</span>[<span class="pl-c1">1</span>],d<span class="pl-k">=</span><span class="pl-en">B</span>(<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span>),e<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">||</span>c<span class="pl-k">-</span>p[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">||</span>c)<span class="pl-k">!==</span>p[e<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-smi">p</span>.<span class="pl-c1">push</span>(r<span class="pl-k">||</span>c),e<span class="pl-k">++</span>;b<span class="pl-k">===</span><span class="pl-c1">F</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span>p[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">push</span>(c);c<span class="pl-k">!==</span>r<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span>c)});<span class="pl-k">if</span>(<span class="pl-k">!</span>i)i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">clipRect</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clipRect</span>(<span class="pl-c1">0</span>,u,<span class="pl-c1">9999</span>,<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">contentGroup</span>.<span class="pl-c1">clip</span>(i);<span class="pl-en">w</span>(h);<span class="pl-k">if</span>(<span class="pl-k">!</span>m)<span class="pl-v">this</span>.<span class="pl-smi">nav</span><span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">g</span>().<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">group</span>),<span class="pl-v">this</span>.<span class="pl-smi">up</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>triangle<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l,l).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">scroll</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,j)}).<span class="pl-c1">add</span>(m),<span class="pl-v">this</span>.<span class="pl-smi">pager</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">text</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">15</span>,<span class="pl-c1">10</span>).<span class="pl-en">css</span>(<span class="pl-smi">k</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>(m),<span class="pl-v">this</span>.<span class="pl-smi">down</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>triangle-down<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l,l).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">scroll</span>(<span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">j)}).<span class="pl-c1">add</span>(m);<span class="pl-smi">b</span>.<span class="pl-c1">scroll</span>(<span class="pl-c1">0</span>);a<span class="pl-k">=</span>f}<span class="pl-k">else</span> <span class="pl-k">if</span>(m)<span class="pl-en">w</span>(<span class="pl-smi">c</span>.<span class="pl-smi">chartHeight</span>),<span class="pl-smi">m</span>.<span class="pl-en">hide</span>(),<span class="pl-v">this</span>.<span class="pl-smi">scrollGroup</span>.<span class="pl-en">attr</span>({translateY<span class="pl-k">:</span><span class="pl-c1">1</span>}),<span class="pl-v">this</span>.<span class="pl-smi">clipHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> a},<span class="pl-en">scroll</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pages</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">currentPage</span><span class="pl-k">+</span>a,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipHeight</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">navigation</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">activeColor</span>,g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">inactiveColor</span>,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pager</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">padding</span>;e<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d);<span class="pl-k">if</span>(e<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)b<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-en">Va</span>(b,<span class="pl-v">this</span>.<span class="pl-smi">chart</span>),<span class="pl-v">this</span>.<span class="pl-smi">nav</span>.<span class="pl-en">attr</span>({translateX<span class="pl-k">:</span>k,translateY<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">padding</span><span class="pl-k">+</span><span class="pl-c1">7</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">titleHeight</span>,visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>}),<span class="pl-v">this</span>.<span class="pl-smi">up</span>.<span class="pl-en">attr</span>({fill<span class="pl-k">:</span>e<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>g<span class="pl-k">:</span>h}).<span class="pl-en">css</span>({cursor<span class="pl-k">:</span>e<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">i</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d}),<span class="pl-v">this</span>.<span class="pl-smi">down</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span><span class="pl-c1">18</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">pager</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span>,fill<span class="pl-k">:</span>e<span class="pl-k">===</span>d<span class="pl-k">?</span>g<span class="pl-k">:</span>h}).<span class="pl-en">css</span>({cursor<span class="pl-k">:</span>e<span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}),c<span class="pl-k">=</span><span class="pl-k">-</span>c[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">initialItemY</span>,<span class="pl-v">this</span>.<span class="pl-smi">scrollGroup</span>.<span class="pl-c1">animate</span>({translateY<span class="pl-k">:</span>c}),<span class="pl-v">this</span>.<span class="pl-smi">currentPage</span><span class="pl-k">=</span>e,<span class="pl-v">this</span>.<span class="pl-en">positionCheckboxes</span>(c)}};<span class="pl-k">var</span> bb<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-smi">LegendSymbolMixin</span><span class="pl-k">=</span>{<span class="pl-en">drawRectangle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">symbolHeight</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">fontMetrics</span>.<span class="pl-smi">f</span>;<span class="pl-smi">b</span>.<span class="pl-smi">legendSymbol</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">rect</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">baseline</span><span class="pl-k">-</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-smi">symbolWidth</span>,c,<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">symbolRadius</span><span class="pl-k">||</span><span class="pl-c1">0</span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">legendGroup</span>)},<span class="pl-en">drawLineMarker</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">marker</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">symbolWidth</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">legendGroup</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">baseline</span><span class="pl-k">-</span><span class="pl-en">B</span>(<span class="pl-smi">a</span>.<span class="pl-smi">fontMetrics</span>.<span class="pl-smi">b</span><span class="pl-k">*</span><span class="pl-c1">0.3</span>),g;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>){g<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>};<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>)<span class="pl-smi">g</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>;<span class="pl-v">this</span>.<span class="pl-smi">legendLine</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">path</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,a,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,d,a]).<span class="pl-en">attr</span>(g).<span class="pl-c1">add</span>(f)}<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">enabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>)b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">radius</span>,<span class="pl-v">this</span>.<span class="pl-smi">legendSymbol</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">symbol</span>(<span class="pl-v">this</span>.<span class="pl-smi">symbol</span>,d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>b,a<span class="pl-k">-</span>b,<span class="pl-c1">2</span><span class="pl-k">*</span>b,<span class="pl-c1">2</span><span class="pl-k">*</span>b,c).<span class="pl-c1">add</span>(f),<span class="pl-smi">c</span>.<span class="pl-smi">isMarker</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}};(<span class="pl-sr"><span class="pl-pds">/</span>Trident<span class="pl-cce">\/</span>7<span class="pl-cce">\.</span>0<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(ya)<span class="pl-k">||</span>Ja)<span class="pl-k">&amp;&amp;</span><span class="pl-en">fa</span>(<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>positionItem<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-smi">_legendItemPos</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(c,</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">b)};<span class="pl-en">d</span>();<span class="pl-c1">setTimeout</span>(d)});<span class="pl-k">var</span> ga<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">Chart</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">getArgs</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>)};<span class="pl-smi">v</span>.<span class="pl-en">chart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ga</span>(a,b,c)};<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{callbacks<span class="pl-k">:</span>[],<span class="pl-en">getArgs</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[].<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-v">arguments</span>);<span class="pl-k">if</span>(<span class="pl-en">ta</span>(a[<span class="pl-c1">0</span>])<span class="pl-k">||</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">nodeName</span>)<span class="pl-v">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">shift</span>();<span class="pl-v">this</span>.<span class="pl-en">init</span>(a[<span class="pl-c1">0</span>],a[<span class="pl-c1">1</span>])},<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;<span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-c1">null</span>;c<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">K</span>,a);<span class="pl-smi">c</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-smi">userOptions</span><span class="pl-k">=</span>a;d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>;<span class="pl-v">this</span>.<span class="pl-smi">margin</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">splashArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>margin<span class="pl-pds">&quot;</span></span>,d);<span class="pl-v">this</span>.<span class="pl-smi">spacing</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">splashArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>spacing<span class="pl-pds">&quot;</span></span>,d);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">events</span>;<span class="pl-v">this</span>.<span class="pl-smi">bounds</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">{h<span class="pl-k">:</span>{},v<span class="pl-k">:</span>{}};<span class="pl-v">this</span>.<span class="pl-smi">callback</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">isResizing</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">axes</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">showAxes</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>,g;<span class="pl-smi">f</span>.<span class="pl-c1">index</span><span class="pl-k">=</span><span class="pl-c1">U</span>.<span class="pl-c1">length</span>;<span class="pl-c1">U</span>.<span class="pl-c1">push</span>(f);Xa<span class="pl-k">++</span>;<span class="pl-smi">d</span>.<span class="pl-smi">reflow</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">M</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">f</span>.<span class="pl-en">initReflow</span>()});<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(g <span class="pl-k">in</span> e)<span class="pl-en">M</span>(f,g,e[g]);<span class="pl-smi">f</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span>[];<span class="pl-smi">f</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span>[];<span class="pl-smi">f</span>.<span class="pl-smi">animation</span><span class="pl-k">=</span>ja<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">animation</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">f</span>.<span class="pl-smi">pointCount</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">symbolCounter</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-en">firstRender</span>()},<span class="pl-en">initSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>;(b<span class="pl-k">=</span><span class="pl-c1">D</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">defaultSeriesType</span>])<span class="pl-k">||</span><span class="pl-en">S</span>(<span class="pl-c1">17</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>;<span class="pl-smi">b</span>.<span class="pl-en">init</span>(<span class="pl-v">this</span>,a);<span class="pl-k">return</span> b},</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isInsidePlot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>c<span class="pl-k">?</span>b<span class="pl-k">:</span>a,a<span class="pl-k">=</span>c<span class="pl-k">?</span>a<span class="pl-k">:</span>b;<span class="pl-k">return</span> d<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.<span class="pl-smi">plotHeight</span>},<span class="pl-en">redraw</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointer</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">legend</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isDirtyLegend</span>,g,h,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasCartesianSeries</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isDirtyBox</span>,j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,l<span class="pl-k">=</span>j,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,p<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">isHidden</span>(),o<span class="pl-k">=</span>[];<span class="pl-en">Va</span>(a,<span class="pl-v">this</span>);p<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">cloneRenderTo</span>();<span class="pl-k">for</span>(<span class="pl-v">this</span>.<span class="pl-en">layOutTitles</span>();l<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[l],<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span>)){h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(h)<span class="pl-k">for</span>(l<span class="pl-k">=</span>j;l<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[l],<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span>)<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">updateTotals</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">updateTotals</span>(),f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">enabled</span>)<span class="pl-smi">e</span>.<span class="pl-en">render</span>(),<span class="pl-v">this</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;g<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">getStacks</span>();<span class="pl-k">if</span>(i<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isResizing</span>)<span class="pl-v">this</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setScale</span>()});<span class="pl-v">this</span>.<span class="pl-en">getMargins</span>();i<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}),<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">extKey</span><span class="pl-k">!==</span>b)<span class="pl-smi">a</span>.<span class="pl-smi">extKey</span><span class="pl-k">=</span>b,<span class="pl-smi">o</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>afterSetExtremes<span class="pl-pds">&quot;</span></span>,<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">eventArgs</span>,<span class="pl-smi">a</span>.<span class="pl-en">getExtremes</span>()));<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">eventArgs</span>});(k<span class="pl-k">||</span>g)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">redraw</span>()}));k<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">drawChartBox</span>();<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">isCartesian</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">redraw</span>()});d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">reset</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">m</span>.<span class="pl-en">draw</span>();<span class="pl-en">G</span>(<span class="pl-v">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>);p<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">cloneRenderTo</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">n</span>(o,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>()})},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,d,e;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[d].<span class="pl-c1">options</span>.<span class="pl-c1">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> b[d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[d].<span class="pl-c1">options</span>.<span class="pl-c1">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> c[d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){e<span class="pl-k">=</span>c[d].<span class="pl-smi">points</span><span class="pl-k">||</span>[];<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(e[b].<span class="pl-c1">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> e[b]}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">getAxes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span><span class="pl-en">qa</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span><span class="pl-k">||</span>{}),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span><span class="pl-en">qa</span>(<span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line">{});<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">isX</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b});c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">concat</span>(b);<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">new</span> <span class="pl-en">Y</span>(a,b)})},<span class="pl-en">getSelectedPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">points</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">selected</span>}))});<span class="pl-k">return</span> a},<span class="pl-en">getSelectedSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Ka</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">selected</span>})},<span class="pl-en">setTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> g;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,f;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">title</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">e</span>.<span class="pl-c1">title</span>,a);g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">subtitle</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">e</span>.<span class="pl-smi">subtitle</span>,b),e<span class="pl-k">=</span>g;<span class="pl-en">n</span>([[<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,a,f],[<span class="pl-s"><span class="pl-pds">&quot;</span>subtitle<span class="pl-pds">&quot;</span></span>,b,e]],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line">a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>d[b],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];c<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">destroy</span>());a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">text</span><span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(<span class="pl-smi">a</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">align</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,zIndex<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">4</span>}).<span class="pl-en">css</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>())});<span class="pl-smi">d</span>.<span class="pl-en">layOutTitles</span>(c)},<span class="pl-en">layOutTitles</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">title</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">subtitle</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">title</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">subtitle</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">spacingBox</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">44</span>;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">css</span>({width<span class="pl-k">:</span>(<span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>h)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">align</span>(<span class="pl-en">q</span>({y<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">f</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>,c).<span class="pl-smi">b</span><span class="pl-k">-</span><span class="pl-c1">3</span>},f),<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-smi">floating</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-smi">verticalAlign</span>))b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span>;d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">css</span>({width<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>h)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">align</span>(<span class="pl-en">q</span>({y<span class="pl-k">:</span>b<span class="pl-k">+</span>(<span class="pl-smi">f</span>.<span class="pl-smi">margin</span><span class="pl-k">-</span><span class="pl-c1">13</span>)<span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>,c).<span class="pl-smi">b</span>},e),<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">floating</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">ra</span>(b<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span>)));c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">titleOffset</span><span class="pl-k">!==</span>b;<span class="pl-v">this</span>.<span class="pl-smi">titleOffset</span><span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">&amp;&amp;</span>c)<span class="pl-v">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span>c,<span class="pl-v">this</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">o</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">getChartSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderToClone</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">renderTo</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">s</span>(b))<span class="pl-v">this</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">=</span><span class="pl-en">la</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">s</span>(a))<span class="pl-v">this</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-en">la</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,b<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">||</span><span class="pl-c1">600</span>);<span class="pl-v">this</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,<span class="pl-en">o</span>(a,<span class="pl-v">this</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">&gt;</span><span class="pl-c1">19</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">:</span><span class="pl-c1">400</span>))},<span class="pl-en">cloneRenderTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderToClone</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">container</span>;a<span class="pl-k">?</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">appendChild</span>(c),<span class="pl-en">Pa</span>(b),<span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">renderToClone</span>)<span class="pl-k">:</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">removeChild</span>(c),<span class="pl-v">this</span>.<span class="pl-smi">renderToClone</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">0</span>),<span class="pl-en">L</span>(b,{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-9999px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-smi">setProperty</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-en">setProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>important<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">C</span>.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(b),c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(c))},<span class="pl-en">getContainer</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d,e;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderTo</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>qb<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-v">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderTo</span>;<span class="pl-k">if</span>(<span class="pl-en">ta</span>(a))<span class="pl-v">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">getElementById</span>(a);a<span class="pl-k">||</span><span class="pl-en">S</span>(<span class="pl-c1">13</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);d<span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-en">J</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>));<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(d)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span>[d]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span>[d].<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span>[d].<span class="pl-en">destroy</span>();<span class="pl-en">J</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">index</span>);<span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">skipClone</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">cloneRenderTo</span>();<span class="pl-v">this</span>.<span class="pl-en">getChartSize</span>();d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartWidth</span>;e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartHeight</span>;<span class="pl-v">this</span>.<span class="pl-smi">container</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-en">ba</span>(Ia,{className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-container<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">c</span>.<span class="pl-c1">className</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">className</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),id<span class="pl-k">:</span>f},<span class="pl-en">q</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,overflow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,lineHeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-tap-highlight-color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0)<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">c</span>.<span class="pl-c1">style</span>),<span class="pl-v">this</span>.<span class="pl-smi">renderToClone</span><span class="pl-k">||</span>a);<span class="pl-v">this</span>.<span class="pl-smi">_cursor</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">cursor</span>;<span class="pl-v">this</span>.<span class="pl-smi">renderer</span><span class="pl-k">=</span><span class="pl-k">new</span> (v[<span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>]<span class="pl-k">||</span>Ra)(a,d,e,<span class="pl-smi">c</span>.<span class="pl-c1">style</span>,<span class="pl-smi">c</span>.<span class="pl-smi">forExport</span>,<span class="pl-smi">b</span>.<span class="pl-smi">exporting</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">exporting</span>.<span class="pl-smi">allowHTML</span>);ja<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">create</span>(<span class="pl-v">this</span>,a,d,e);<span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">chartIndex</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">index</span>},<span class="pl-en">getMargins</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">spacing</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">margin</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">titleOffset</span>;<span class="pl-v">this</span>.<span class="pl-en">resetMargins</span>();<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span><span class="pl-en">s</span>(c[<span class="pl-c1">0</span>]))<span class="pl-v">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotTop</span>,d<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span>.<span class="pl-smi">margin</span><span class="pl-k">+</span>b[<span class="pl-c1">0</span>]);<span class="pl-v">this</span>.<span class="pl-smi">legend</span>.<span class="pl-en">adjustMargins</span>(c,b);<span class="pl-v">this</span>.<span class="pl-smi">extraBottomMargin</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-c1">marginBottom</span><span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-smi">extraBottomMargin</span>);<span class="pl-v">this</span>.<span class="pl-smi">extraTopMargin</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-smi">extraTopMargin</span>);a<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">getAxisMargins</span>()},<span class="pl-en">getAxisMargins</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axisOffset</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">margin</span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">getOffset</span>()});<span class="pl-en">n</span>(jb,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-en">s</span>(c[e])<span class="pl-k">||</span>(a[d]<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">b[e])});<span class="pl-smi">a</span>.<span class="pl-en">setChartSize</span>()},<span class="pl-en">reflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderTo</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-en">la</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-en">la</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">:</span>z;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">hasUserSize</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">isPrinting</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">===</span>z<span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-c1">C</span>)){<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">||</span>f<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">containerHeight</span>)<span class="pl-c1">clearTimeout</span>(<span class="pl-smi">b</span>.<span class="pl-smi">reflowTimeout</span>),<span class="pl-smi">b</span>.<span class="pl-smi">reflowTimeout</span><span class="pl-k">=</span><span class="pl-en">Na</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>)<span class="pl-smi">b</span>.<span class="pl-en">setSize</span>(e,f,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-smi">hasUserSize</span><span class="pl-k">=</span><span class="pl-c1">null</span>},a<span class="pl-k">?</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">=</span>e;<span class="pl-smi">b</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">=</span>f}},<span class="pl-en">initReflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">reflow</span>(b)};<span class="pl-en">M</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b);<span class="pl-en">M</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-en">W</span>(z,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b)})},<span class="pl-en">setSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e,f,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isResizing</span><span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-en">Va</span>(c,d);<span class="pl-smi">d</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chartHeight</span>;<span class="pl-smi">d</span>.<span class="pl-smi">oldChartWidth</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chartWidth</span>;<span class="pl-k">if</span>(<span class="pl-en">s</span>(a))<span class="pl-smi">d</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,<span class="pl-en">B</span>(a)),<span class="pl-smi">d</span>.<span class="pl-smi">hasUserSize</span><span class="pl-k">=</span><span class="pl-k">!!</span>e;<span class="pl-k">if</span>(<span class="pl-en">s</span>(b))<span class="pl-smi">d</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,<span class="pl-en">B</span>(b));a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">globalAnimation</span>;(a<span class="pl-k">?</span>Sa<span class="pl-k">:</span><span class="pl-c1">L</span>)(<span class="pl-smi">d</span>.<span class="pl-smi">container</span>,{width<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},a);<span class="pl-smi">d</span>.<span class="pl-en">setChartSize</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">g</span>.<span class="pl-en">setSize</span>(e,f,c);<span class="pl-smi">d</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-en">setScale</span>()});<span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-en">layOutTitles</span>();</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">getMargins</span>();<span class="pl-smi">d</span>.<span class="pl-en">redraw</span>(c);<span class="pl-smi">d</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">G</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">globalAnimation</span>;<span class="pl-en">Na</span>(<span class="pl-k">function</span>(){d<span class="pl-k">&amp;&amp;</span><span class="pl-en">G</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>endResize<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-smi">isResizing</span><span class="pl-k">-=</span><span class="pl-c1">1</span>})},a<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">duration</span><span class="pl-k">||</span><span class="pl-c1">500</span>)},<span class="pl-en">setChartSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">inverted</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartWidth</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartHeight</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">spacing</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipOffset</span>,i,k,j,l;<span class="pl-v">this</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-en">B</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotLeft</span>);<span class="pl-v">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-en">B</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotTop</span>);<span class="pl-v">this</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,<span class="pl-en">B</span>(d<span class="pl-k">-</span>i<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">marginRight</span>));<span class="pl-v">this</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,<span class="pl-en">B</span>(e<span class="pl-k">-</span>k<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">marginBottom</span>));<span class="pl-v">this</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">?</span>l<span class="pl-k">:</span>j;<span class="pl-v">this</span>.<span class="pl-smi">plotSizeY</span><span class="pl-k">=</span>b<span class="pl-k">?</span>j<span class="pl-k">:</span>l;<span class="pl-v">this</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">spacingBox</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">spacingBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>g[<span class="pl-c1">3</span>],y<span class="pl-k">:</span>g[<span class="pl-c1">0</span>],width<span class="pl-k">:</span>d<span class="pl-k">-</span>g[<span class="pl-c1">3</span>]<span class="pl-k">-</span>g[<span class="pl-c1">1</span>],height<span class="pl-k">:</span>e<span class="pl-k">-</span>g[<span class="pl-c1">0</span>]<span class="pl-k">-</span>g[<span class="pl-c1">2</span>]};<span class="pl-v">this</span>.<span class="pl-smi">plotBox</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>i,y<span class="pl-k">:</span>k,width<span class="pl-k">:</span>j,height<span class="pl-k">:</span>l};d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-en">ea</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">/</span><span class="pl-c1">2</span>);b<span class="pl-k">=</span><span class="pl-en">ra</span>(<span class="pl-en">t</span>(d,h[<span class="pl-c1">3</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);c<span class="pl-k">=</span><span class="pl-en">ra</span>(<span class="pl-en">t</span>(d,h[<span class="pl-c1">0</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-v">this</span>.<span class="pl-smi">clipBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span><span class="pl-en">ea</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">-</span><span class="pl-en">t</span>(d,h[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>b),height<span class="pl-k">:</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,<span class="pl-en">ea</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotSizeY</span><span class="pl-k">-</span><span class="pl-en">t</span>(d,h[<span class="pl-c1">2</span>])<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>c))};a<span class="pl-k">||</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setAxisSize</span>();<span class="pl-smi">a</span>.<span class="pl-en">setAxisTranslation</span>()})},<span class="pl-en">resetMargins</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-en">n</span>(jb,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a[b]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">margin</span>[c],<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span>[c])});<span class="pl-smi">a</span>.<span class="pl-smi">axisOffset</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-smi">a</span>.<span class="pl-smi">clipOffset</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]},<span class="pl-en">drawChartBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartWidth</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartHeight</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chartBackground</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotBackground</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotBorder</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotBGImage</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">borderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">backgroundColor</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBackgroundColor</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBackgroundImage</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>,p,o<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotLeft</span>,n<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotTop</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotWidth</span>,w<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotHeight</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotBox</span>,q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipRect</span>,t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipBox</span>;p<span class="pl-k">=</span>i<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span><span class="pl-k">?</span><span class="pl-c1">8</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>);<span class="pl-k">if</span>(i<span class="pl-k">||</span>k)<span class="pl-k">if</span>(e)<span class="pl-smi">e</span>.<span class="pl-c1">animate</span>(<span class="pl-smi">e</span>.<span class="pl-en">crisp</span>({width<span class="pl-k">:</span>c<span class="pl-k">-</span>p,height<span class="pl-k">:</span>d<span class="pl-k">-</span>p}));<span class="pl-k">else</span>{e<span class="pl-k">=</span>{fill<span class="pl-k">:</span>k<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>};<span class="pl-k">if</span>(i)<span class="pl-smi">e</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">borderColor</span>,e[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>i;<span class="pl-v">this</span>.<span class="pl-smi">chartBackground</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(p<span class="pl-k">/</span><span class="pl-c1">2</span>,p<span class="pl-k">/</span><span class="pl-c1">2</span>,c<span class="pl-k">-</span>p,d<span class="pl-k">-</span>p,<span class="pl-smi">a</span>.<span class="pl-smi">borderRadius</span>,i).<span class="pl-en">attr</span>(e).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-background<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>().<span class="pl-en">shadow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>)}<span class="pl-k">if</span>(j)f<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">animate</span>(<span class="pl-c1">A</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">plotBackground</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(o,n,<span class="pl-c1">F</span>,w,<span class="pl-c1">0</span>).<span class="pl-en">attr</span>({fill<span class="pl-k">:</span>j}).<span class="pl-c1">add</span>().<span class="pl-en">shadow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotShadow</span>);<span class="pl-k">if</span>(l)h<span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-c1">animate</span>(<span class="pl-c1">A</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">plotBGImage</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">image</span>(l,o,n,<span class="pl-c1">F</span>,w).<span class="pl-c1">add</span>();q<span class="pl-k">?</span><span class="pl-smi">q</span>.<span class="pl-c1">animate</span>({width<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-c1">height</span>})<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">clipRect</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">clipRect</span>(t);<span class="pl-k">if</span>(m)g<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">animate</span>(<span class="pl-smi">g</span>.<span class="pl-en">crisp</span>({x<span class="pl-k">:</span>o,</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">:</span>n,width<span class="pl-k">:</span><span class="pl-c1">F</span>,height<span class="pl-k">:</span>w,strokeWidth<span class="pl-k">:</span><span class="pl-k">-</span>m}))<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">plotBorder</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(o,n,<span class="pl-c1">F</span>,w,<span class="pl-c1">0</span>,<span class="pl-k">-</span>m).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBorderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>m,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>();<span class="pl-v">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">propFromSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">series</span>,e,f;<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>inverted<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>angular<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>polar<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">g</span>){c<span class="pl-k">=</span><span class="pl-c1">D</span>[<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">defaultSeriesType</span>];f<span class="pl-k">=</span>a[g]<span class="pl-k">||</span>b[g]<span class="pl-k">||</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>[g];<span class="pl-k">for</span>(e<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">--</span>;)(c<span class="pl-k">=</span><span class="pl-c1">D</span>[d[e].<span class="pl-c1">type</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>[g]<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);a[g]<span class="pl-k">=</span>f})},<span class="pl-en">linkSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">linkedSeries</span>.<span class="pl-c1">length</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>});<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">linkedTo</span>;<span class="pl-k">if</span>(<span class="pl-en">ta</span>(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>:previous<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>[<span class="pl-smi">b</span>.<span class="pl-c1">index</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(d)))<span class="pl-smi">d</span>.<span class="pl-smi">linkedSeries</span>.<span class="pl-c1">push</span>(b),<span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span><span class="pl-k">=</span>d,<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">visible</span>,<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">visible</span>,<span class="pl-smi">b</span>.<span class="pl-smi">visible</span>)})},<span class="pl-en">renderSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">translate</span>();<span class="pl-smi">a</span>.<span class="pl-en">render</span>()})},<span class="pl-en">renderLabels</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>;<span class="pl-smi">b</span>.<span class="pl-smi">items</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">items</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>,<span class="pl-smi">c</span>.<span class="pl-c1">style</span>),e<span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-smi">d</span>.<span class="pl-c1">left</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span>,f<span class="pl-k">=</span><span class="pl-en">E</span>(<span class="pl-smi">d</span>.<span class="pl-c1">top</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+</span><span class="pl-c1">12</span>;<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-c1">left</span>;<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-c1">top</span>;<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(<span class="pl-smi">c</span>.<span class="pl-smi">html</span>,e,f).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-en">css</span>(d).<span class="pl-c1">add</span>()})},</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">axes</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,d,e,f,g;<span class="pl-v">this</span>.<span class="pl-en">setTitle</span>();<span class="pl-v">this</span>.<span class="pl-smi">legend</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ab</span>(<span class="pl-v">this</span>,<span class="pl-smi">c</span>.<span class="pl-smi">legend</span>);<span class="pl-v">this</span>.<span class="pl-smi">getStacks</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">getStacks</span>();<span class="pl-v">this</span>.<span class="pl-en">getMargins</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-en">setChartSize</span>();d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotWidth</span>;e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-=</span><span class="pl-c1">21</span>;<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setScale</span>()});<span class="pl-v">this</span>.<span class="pl-en">getAxisMargins</span>();f<span class="pl-k">=</span>d<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">&gt;</span><span class="pl-c1">1.1</span>;g<span class="pl-k">=</span>e<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">&gt;</span><span class="pl-c1">1.05</span>;<span class="pl-k">if</span>(f<span class="pl-k">||</span>g)<span class="pl-v">this</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">&amp;&amp;</span>f<span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">&amp;&amp;</span>g)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">setTickInterval</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)}),<span class="pl-v">this</span>.<span class="pl-en">getMargins</span>();<span class="pl-v">this</span>.<span class="pl-en">drawChartBox</span>();<span class="pl-v">this</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">render</span>()});<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">seriesGroup</span>)<span class="pl-v">this</span>.<span class="pl-smi">seriesGroup</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>series-group<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-c1">add</span>();<span class="pl-v">this</span>.<span class="pl-en">renderSeries</span>();<span class="pl-v">this</span>.<span class="pl-en">renderLabels</span>();<span class="pl-v">this</span>.<span class="pl-en">showCredits</span>(<span class="pl-smi">c</span>.<span class="pl-smi">credits</span>);<span class="pl-v">this</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">showCredits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">credits</span>)<span class="pl-v">this</span>.<span class="pl-smi">credits</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(<span class="pl-smi">a</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">href</span>)<span class="pl-smi">z</span>.<span class="pl-c1">location</span>.<span class="pl-c1">href</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">href</span>}).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span>.<span class="pl-c1">align</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">8</span>}).<span class="pl-en">css</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>().<span class="pl-c1">align</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">container</span>,e,f<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">parentNode</span>;<span class="pl-en">G</span>(a,</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">U</span>[<span class="pl-smi">a</span>.<span class="pl-c1">index</span>]<span class="pl-k">=</span>x;Xa<span class="pl-k">--</span>;<span class="pl-smi">a</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>);<span class="pl-en">W</span>(a);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)b[e]<span class="pl-k">=</span>b[e].<span class="pl-en">destroy</span>();<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)c[e]<span class="pl-k">=</span>c[e].<span class="pl-en">destroy</span>();<span class="pl-en">n</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b];c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">destroy</span>())});<span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-en">W</span>(d),f<span class="pl-k">&amp;&amp;</span><span class="pl-en">Pa</span>(d);<span class="pl-k">for</span>(e <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[e]},<span class="pl-en">isReadyToRender</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-k">!</span>da<span class="pl-k">&amp;&amp;</span>z<span class="pl-k">==</span><span class="pl-smi">z</span>.<span class="pl-c1">top</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-c1">readyState</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>ja<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">z</span>.<span class="pl-smi">canvg</span><span class="pl-k">?</span>(ja<span class="pl-k">?</span><span class="pl-smi">Ib</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">firstRender</span>()},<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">global</span>.<span class="pl-smi">canvasToolsURL</span>)<span class="pl-k">:</span><span class="pl-c1">C</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onreadystatechange<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-c1">C</span>.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onreadystatechange<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">firstRender</span>);<span class="pl-c1">C</span>.<span class="pl-c1">readyState</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">firstRender</span>()}),<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">firstRender</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">isReadyToRender</span>()){<span class="pl-smi">a</span>.<span class="pl-en">getContainer</span>();<span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">resetMargins</span>();<span class="pl-smi">a</span>.<span class="pl-en">setChartSize</span>();<span class="pl-smi">a</span>.<span class="pl-en">propFromSeries</span>();<span class="pl-smi">a</span>.<span class="pl-en">getAxes</span>();<span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">initSeries</span>(b)});<span class="pl-smi">a</span>.<span class="pl-en">linkSeries</span>();</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeRender<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">v</span>.<span class="pl-smi">Pointer</span>)<span class="pl-smi">a</span>.<span class="pl-smi">pointer</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Aa</span>(a,b);<span class="pl-smi">a</span>.<span class="pl-en">render</span>();<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">draw</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">imgCount</span>)<span class="pl-smi">a</span>.<span class="pl-en">onload</span>();<span class="pl-smi">a</span>.<span class="pl-en">cloneRenderTo</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)}},<span class="pl-en">onload</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-en">n</span>([<span class="pl-v">this</span>.<span class="pl-smi">callback</span>].<span class="pl-c1">concat</span>(<span class="pl-v">this</span>.<span class="pl-smi">callbacks</span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(a,[a])});<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">imgCount</span><span class="pl-k">||</span><span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">splashArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[a],c<span class="pl-k">=</span><span class="pl-en">aa</span>(c)<span class="pl-k">?</span>c<span class="pl-k">:</span>[c,c,c,c];<span class="pl-k">return</span>[<span class="pl-en">o</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">0</span>]),<span class="pl-en">o</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Right<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">1</span>]),<span class="pl-en">o</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Bottom<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">2</span>]),<span class="pl-en">o</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">3</span>])]}};<span class="pl-k">var</span> <span class="pl-en">Z</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line">a;<span class="pl-v">this</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>;<span class="pl-v">this</span>.<span class="pl-en">applyOptions</span>(b,c);<span class="pl-v">this</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colorByPoint</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span>,<span class="pl-v">this</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">color</span><span class="pl-k">||</span>b[<span class="pl-smi">a</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">++</span>],<span class="pl-smi">a</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>))<span class="pl-smi">a</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">pointCount</span><span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">applyOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pointValKey</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">pointValKey</span>,a<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">optionsToObject</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);<span class="pl-en">q</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span><span class="pl-k">?</span><span class="pl-en">q</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>,a)<span class="pl-k">:</span>a;<span class="pl-k">if</span>(d)<span class="pl-v">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-v">this</span>[d];<span class="pl-v">this</span>.<span class="pl-smi">isNull</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">x</span><span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>c)<span class="pl-v">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">===</span>x<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">autoIncrement</span>()<span class="pl-k">:</span>b;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">optionsToObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{},c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">keys</span>,e<span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">pointArrayMap</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">null</span>)b[e[<span class="pl-c1">0</span>]]<span class="pl-k">=</span>a;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">Fa</span>(a)){<span class="pl-k">if</span>(<span class="pl-k">!</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>f){c<span class="pl-k">=</span><span class="pl-k">typeof</span> a[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">b</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];g<span class="pl-k">++</span>}<span class="pl-k">for</span>(;h<span class="pl-k">&lt;</span>f;){<span class="pl-k">if</span>(<span class="pl-k">!</span>d<span class="pl-k">||</span>a[g]<span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)b[e[h]]<span class="pl-k">=</span>a[g];g<span class="pl-k">++</span>;h<span class="pl-k">++</span>}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){b<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabels</span>)<span class="pl-smi">c</span>.<span class="pl-smi">_hasPointLabels</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">marker</span>)<span class="pl-smi">c</span>.<span class="pl-smi">_hasPointMarkers</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span> b},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">chart</span>,</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverPoints</span>,c;<span class="pl-smi">a</span>.<span class="pl-smi">pointCount</span><span class="pl-k">--</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">setState</span>(),<span class="pl-en">ua</span>(b,<span class="pl-v">this</span>),<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>))<span class="pl-smi">a</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverPoint</span>)<span class="pl-v">this</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">graphic</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-en">W</span>(<span class="pl-v">this</span>),<span class="pl-v">this</span>.<span class="pl-en">destroyElements</span>();<span class="pl-v">this</span>.<span class="pl-smi">legendItem</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">legend</span>.<span class="pl-en">destroyItem</span>(<span class="pl-v">this</span>);<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-v">this</span>)<span class="pl-v">this</span>[c]<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">destroyElements</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>graphic<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabel<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelUpper<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>connector<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>shadowGroup<span class="pl-pds">&quot;</span></span>],b,c<span class="pl-k">=</span><span class="pl-c1">6</span>;c<span class="pl-k">--</span>;)b<span class="pl-k">=</span>a[c],<span class="pl-v">this</span>[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[b]<span class="pl-k">=</span><span class="pl-v">this</span>[b].<span class="pl-en">destroy</span>())},<span class="pl-en">getLabelConfig</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">category</span>,y<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">y</span>,color<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">color</span>,</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line">key<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">category</span>,series<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,point<span class="pl-k">:</span><span class="pl-v">this</span>,percentage<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">percentage</span>,total<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">total</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">stackTotal</span>}},<span class="pl-en">tooltipFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltipOptions</span>,d<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">valueDecimals</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">valuePrefix</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">valueSuffix</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointArrayMap</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{point.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;<span class="pl-k">if</span>(e<span class="pl-k">||</span>f)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:,.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>f}<span class="pl-pds">&quot;</span></span>)});<span class="pl-k">return</span> <span class="pl-en">Ba</span>(a,{point<span class="pl-k">:</span><span class="pl-v">this</span>,series<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>})},<span class="pl-en">firePointEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">options</span>;(<span class="pl-smi">e</span>.<span class="pl-smi">point</span>.<span class="pl-smi">events</span>[a]<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span>[a])<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">importEvents</span>();a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">allowPointSelect</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-smi">select</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">select</span>(<span class="pl-c1">null</span>,<span class="pl-smi">a</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">metaKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span>)});<span class="pl-en">G</span>(<span class="pl-v">this</span>,a,b,c)},visible<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-k">var</span> <span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">Series</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{isCartesian<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,pointClass<span class="pl-k">:</span><span class="pl-c1">Z</span>,sorted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,requireSorting<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>radius<span class="pl-pds">&quot;</span></span>},directTouch<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,axisTypes<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>],colorCounter<span class="pl-k">:</span><span class="pl-c1">0</span>,parallelArrays<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d,e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>,<span class="pl-smi">a</span>.<span class="pl-smi">_i</span>)<span class="pl-k">-</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>,<span class="pl-smi">b</span>.<span class="pl-smi">_i</span>)};<span class="pl-smi">c</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-smi">c</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">setOptions</span>(b);<span class="pl-smi">c</span>.<span class="pl-smi">linkedSeries</span><span class="pl-k">=</span>[];<span class="pl-smi">c</span>.<span class="pl-en">bindAxes</span>();<span class="pl-en">q</span>(c,{name<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">name</span>,state<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,pointAttr<span class="pl-k">:</span>{},visible<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>,selected<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">selected</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(ja)<span class="pl-smi">b</span>.<span class="pl-smi">animation</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">events</span>;<span class="pl-k">for</span>(d <span class="pl-k">in</span> e)<span class="pl-en">M</span>(c,d,e[d]);<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">click</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span>.<span class="pl-smi">events</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span>.<span class="pl-smi">events</span>.<span class="pl-smi">click</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">allowPointSelect</span>)<span class="pl-smi">a</span>.<span class="pl-smi">runTrackerClick</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-en">getColor</span>();<span class="pl-smi">c</span>.<span class="pl-en">getSymbol</span>();<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">parallelArrays</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){c[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>[]});<span class="pl-smi">c</span>.<span class="pl-en">setData</span>(<span class="pl-smi">b</span>.<span class="pl-c1">data</span>,</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isCartesian</span>)<span class="pl-smi">a</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(c);<span class="pl-smi">c</span>.<span class="pl-smi">_i</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-en">db</span>(f,g);<span class="pl-v">this</span>.<span class="pl-smi">yAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">db</span>(<span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">series</span>,g);<span class="pl-en">n</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>Series <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>)})},<span class="pl-en">bindAxes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,d;<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisTypes</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">n</span>(c[e],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(b[e]<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">index</span><span class="pl-k">||</span>b[e]<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>b[e]<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">id</span><span class="pl-k">||</span>b[e]<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">index</span><span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-smi">c</span>.<span class="pl-smi">series</span>.<span class="pl-c1">push</span>(a),a[e]<span class="pl-k">=</span>c,<span class="pl-smi">c</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">!</span>a[e]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">optionalAxis</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">18</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)})},<span class="pl-en">updateParallelArrays</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-v">arguments</span>;<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">parallelArrays</span>,</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">toYData</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">toYData</span>(a)<span class="pl-k">:</span>a[d];c[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>][b]<span class="pl-k">=</span>f}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>[b].<span class="pl-c1">apply</span>(c[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(d,<span class="pl-c1">2</span>))})},<span class="pl-en">autoIncrement</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xIncrement</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointIntervalUnit</span>,b<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">pointStart</span>,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">pointInterval</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">pointInterval</span>,<span class="pl-smi">a</span>.<span class="pl-smi">pointInterval</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>)a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">xa</span>(b),a<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">+</span>a[Bb](a[nb]()<span class="pl-k">+</span>c)<span class="pl-k">:</span><span class="pl-k">+</span>a[Cb](a[ob]()<span class="pl-k">+</span>c),c<span class="pl-k">=</span>a<span class="pl-k">-</span>b;<span class="pl-v">this</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">=</span>b<span class="pl-k">+</span>c;<span class="pl-k">return</span> b},<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">plotOptions</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">userOptions</span><span class="pl-k">||</span>{},d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotOptions</span><span class="pl-k">||</span>{},e<span class="pl-k">=</span>c[<span class="pl-v">this</span>.<span class="pl-c1">type</span>];<span class="pl-v">this</span>.<span class="pl-smi">userOptions</span><span class="pl-k">=</span>a;c<span class="pl-k">=</span><span class="pl-en">y</span>(e,<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">tooltipOptions</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">K</span>.<span class="pl-smi">tooltip</span>,<span class="pl-c1">K</span>.<span class="pl-smi">plotOptions</span>[<span class="pl-v">this</span>.<span class="pl-c1">type</span>].<span class="pl-smi">tooltip</span>,<span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,<span class="pl-smi">d</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">series</span>.<span class="pl-smi">tooltip</span>,d[<span class="pl-v">this</span>.<span class="pl-c1">type</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-v">this</span>.<span class="pl-c1">type</span>].<span class="pl-smi">tooltip</span>,<span class="pl-smi">a</span>.<span class="pl-smi">tooltip</span>);<span class="pl-smi">e</span>.<span class="pl-smi">marker</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">c</span>.<span class="pl-smi">marker</span>;<span class="pl-v">this</span>.<span class="pl-smi">zoneAxis</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">zoneAxis</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">zones</span><span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-smi">zones</span><span class="pl-k">||</span>[]).<span class="pl-c1">slice</span>();<span class="pl-k">if</span>((<span class="pl-smi">c</span>.<span class="pl-smi">negativeColor</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">negativeFillColor</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">zones</span>)<span class="pl-smi">a</span>.<span class="pl-c1">push</span>({value<span class="pl-k">:</span>c[<span class="pl-v">this</span>.<span class="pl-smi">zoneAxis</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Threshold<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">threshold</span><span class="pl-k">||</span><span class="pl-c1">0</span>,color<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">negativeColor</span>,</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line">fillColor<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">negativeFillColor</span>});<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">value</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>({color<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">color</span>,fillColor<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">fillColor</span>});<span class="pl-k">return</span> c},<span class="pl-en">getCyclic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">userOptions</span>,e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Index<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Counter<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">||</span>(<span class="pl-en">s</span>(d[e])<span class="pl-k">?</span>b<span class="pl-k">=</span>d[e]<span class="pl-k">:</span>(d[e]<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>[f]<span class="pl-k">%</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,<span class="pl-v">this</span>.<span class="pl-smi">chart</span>[f]<span class="pl-k">+=</span><span class="pl-c1">1</span>),b<span class="pl-k">=</span>c[b]);<span class="pl-v">this</span>[a]<span class="pl-k">=</span>b},<span class="pl-en">getColor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colorByPoint</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">getCyclic</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-c1">X</span>[<span class="pl-v">this</span>.<span class="pl-c1">type</span>].<span class="pl-c1">color</span>,<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span>)},<span class="pl-en">getSymbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>;</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-en">getCyclic</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>symbol<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">symbol</span>,<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">symbols</span>);<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>url<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-v">this</span>.<span class="pl-smi">symbol</span>))<span class="pl-smi">a</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">0</span>},drawLegendSymbol<span class="pl-k">:</span><span class="pl-smi">bb</span>.<span class="pl-smi">drawLineMarker</span>,<span class="pl-en">setData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">points</span>,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0</span>,h,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,j<span class="pl-k">=</span><span class="pl-c1">null</span>,l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>,m<span class="pl-k">=</span>l<span class="pl-k">&amp;&amp;!!</span><span class="pl-smi">l</span>.<span class="pl-smi">categories</span>,p<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">turboThreshold</span>,u<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xData</span>,r<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yData</span>,<span class="pl-c1">F</span><span class="pl-k">=</span>(h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pointArrayMap</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">cropped</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">hasGroupedData</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">visible</span>)<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){f[b].<span class="pl-smi">update</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-smi">i</span>.<span class="pl-c1">data</span>[b]<span class="pl-k">&amp;&amp;</span>f[b].<span class="pl-en">update</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)});</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span>{<span class="pl-smi">e</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">e</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">parallelArrays</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){e[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(p<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>p){<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span>h;)j<span class="pl-k">=</span>a[c],c<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-en">na</span>(j)){m<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">i</span>.<span class="pl-smi">pointStart</span>,<span class="pl-c1">0</span>);j<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">i</span>.<span class="pl-smi">pointInterval</span>,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)u[c]<span class="pl-k">=</span>m,r[c]<span class="pl-k">=</span>a[c],m<span class="pl-k">+=</span>j;<span class="pl-smi">e</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">=</span>m}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">Fa</span>(j))<span class="pl-k">if</span>(<span class="pl-c1">F</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)j<span class="pl-k">=</span>a[c],u[c]<span class="pl-k">=</span>j[<span class="pl-c1">0</span>],r[c]<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>,<span class="pl-c1">F</span><span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)j<span class="pl-k">=</span>a[c],u[c]<span class="pl-k">=</span>j[<span class="pl-c1">0</span>],r[c]<span class="pl-k">=</span>j[<span class="pl-c1">1</span>];<span class="pl-k">else</span> <span class="pl-en">S</span>(<span class="pl-c1">12</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c]<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>{series<span class="pl-k">:</span>e},<span class="pl-smi">e</span>.<span class="pl-smi">pointClass</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">apply</span>(j,[a[c]]),<span class="pl-smi">e</span>.<span class="pl-en">updateParallelArrays</span>(j,</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line">c),m<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(<span class="pl-smi">j</span>.<span class="pl-c1">name</span>)))<span class="pl-smi">l</span>.<span class="pl-smi">names</span>[<span class="pl-smi">j</span>.<span class="pl-c1">x</span>]<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">name</span>;<span class="pl-en">ta</span>(r[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">14</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>[];<span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">userOptions</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>a;<span class="pl-k">for</span>(c<span class="pl-k">=</span>g;c<span class="pl-k">--</span>;)f[c]<span class="pl-k">&amp;&amp;</span>f[c].<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span>f[c].<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(l)<span class="pl-smi">l</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">userMinRange</span>;<span class="pl-smi">e</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-smi">i</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">processData</span>(),<span class="pl-v">this</span>.<span class="pl-en">generatePoints</span>());b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">redraw</span>(c)},<span class="pl-en">processData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xData</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yData</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,e;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> f,g,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,i,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>;i<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">cropThreshold</span>;<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">getExtremesFromAll</span><span class="pl-k">||</span><span class="pl-smi">k</span>.<span class="pl-smi">getExtremesFromAll</span>,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isCartesian</span>,</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">val2lin</span>,m<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">isLog</span>,p,o;<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">h</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;!</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(h)a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getExtremes</span>(),p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>,o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>;<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">sorted</span><span class="pl-k">&amp;&amp;!</span>j<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>i<span class="pl-k">||</span>d<span class="pl-k">&gt;</span>i<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">forceCrop</span>))<span class="pl-k">if</span>(b[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&lt;</span>p<span class="pl-k">||</span>b[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>o)b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[];<span class="pl-k">else</span> <span class="pl-k">if</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span>p<span class="pl-k">||</span>b[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>o)e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">cropData</span>(<span class="pl-v">this</span>.<span class="pl-smi">xData</span>,<span class="pl-v">this</span>.<span class="pl-smi">yData</span>,p,o),b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xData</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">yData</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">start</span>,f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">1</span>;<span class="pl-k">--</span>i;)d<span class="pl-k">=</span>m<span class="pl-k">?</span><span class="pl-en">k</span>(b[i])<span class="pl-k">-</span><span class="pl-en">k</span>(b[i<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">:</span>b[i]<span class="pl-k">-</span>b[i<span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">===</span>x<span class="pl-k">||</span>d<span class="pl-k">&lt;</span>g)<span class="pl-k">?</span>g<span class="pl-k">=</span>d<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">requireSorting</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">15</span>);<span class="pl-v">this</span>.<span class="pl-smi">cropped</span><span class="pl-k">=</span>f;<span class="pl-v">this</span>.<span class="pl-smi">cropStart</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.<span class="pl-smi">processedXData</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">processedYData</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line">c;<span class="pl-v">this</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">=</span>g},<span class="pl-en">cropData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>e,h<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">cropShoulder</span>,<span class="pl-c1">1</span>),i;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>e;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[i]<span class="pl-k">&gt;=</span>c){f<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,i<span class="pl-k">-</span>h);<span class="pl-k">break</span>}<span class="pl-k">for</span>(c<span class="pl-k">=</span>i;c<span class="pl-k">&lt;</span>e;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c]<span class="pl-k">&gt;</span>d){g<span class="pl-k">=</span>c<span class="pl-k">+</span>h;<span class="pl-k">break</span>}<span class="pl-k">return</span>{xData<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(f,g),yData<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(f,g),start<span class="pl-k">:</span>f,end<span class="pl-k">:</span>g}},<span class="pl-en">generatePoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>,c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">processedXData</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">processedYData</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointClass</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">cropStart</span><span class="pl-k">||</span><span class="pl-c1">0</span>,i,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasGroupedData</span>,j,l<span class="pl-k">=</span>[],m;<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;!</span>k)b<span class="pl-k">=</span>[],<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>g;m<span class="pl-k">++</span>)i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">+</span>m,k<span class="pl-k">?</span>l[m]<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">f</span>).<span class="pl-en">init</span>(<span class="pl-v">this</span>,[d[m]].<span class="pl-c1">concat</span>(<span class="pl-en">qa</span>(e[m])))<span class="pl-k">:</span>(b[i]<span class="pl-k">?</span>j<span class="pl-k">=</span>b[i]<span class="pl-k">:</span>a[i]<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(b[i]<span class="pl-k">=</span>j<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">f</span>).<span class="pl-en">init</span>(<span class="pl-v">this</span>,a[i],d[m])),l[m]<span class="pl-k">=</span>j),l[m].<span class="pl-c1">index</span><span class="pl-k">=</span>i;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">!==</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">||</span>k))<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>c;m<span class="pl-k">++</span>)<span class="pl-k">if</span>(m<span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;!</span>k<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">+=</span>g),b[m])b[m].<span class="pl-en">destroyElements</span>(),b[m].<span class="pl-smi">plotX</span><span class="pl-k">=</span>x;<span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>l},<span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">processedXData</span>,d,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-en">getExtremes</span>();<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">max</span>,i,k,j,l,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">stackedYData</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">processedYData</span>;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>d;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(k<span class="pl-k">=</span>c[l],j<span class="pl-k">=</span>a[l],i<span class="pl-k">=</span>j<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>j<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line">x<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">isLog</span><span class="pl-k">||</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>j<span class="pl-k">&gt;</span><span class="pl-c1">0</span>),k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">getExtremesFromAll</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">getExtremesFromAll</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">cropped</span><span class="pl-k">||</span>(c[l<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>k)<span class="pl-k">&gt;=</span>g<span class="pl-k">&amp;&amp;</span>(c[l<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>k)<span class="pl-k">&lt;=</span>h,i<span class="pl-k">&amp;&amp;</span>k)<span class="pl-k">if</span>(i<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(;i<span class="pl-k">--</span>;)j[i]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(e[f<span class="pl-k">++</span>]<span class="pl-k">=</span>j[i]);<span class="pl-k">else</span> e[f<span class="pl-k">++</span>]<span class="pl-k">=</span>j;<span class="pl-v">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-en">Ua</span>(e);<span class="pl-v">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-en">Ha</span>(e)},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">processedXData</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">processData</span>();<span class="pl-v">this</span>.<span class="pl-en">generatePoints</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stacking</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">categories</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">points</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,h<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-v">this</span>.<span class="pl-smi">modifyValue</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointPlacement</span>,k<span class="pl-k">=</span>i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-en">na</span>(i),j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">threshold</span>,</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">startFromThreshold</span><span class="pl-k">?</span>j<span class="pl-k">:</span><span class="pl-c1">0</span>,m,p,n,r,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>g;a<span class="pl-k">++</span>){<span class="pl-k">var</span> w<span class="pl-k">=</span>f[a],<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">x</span>,q<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">y</span>;p<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">low</span>;<span class="pl-k">var</span> v<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">stacks</span>[(<span class="pl-v">this</span>.<span class="pl-smi">negStacks</span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&lt;</span>(l<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>j)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">stackKey</span>];<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-smi">w</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>q<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">S</span>(<span class="pl-c1">10</span>);<span class="pl-smi">w</span>.<span class="pl-smi">plotX</span><span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(<span class="pl-k">-</span><span class="pl-c1">1E5</span>,<span class="pl-smi">c</span>.<span class="pl-en">translate</span>(<span class="pl-c1">A</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,i,<span class="pl-v">this</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>flags<span class="pl-pds">&quot;</span></span>)),<span class="pl-c1">1E5</span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">w</span>.<span class="pl-smi">isNull</span><span class="pl-k">&amp;&amp;</span>v<span class="pl-k">&amp;&amp;</span>v[<span class="pl-c1">A</span>])r<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">getStackIndicator</span>(r,<span class="pl-c1">A</span>,<span class="pl-v">this</span>.<span class="pl-c1">index</span>),v<span class="pl-k">=</span>v[<span class="pl-c1">A</span>],q<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-smi">points</span>[<span class="pl-smi">r</span>.<span class="pl-smi">key</span>],p<span class="pl-k">=</span>q[<span class="pl-c1">0</span>],q<span class="pl-k">=</span>q[<span class="pl-c1">1</span>],p<span class="pl-k">===</span>l<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-en">o</span>(j,<span class="pl-smi">e</span>.<span class="pl-smi">min</span>)),<span class="pl-smi">e</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">null</span>),<span class="pl-smi">w</span>.<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">stackTotal</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-smi">total</span>,<span class="pl-smi">w</span>.<span class="pl-smi">percentage</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-smi">total</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">w</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-smi">v</span>.<span class="pl-smi">total</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">100</span>,<span class="pl-smi">w</span>.<span class="pl-smi">stackY</span><span class="pl-k">=</span>q,<span class="pl-smi">v</span>.<span class="pl-en">setOffset</span>(<span class="pl-v">this</span>.<span class="pl-smi">pointXOffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">barW</span><span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">w</span>.<span class="pl-smi">yBottom</span><span class="pl-k">=</span><span class="pl-en">s</span>(p)<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(p,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>;h<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">modifyValue</span>(q,w));<span class="pl-smi">w</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span>p<span class="pl-k">=</span><span class="pl-k">typeof</span> q<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">!==</span><span class="pl-c1">Infinity</span><span class="pl-k">?</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(<span class="pl-k">-</span><span class="pl-c1">1E5</span>,<span class="pl-smi">e</span>.<span class="pl-en">translate</span>(q,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">1E5</span>)<span class="pl-k">:</span>x;<span class="pl-smi">w</span>.<span class="pl-smi">isInside</span><span class="pl-k">=</span>p<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&lt;=</span><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&lt;=</span><span class="pl-smi">c</span>.<span class="pl-smi">len</span>;<span class="pl-smi">w</span>.<span class="pl-smi">clientX</span><span class="pl-k">=</span>k<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">translate</span>(<span class="pl-c1">A</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span>m;<span class="pl-smi">w</span>.<span class="pl-smi">negative</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span>(j<span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">w</span>.<span class="pl-smi">category</span><span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>d[<span class="pl-smi">w</span>.<span class="pl-c1">x</span>]<span class="pl-k">!==</span>x<span class="pl-k">?</span>d[<span class="pl-smi">w</span>.<span class="pl-c1">x</span>]<span class="pl-k">:</span><span class="pl-smi">w</span>.<span class="pl-c1">x</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-c1">F</span>,<span class="pl-en">Q</span>(m<span class="pl-k">-</span>n)));n<span class="pl-k">=</span>m}<span class="pl-v">this</span>.<span class="pl-smi">closestPointRangePx</span><span class="pl-k">=</span><span class="pl-c1">F</span>},<span class="pl-en">getValidPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Ka</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">isNull</span>})},<span class="pl-en">setClip</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clipBox</span>,g<span class="pl-k">=</span>f<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">clipBox</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">sharedClipKey</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>_sharedClip<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">duration</span>,a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">easing</span>,<span class="pl-smi">g</span>.<span class="pl-c1">height</span>,<span class="pl-smi">c</span>.<span class="pl-smi">xAxis</span>,<span class="pl-smi">c</span>.<span class="pl-smi">yAxis</span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span>b[h],k<span class="pl-k">=</span>b[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>i){<span class="pl-k">if</span>(a)<span class="pl-smi">g</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">0</span>,b[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clipRect</span>(<span class="pl-k">-</span><span class="pl-c1">99</span>,e<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>,<span class="pl-c1">99</span>,e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span>);b[h]<span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clipRect</span>(g)}a<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">i</span>.<span class="pl-smi">count</span><span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">clip</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.<span class="pl-smi">group</span>.<span class="pl-c1">clip</span>(a<span class="pl-k">||</span>f<span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">clipRect</span>),<span class="pl-v">this</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-c1">clip</span>(k),<span class="pl-v">this</span>.<span class="pl-smi">sharedClipKey</span><span class="pl-k">=</span>h;a<span class="pl-k">||</span>(<span class="pl-smi">i</span>.<span class="pl-smi">count</span><span class="pl-k">-=</span><span class="pl-c1">1</span>,<span class="pl-smi">i</span>.<span class="pl-smi">count</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span>b[h]<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">||</span>(b[h]<span class="pl-k">=</span>b[h].<span class="pl-en">destroy</span>()),b[h<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;</span>(b[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>b[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>].<span class="pl-en">destroy</span>())))},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>,d;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;!</span><span class="pl-en">aa</span>(c))c<span class="pl-k">=</span><span class="pl-c1">X</span>[<span class="pl-v">this</span>.<span class="pl-c1">type</span>].<span class="pl-smi">animation</span>;a<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">setClip</span>(c)<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">sharedClipKey</span>,(a<span class="pl-k">=</span>b[d])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">animate</span>({width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotSizeX</span>},c),b[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;</span>b[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">animate</span>({width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">+</span><span class="pl-c1">99</span>},c),<span class="pl-v">this</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>)},<span class="pl-en">afterAnimate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-en">setClip</span>();<span class="pl-en">G</span>(<span class="pl-v">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>afterAnimate<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">points</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d,e,f,g,h,i,k,j,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],p,n,r,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">markerGroup</span>,w<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-en">o</span>(<span class="pl-smi">l</span>.<span class="pl-smi">enabled</span>,<span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">isRadial</span>,<span class="pl-v">this</span>.<span class="pl-smi">closestPointRangePx</span><span class="pl-k">&gt;</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">l</span>.<span class="pl-smi">radius</span>);<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-smi">enabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">_hasPointMarkers</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>b[f],d<span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-smi">g</span>.<span class="pl-smi">plotX</span>),e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotY</span>,j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">graphic</span>,p<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span>{},n<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">g</span>.<span class="pl-smi">marker</span>,a<span class="pl-k">=</span>w<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span>x<span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-smi">enabled</span>,r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">isInside</span>,a<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">g</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>m,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,i<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">p</span>.<span class="pl-smi">symbol</span>,<span class="pl-v">this</span>.<span class="pl-smi">symbol</span>),k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>url<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-c1">0</span>,j)j[r<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-en">attr</span>(a).<span class="pl-c1">animate</span>(<span class="pl-en">q</span>({x<span class="pl-k">:</span>d<span class="pl-k">-</span>h,y<span class="pl-k">:</span>e<span class="pl-k">-</span>h},<span class="pl-smi">j</span>.<span class="pl-smi">symbolName</span><span class="pl-k">?</span>{width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>h}<span class="pl-k">:</span>{}));<span class="pl-k">else</span>{<span class="pl-k">if</span>(r<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>k))<span class="pl-smi">g</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">symbol</span>(i,d<span class="pl-k">-</span>h,e<span class="pl-k">-</span>h,<span class="pl-c1">2</span><span class="pl-k">*</span>h,<span class="pl-c1">2</span><span class="pl-k">*</span>h,n<span class="pl-k">?</span>p<span class="pl-k">:</span>l).<span class="pl-en">attr</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">F</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(j)<span class="pl-smi">g</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">convertAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointAttrToOptions</span>,f,g,h<span class="pl-k">=</span>{},a<span class="pl-k">=</span>a<span class="pl-k">||</span>{},b<span class="pl-k">=</span>b<span class="pl-k">||</span>{},c<span class="pl-k">=</span>c<span class="pl-k">||</span>{},d<span class="pl-k">=</span>d<span class="pl-k">||</span>{};<span class="pl-k">for</span>(f <span class="pl-k">in</span> e)g<span class="pl-k">=</span>e[f],h[f]<span class="pl-k">=</span><span class="pl-en">o</span>(a[g],b[f],c[f],d[f]);<span class="pl-k">return</span> h},<span class="pl-en">getAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-c1">X</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span>].<span class="pl-smi">marker</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">marker</span><span class="pl-k">:</span>b,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">states</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hover</span>,f,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">negativeColor</span>;f<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>g,fill<span class="pl-k">:</span>g};<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span><span class="pl-k">||</span>[],k,j,l<span class="pl-k">=</span>[],m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttrToOptions</span>;k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hasPointSpecificOptions</span>;<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">lineColor</span>,</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line">u<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">fillColor</span>;j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">turboThreshold</span>;<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zones</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoneAxis</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,w;<span class="pl-smi">b</span>.<span class="pl-smi">marker</span><span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">radius</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">radius</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">radiusPlus</span>,<span class="pl-smi">e</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">lineWidthPlus</span>)<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-en">N</span>(<span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span>g).<span class="pl-en">brighten</span>(<span class="pl-smi">e</span>.<span class="pl-smi">brightness</span>).<span class="pl-c1">get</span>(),<span class="pl-smi">e</span>.<span class="pl-smi">negativeColor</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">negativeColor</span><span class="pl-k">||</span><span class="pl-en">N</span>(<span class="pl-smi">e</span>.<span class="pl-smi">negativeColor</span><span class="pl-k">||</span>h).<span class="pl-en">brighten</span>(<span class="pl-smi">e</span>.<span class="pl-smi">brightness</span>).<span class="pl-c1">get</span>());l[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(c,f);<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){l[b]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(d[b],l[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])});<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>l;g<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>j<span class="pl-k">||</span>g<span class="pl-k">&lt;</span>j<span class="pl-k">||</span>k)<span class="pl-k">for</span>(;g<span class="pl-k">--</span>;){j<span class="pl-k">=</span>i[g];<span class="pl-k">if</span>((c<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-c1">options</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-smi">c</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-c1">length</span>){k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span>r[k];j[<span class="pl-c1">F</span>]<span class="pl-k">&gt;=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>;)f<span class="pl-k">=</span>r[<span class="pl-k">++</span>k];<span class="pl-smi">j</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">fillColor</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">f</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">color</span>)}k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">colorByPoint</span><span class="pl-k">||</span><span class="pl-smi">j</span>.<span class="pl-c1">color</span>;<span class="pl-k">if</span>(<span class="pl-smi">j</span>.<span class="pl-c1">options</span>)<span class="pl-k">for</span>(w <span class="pl-k">in</span> m)<span class="pl-en">s</span>(c[m[w]])<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(k){c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};k<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">states</span><span class="pl-k">||</span>{};f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hover</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hover</span><span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span><span class="pl-smi">j</span>.<span class="pl-smi">negative</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-smi">fillColor</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">fillColor</span>)f[<span class="pl-smi">a</span>.<span class="pl-smi">pointAttrToOptions</span>.<span class="pl-smi">fill</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">color</span><span class="pl-k">||!</span><span class="pl-smi">j</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span>e[<span class="pl-smi">j</span>.<span class="pl-smi">negative</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>negativeColor<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-en">N</span>(<span class="pl-smi">j</span>.<span class="pl-c1">color</span>).<span class="pl-en">brighten</span>(<span class="pl-smi">f</span>.<span class="pl-smi">brightness</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">brightness</span>).<span class="pl-c1">get</span>();f<span class="pl-k">=</span>{color<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-c1">color</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span>u)<span class="pl-smi">f</span>.<span class="pl-smi">fillColor</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">color</span>;</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>p)<span class="pl-smi">f</span>.<span class="pl-smi">lineColor</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">color</span>;<span class="pl-smi">c</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">c</span>.<span class="pl-c1">color</span>;k[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(<span class="pl-en">q</span>(f,c),l[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">k</span>.<span class="pl-smi">hover</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hover</span>,<span class="pl-smi">l</span>.<span class="pl-smi">hover</span>,k[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">k</span>.<span class="pl-smi">select</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(<span class="pl-smi">d</span>.<span class="pl-smi">select</span>,<span class="pl-smi">l</span>.<span class="pl-smi">select</span>,k[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])}<span class="pl-k">else</span> k<span class="pl-k">=</span>l;<span class="pl-smi">j</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>k}},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-cce">\/</span>533<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(ya),d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">||</span>[],f,g,h;<span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>);<span class="pl-en">W</span>(a);<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisTypes</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(h<span class="pl-k">=</span>a[b])<span class="pl-en">ua</span>(<span class="pl-smi">h</span>.<span class="pl-smi">series</span>,a),<span class="pl-smi">h</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">forceRedraw</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">legend</span>.<span class="pl-en">destroyItem</span>(a);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;d<span class="pl-k">--</span>;)(f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line">e[d])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">a</span>.<span class="pl-smi">points</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">clearTimeout</span>(<span class="pl-smi">a</span>.<span class="pl-smi">animationTimeout</span>);<span class="pl-k">for</span>(g <span class="pl-k">in</span> a)a[g]<span class="pl-k">instanceof</span> <span class="pl-c1">O</span><span class="pl-k">&amp;&amp;!</span>a[g].<span class="pl-smi">survive</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,a[g][d]());<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">===</span>a)<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">ua</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,a);<span class="pl-k">for</span>(g <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[g]},<span class="pl-en">getGraphPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">step</span>,g<span class="pl-k">=</span>[],h,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">points</span>;<span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">i</span>,<span class="pl-smi">k</span>){<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">plotX</span>,l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">plotY</span>,m<span class="pl-k">=</span>a[k<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">if</span>((<span class="pl-smi">i</span>.<span class="pl-smi">leftCliff</span><span class="pl-k">||</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-smi">rightCliff</span>)<span class="pl-k">&amp;&amp;!</span>c)h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">i</span>.<span class="pl-smi">isNull</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">s</span>(b)<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">connectNulls</span><span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-smi">isNull</span><span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">?</span>h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span>(k<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>h<span class="pl-k">?</span>m<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">i</span>.<span class="pl-smi">plotX</span>,</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">i</span>.<span class="pl-smi">plotY</span>]<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">getPointSpline</span><span class="pl-k">?</span>m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getPointSpline</span>(a,i,k)<span class="pl-k">:</span>f<span class="pl-k">?</span>(m<span class="pl-k">=</span>f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">m</span>.<span class="pl-smi">plotX</span>,l]<span class="pl-k">:</span>f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,(<span class="pl-smi">m</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>j)<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-smi">m</span>.<span class="pl-smi">plotY</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,(<span class="pl-smi">m</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>j)<span class="pl-k">/</span><span class="pl-c1">2</span>,l]<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,j,<span class="pl-smi">m</span>.<span class="pl-smi">plotY</span>],<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,j,l))<span class="pl-k">:</span>m<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,j,l],<span class="pl-smi">g</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(g,m),h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-smi">graphPath</span><span class="pl-k">=</span>g},<span class="pl-en">drawGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span>[[<span class="pl-s"><span class="pl-pds">&quot;</span>graph<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-smi">lineColor</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">color</span>,<span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>]],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linecap</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-smi">gappedPath</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">getGraphPath</span>).<span class="pl-c1">call</span>(<span class="pl-v">this</span>),g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">fillGraph</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">zones</span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>zoneGraph<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">e,<span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">d</span>.<span class="pl-smi">dashStyle</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>])});<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],j<span class="pl-k">=</span>a[k];<span class="pl-k">if</span>(j)<span class="pl-smi">j</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>f});<span class="pl-k">else</span> <span class="pl-k">if</span>((d<span class="pl-k">||</span>g)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>)j<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>c[<span class="pl-c1">1</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d,fill<span class="pl-k">:</span>g,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>},c[<span class="pl-c1">2</span>]<span class="pl-k">?</span><span class="pl-smi">j</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span>c[<span class="pl-c1">2</span>]<span class="pl-k">:</span>e<span class="pl-k">&amp;&amp;</span>(j[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linecap<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>j[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>),a[k]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(f).<span class="pl-en">attr</span>(j).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>).<span class="pl-en">shadow</span>(i<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">shadow</span>)})},<span class="pl-en">applyZones</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">zones</span>,e,f,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">clips</span><span class="pl-k">||</span>[],h,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">graph</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">area</span>,j<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span>,<span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span>),l<span class="pl-k">=</span><span class="pl-v">this</span>[(<span class="pl-v">this</span>.<span class="pl-smi">zoneAxis</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Axis<span class="pl-pds">&quot;</span></span>],m,p<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">reversed</span>,u<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span>,r<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">horiz</span>,q,w,<span class="pl-c1">A</span>,s<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">||</span>k)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">min</span><span class="pl-k">!==</span>x)i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">hide</span>(),k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">hide</span>(),m<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">getExtremes</span>(),<span class="pl-en">n</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">n</span>){e<span class="pl-k">=</span>p<span class="pl-k">?</span>r<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">:</span>r<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">m</span>.<span class="pl-smi">min</span>);e<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(<span class="pl-en">o</span>(f,e),<span class="pl-c1">0</span>),j);f<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(<span class="pl-en">B</span>(<span class="pl-smi">l</span>.<span class="pl-en">toPixels</span>(<span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-c1">value</span>,<span class="pl-smi">m</span>.<span class="pl-smi">max</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>)),<span class="pl-c1">0</span>),j);s<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">m</span>.<span class="pl-smi">max</span>));q<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e<span class="pl-k">-</span>f);w<span class="pl-k">=</span><span class="pl-en">I</span>(e,f);<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-en">t</span>(e,f);<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-smi">isXAxis</span>){<span class="pl-k">if</span>(h<span class="pl-k">=</span>{x<span class="pl-k">:</span>u<span class="pl-k">?</span><span class="pl-c1">A</span><span class="pl-k">:</span>w,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span>q,height<span class="pl-k">:</span>j},<span class="pl-k">!</span>r)<span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(h<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span>u<span class="pl-k">?</span><span class="pl-c1">A</span><span class="pl-k">:</span>w,width<span class="pl-k">:</span>j,height<span class="pl-k">:</span>q},r)<span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span>;<span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">isVML</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span>p<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line">w<span class="pl-k">:</span><span class="pl-c1">A</span>,height<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-c1">width</span>,width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span>}<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">spacingBox</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-c1">height</span>,height<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span>});g[n]<span class="pl-k">?</span>g[n].<span class="pl-c1">animate</span>(h)<span class="pl-k">:</span>(g[n]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">clipRect</span>(h),i<span class="pl-k">&amp;&amp;</span>a[<span class="pl-s"><span class="pl-pds">&quot;</span>zoneGraph<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n].<span class="pl-c1">clip</span>(g[n]),k<span class="pl-k">&amp;&amp;</span>a[<span class="pl-s"><span class="pl-pds">&quot;</span>zoneArea<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n].<span class="pl-c1">clip</span>(g[n]));s<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">&gt;</span><span class="pl-smi">m</span>.<span class="pl-smi">max</span>}),<span class="pl-v">this</span>.<span class="pl-smi">clips</span><span class="pl-k">=</span>g},<span class="pl-en">invertGroups</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">len</span>,height<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">len</span>};<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){b[c]<span class="pl-k">&amp;&amp;</span>b[c].<span class="pl-en">attr</span>(a).<span class="pl-en">invert</span>()})}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>)<span class="pl-en">M</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,a),<span class="pl-en">M</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-en">W</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,a)}),<span class="pl-en">a</span>(),<span class="pl-smi">b</span>.<span class="pl-smi">invertGroups</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line">a},<span class="pl-en">plotGroup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>[a],g<span class="pl-k">=</span><span class="pl-k">!</span>f;g<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[a]<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">g</span>(b).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span>d<span class="pl-k">||</span><span class="pl-c1">0.1</span>}).<span class="pl-c1">add</span>(e),<span class="pl-smi">f</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-series-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">index</span>));<span class="pl-smi">f</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span>c})[g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-v">this</span>.<span class="pl-en">getPlotBox</span>());<span class="pl-k">return</span> f},<span class="pl-en">getPlotBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>)b<span class="pl-k">=</span>c,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>;<span class="pl-k">return</span>{translateX<span class="pl-k">:</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span>,translateY<span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">top</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>,scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>}},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">animation</span>)<span class="pl-k">&amp;&amp;!!</span><span class="pl-smi">a</span>.<span class="pl-smi">animate</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isSVG</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">duration</span>,<span class="pl-c1">500</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hasRendered</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">seriesGroup</span>;c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">plotGroup</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>series<span class="pl-pds">&quot;</span></span>,f,g,i);<span class="pl-smi">a</span>.<span class="pl-smi">markerGroup</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">plotGroup</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markers<span class="pl-pds">&quot;</span></span>,f,g,i);e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">animate</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">getAttribs</span>();<span class="pl-smi">c</span>.<span class="pl-smi">inverted</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isCartesian</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">drawGraph</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">drawGraph</span>(),<span class="pl-smi">a</span>.<span class="pl-en">applyZones</span>());<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">redraw</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">redraw</span>()});<span class="pl-smi">a</span>.<span class="pl-smi">drawDataLabels</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">drawDataLabels</span>();<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">drawPoints</span>();<span class="pl-smi">a</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">enableMouseTracking</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">drawTracker</span>();<span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">invertGroups</span>();<span class="pl-smi">d</span>.<span class="pl-c1">clip</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">sharedClipKey</span><span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">clip</span>(<span class="pl-smi">b</span>.<span class="pl-smi">clipRect</span>);e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">animate</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>h)<span class="pl-smi">a</span>.<span class="pl-smi">animationTimeout</span><span class="pl-k">=</span><span class="pl-en">Na</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">afterAnimate</span>()},e);<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">redraw</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isDirtyData</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isDirty</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">group</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>;d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotWidth</span>,height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotHeight</span>}),<span class="pl-smi">d</span>.<span class="pl-c1">animate</span>({translateX<span class="pl-k">:</span><span class="pl-en">o</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">left</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span>),translateY<span class="pl-k">:</span><span class="pl-en">o</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">top</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>)}));<span class="pl-v">this</span>.<span class="pl-en">translate</span>();<span class="pl-v">this</span>.<span class="pl-en">render</span>();b<span class="pl-k">&amp;&amp;</span><span class="pl-en">G</span>(<span class="pl-v">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line">(c<span class="pl-k">||</span>b)<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-smi">kdTree</span>},kdDimensions<span class="pl-k">:</span><span class="pl-c1">1</span>,kdAxisArray<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>clientX<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>plotY<span class="pl-pds">&quot;</span></span>],<span class="pl-en">searchPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">inverted</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">searchKDTree</span>({clientX<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">pos</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">pos</span>,plotY<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span>},b)},<span class="pl-en">buildKDTree</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g,h;<span class="pl-k">if</span>(h<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">kdAxisArray</span>[e<span class="pl-k">%</span>f],<span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a[g]<span class="pl-k">-</span>b[g]}),h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(h<span class="pl-k">/</span><span class="pl-c1">2</span>),{point<span class="pl-k">:</span>c[h],left<span class="pl-k">:</span><span class="pl-en">a</span>(<span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,h),e<span class="pl-k">+</span><span class="pl-c1">1</span>,f),right<span class="pl-k">:</span><span class="pl-en">a</span>(<span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(h<span class="pl-k">+</span><span class="pl-c1">1</span>),e<span class="pl-k">+</span><span class="pl-c1">1</span>,f)}}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">kdDimensions</span>;<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">kdTree</span>;<span class="pl-en">Na</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">points</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>});<span class="pl-smi">b</span>.<span class="pl-smi">kdTree</span><span class="pl-k">=</span><span class="pl-en">a</span>(d,c,c)},<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">kdNow</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>)},<span class="pl-en">searchKDTree</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">k</span>,<span class="pl-smi">j</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span>,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">kdAxisArray</span>[k<span class="pl-k">%</span>j],p,n,o<span class="pl-k">=</span>l;n<span class="pl-k">=</span><span class="pl-en">s</span>(a[e])<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(l[e])<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a[e]<span class="pl-k">-</span>l[e],<span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>;p<span class="pl-k">=</span><span class="pl-en">s</span>(a[f])<span class="pl-k">&amp;&amp;</span><span class="pl-en">s</span>(l[f])<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a[f]<span class="pl-k">-</span>l[f],<span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>;p<span class="pl-k">=</span>(n<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(p<span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">l</span>.<span class="pl-smi">dist</span><span class="pl-k">=</span><span class="pl-en">s</span>(p)<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(p)<span class="pl-k">:</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>;<span class="pl-smi">l</span>.<span class="pl-smi">distX</span><span class="pl-k">=</span><span class="pl-en">s</span>(n)<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(n)<span class="pl-k">:</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>;m<span class="pl-k">=</span>a[m]<span class="pl-k">-</span>l[m];p<span class="pl-k">=</span>m<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>;n<span class="pl-k">=</span>m<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>;b[p]<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-en">c</span>(a,b[p],k<span class="pl-k">+</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line">j),o<span class="pl-k">=</span>p[g]<span class="pl-k">&lt;</span>o[g]<span class="pl-k">?</span>p<span class="pl-k">:</span>l);b[n]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(m<span class="pl-k">*</span>m)<span class="pl-k">&lt;</span>o[g]<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">c</span>(a,b[n],k<span class="pl-k">+</span><span class="pl-c1">1</span>,j),o<span class="pl-k">=</span>a[g]<span class="pl-k">&lt;</span>o[g]<span class="pl-k">?</span>a<span class="pl-k">:</span>o);<span class="pl-k">return</span> o}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">kdAxisArray</span>[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">kdAxisArray</span>[<span class="pl-c1">1</span>],g<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>distX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dist<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">kdTree</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">buildKDTree</span>();<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">kdTree</span>)<span class="pl-k">return</span> <span class="pl-en">c</span>(a,<span class="pl-v">this</span>.<span class="pl-smi">kdTree</span>,<span class="pl-v">this</span>.<span class="pl-smi">kdDimensions</span>,<span class="pl-v">this</span>.<span class="pl-smi">kdDimensions</span>)}};<span class="pl-en">q</span>(<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">addSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-v">this</span>;a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">G</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>addSeries<span class="pl-pds">&quot;</span></span>,{options<span class="pl-k">:</span>a},<span class="pl-k">function</span>(){d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">initSeries</span>(a);<span class="pl-smi">e</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">e</span>.<span class="pl-en">linkSeries</span>();b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">redraw</span>(c)}));<span class="pl-k">return</span> d},<span class="pl-en">addAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>;<span class="pl-k">new</span> <span class="pl-en">Y</span>(<span class="pl-v">this</span>,<span class="pl-en">y</span>(a,{index<span class="pl-k">:</span><span class="pl-v">this</span>[e].<span class="pl-c1">length</span>,isX<span class="pl-k">:</span>b}));f[e]<span class="pl-k">=</span><span class="pl-en">qa</span>(f[e]<span class="pl-k">||</span>{});f[e].<span class="pl-c1">push</span>(a);<span class="pl-en">o</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">redraw</span>(d)},<span class="pl-en">showLoading</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">loadingDiv</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">loading</span>,<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(){d<span class="pl-k">&amp;&amp;</span><span class="pl-en">L</span>(d,{left<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>})};<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-smi">b</span>.<span class="pl-smi">loadingDiv</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-en">ba</span>(Ia,{className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-loading<span class="pl-pds">&quot;</span></span>},<span class="pl-en">q</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>,{zIndex<span class="pl-k">:</span><span class="pl-c1">10</span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">b</span>.<span class="pl-smi">container</span>),<span class="pl-smi">b</span>.<span class="pl-smi">loadingSpan</span><span class="pl-k">=</span><span class="pl-en">ba</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-smi">e</span>.<span class="pl-smi">labelStyle</span>,d),<span class="pl-en">M</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>,f);<span class="pl-smi">b</span>.<span class="pl-smi">loadingSpan</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">lang</span>.<span class="pl-smi">loading</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">loadingShown</span>)<span class="pl-en">L</span>(d,{opacity<span class="pl-k">:</span><span class="pl-c1">0</span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}),<span class="pl-en">Sa</span>(d,{opacity<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-smi">opacity</span>},{duration<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">showDuration</span><span class="pl-k">||</span><span class="pl-c1">0</span>}),<span class="pl-smi">b</span>.<span class="pl-smi">loadingShown</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">f</span>()},<span class="pl-en">hideLoading</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">loadingDiv</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-en">Sa</span>(b,{opacity<span class="pl-k">:</span><span class="pl-c1">0</span>},{duration<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">loading</span>.<span class="pl-smi">hideDuration</span><span class="pl-k">||</span><span class="pl-c1">100</span>,<span class="pl-en">complete</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">L</span>(b,{display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>})}});<span class="pl-v">this</span>.<span class="pl-smi">loadingShown</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}});<span class="pl-en">q</span>(<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(){<span class="pl-smi">f</span>.<span class="pl-en">applyOptions</span>(a);<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>h)<span class="pl-smi">f</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(<span class="pl-en">aa</span>(a)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">Fa</span>(a))<span class="pl-smi">f</span>.<span class="pl-en">redraw</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">marker</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">marker</span>.<span class="pl-smi">symbol</span>)<span class="pl-smi">f</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">dataLabels</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-smi">f</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">dataLabel</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">f</span>.<span class="pl-smi">redraw</span><span class="pl-k">=</span><span class="pl-c1">null</span>};i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">index</span>;<span class="pl-smi">g</span>.<span class="pl-en">updateParallelArrays</span>(f,i);<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">name</span>)l[<span class="pl-smi">f</span>.<span class="pl-c1">x</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">name</span>;<span class="pl-smi">j</span>.<span class="pl-c1">data</span>[i]<span class="pl-k">=</span><span class="pl-en">aa</span>(<span class="pl-smi">j</span>.<span class="pl-c1">data</span>[i])<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">options</span><span class="pl-k">:</span>a;<span class="pl-smi">g</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-smi">fixedBox</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">hasCartesianSeries</span>)<span class="pl-smi">k</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">j</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">k</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">redraw</span>(c)}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">series</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">graphic</span>,i,k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">chart</span>,j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">options</span>,l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">names</span>,b<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);d<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-en">e</span>()<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>update<span class="pl-pds">&quot;</span></span>,{options<span class="pl-k">:</span>a},</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line">e)},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-en">removePoint</span>(<span class="pl-en">za</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">data</span>),a,b)}});<span class="pl-en">q</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">addPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">data</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">graph</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">area</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">names</span>,l<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">shift</span><span class="pl-k">||</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>graph<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>],h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">data</span>,p,u<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xData</span>;<span class="pl-en">Va</span>(d,k);<span class="pl-k">if</span>(c){<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">zones</span>.<span class="pl-c1">length</span>;d<span class="pl-k">--</span>;)<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>zoneGraph<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>zoneArea<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d);<span class="pl-en">n</span>(m,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(e[a])e[a].<span class="pl-smi">shift</span><span class="pl-k">=</span>l<span class="pl-k">+</span>(<span class="pl-smi">f</span>.<span class="pl-smi">step</span><span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">1</span>)})}<span class="pl-k">if</span>(i)<span class="pl-smi">i</span>.<span class="pl-smi">isArea</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);i<span class="pl-k">=</span>{series<span class="pl-k">:</span>e};<span class="pl-smi">e</span>.<span class="pl-smi">pointClass</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">apply</span>(i,[a]);m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">x</span>;d<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">requireSorting</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">&lt;</span>u[d<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;d<span class="pl-k">&amp;&amp;</span>u[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>m;)d<span class="pl-k">--</span>;<span class="pl-smi">e</span>.<span class="pl-en">updateParallelArrays</span>(i,<span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,d,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-en">updateParallelArrays</span>(i,d);<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">name</span>)j[m]<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">name</span>;<span class="pl-smi">h</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">0</span>,a);p<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">data</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">0</span>,<span class="pl-c1">null</span>),<span class="pl-smi">e</span>.<span class="pl-en">processData</span>());<span class="pl-smi">f</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">generatePoints</span>();c<span class="pl-k">&amp;&amp;</span>(g[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>g[<span class="pl-c1">0</span>].<span class="pl-smi">remove</span><span class="pl-k">?</span>g[<span class="pl-c1">0</span>].<span class="pl-c1">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(<span class="pl-smi">g</span>.<span class="pl-c1">shift</span>(),<span class="pl-smi">e</span>.<span class="pl-en">updateParallelArrays</span>(i,<span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">h</span>.<span class="pl-c1">shift</span>()));<span class="pl-smi">e</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">e</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-en">getAttribs</span>(),<span class="pl-smi">k</span>.<span class="pl-en">redraw</span>())},<span class="pl-en">removePoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">data</span>,f<span class="pl-k">=</span>e[a],g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">points</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>,<span class="pl-en">i</span><span class="pl-k">=</span><span class="pl-k">function</span>(){g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>);<span class="pl-smi">e</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>);<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>);<span class="pl-smi">d</span>.<span class="pl-en">updateParallelArrays</span>(f<span class="pl-k">||</span>{series<span class="pl-k">:</span>d},<span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,a,<span class="pl-c1">1</span>);f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">d</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">redraw</span>()};<span class="pl-en">Va</span>(c,h);b<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);f<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,i)<span class="pl-k">:</span><span class="pl-en">i</span>()},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>;<span class="pl-en">G</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-en">linkSeries</span>();<span class="pl-en">o</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">redraw</span>(b)})},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">userOptions</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">type</span>,g<span class="pl-k">=</span><span class="pl-c1">D</span>[f].<span class="pl-c1">prototype</span>,h<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line">i;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">!==</span>f<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">zIndex</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)<span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">n</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){h[a]<span class="pl-k">=</span>c[a];<span class="pl-k">delete</span> c[a]});a<span class="pl-k">=</span><span class="pl-en">y</span>(e,{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,index<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">index</span>,pointStart<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">xData</span>[<span class="pl-c1">0</span>]},{data<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>},a);<span class="pl-v">this</span>.<span class="pl-c1">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(i <span class="pl-k">in</span> g)<span class="pl-v">this</span>[i]<span class="pl-k">=</span>x;<span class="pl-en">q</span>(<span class="pl-v">this</span>,<span class="pl-c1">D</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">||</span>f].<span class="pl-c1">prototype</span>);<span class="pl-en">n</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){c[a]<span class="pl-k">=</span>h[a]});<span class="pl-v">this</span>.<span class="pl-en">init</span>(d,a);<span class="pl-smi">d</span>.<span class="pl-en">linkSeries</span>();<span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">redraw</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)}});<span class="pl-en">q</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>[<span class="pl-v">this</span>.<span class="pl-smi">coll</span>][<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>]<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-v">this</span>.<span class="pl-smi">userOptions</span>,a);<span class="pl-v">this</span>.<span class="pl-en">destroy</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-smi">_addedPlotLB</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">_labelPanes</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line">x;<span class="pl-v">this</span>.<span class="pl-en">init</span>(c,<span class="pl-en">q</span>(a,{events<span class="pl-k">:</span>x}));<span class="pl-smi">c</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">o</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">coll</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)d[e]<span class="pl-k">&amp;&amp;</span>d[e].<span class="pl-c1">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">ua</span>(<span class="pl-smi">b</span>.<span class="pl-smi">axes</span>,<span class="pl-v">this</span>);<span class="pl-en">ua</span>(b[c],<span class="pl-v">this</span>);<span class="pl-smi">b</span>.<span class="pl-c1">options</span>[c].<span class="pl-c1">splice</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>,<span class="pl-c1">1</span>);<span class="pl-en">n</span>(b[c],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b});<span class="pl-v">this</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">b</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">o</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">setTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-en">update</span>({title<span class="pl-k">:</span>a},b)},<span class="pl-en">setCategories</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-en">update</span>({categories<span class="pl-k">:</span>a},b)}});<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">P</span>);<span class="pl-c1">D</span>.<span class="pl-smi">line</span><span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-c1">X</span>.<span class="pl-smi">column</span><span class="pl-k">=</span><span class="pl-en">y</span>(Ya,{borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line">groupPadding<span class="pl-k">:</span><span class="pl-c1">0.2</span>,marker<span class="pl-k">:</span><span class="pl-c1">null</span>,pointPadding<span class="pl-k">:</span><span class="pl-c1">0.1</span>,minPointLength<span class="pl-k">:</span><span class="pl-c1">0</span>,cropThreshold<span class="pl-k">:</span><span class="pl-c1">50</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">null</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{brightness<span class="pl-k">:</span><span class="pl-c1">0.1</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,halo<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},select<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},dataLabels<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-c1">null</span>,verticalAlign<span class="pl-k">:</span><span class="pl-c1">null</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},softThreshold<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,startFromThreshold<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,tooltip<span class="pl-k">:</span>{distance<span class="pl-k">:</span><span class="pl-c1">6</span>},threshold<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">P</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderColor<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderRadius<span class="pl-pds">&quot;</span></span>},cropShoulder<span class="pl-k">:</span><span class="pl-c1">0</span>,directTouch<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line">negStacks<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>)<span class="pl-smi">b</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})},<span class="pl-en">getColumnMetrics</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">reversed</span>,f,g<span class="pl-k">=</span>{},h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">grouping</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span>h<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>,i;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">pos</span>)<span class="pl-smi">c</span>.<span class="pl-smi">stacking</span><span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">stackKey</span>,g[f]<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>(g[f]<span class="pl-k">=</span>h<span class="pl-k">++</span>),i<span class="pl-k">=</span>g[f])<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">grouping</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>h<span class="pl-k">++</span>),<span class="pl-smi">b</span>.<span class="pl-smi">columnIndex</span><span class="pl-k">=</span>i});<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">Q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">transA</span>)<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">c</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">||</span><span class="pl-c1">1</span>),<span class="pl-smi">c</span>.<span class="pl-smi">len</span>),k<span class="pl-k">=</span>i<span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">groupPadding</span>,j<span class="pl-k">=</span>(i<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">/</span>h,b<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-smi">b</span>.<span class="pl-smi">maxPointWidth</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">len</span>,<span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointWidth</span>,j<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">pointPadding</span>)));<span class="pl-smi">a</span>.<span class="pl-smi">columnMetrics</span><span class="pl-k">=</span>{width<span class="pl-k">:</span>b,offset<span class="pl-k">:</span>(j<span class="pl-k">-</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>(k<span class="pl-k">+</span>((<span class="pl-smi">a</span>.<span class="pl-smi">columnIndex</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))<span class="pl-k">*</span>j<span class="pl-k">-</span>i<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(e<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)};<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">columnMetrics</span>},<span class="pl-en">crispCol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">borderWidth</span>,g<span class="pl-k">=</span><span class="pl-k">-</span>(f<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0</span>),f<span class="pl-k">=</span>f<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isVML</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">+=</span><span class="pl-c1">1</span>);c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(a<span class="pl-k">+</span>c)<span class="pl-k">+</span>g;a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(a)<span class="pl-k">+</span>g;c<span class="pl-k">-=</span>a;d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b<span class="pl-k">+</span>d)<span class="pl-k">+</span>f;g<span class="pl-k">=</span><span class="pl-en">Q</span>(b)<span class="pl-k">&lt;=</span><span class="pl-c1">0.5</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&gt;</span><span class="pl-c1">0.5</span>;b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line">f;d<span class="pl-k">-=</span>b;g<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">-=</span><span class="pl-c1">1</span>,d<span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-k">return</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,width<span class="pl-k">:</span>c,height<span class="pl-k">:</span>d}},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">borderWidth</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-c1">borderWidth</span>,<span class="pl-smi">a</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">transA</span><span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">translatedThreshold</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">getThreshold</span>(<span class="pl-smi">c</span>.<span class="pl-smi">threshold</span>),g<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">minPointLength</span>,<span class="pl-c1">5</span>),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getColumnMetrics</span>(),i<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">width</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">barW</span><span class="pl-k">=</span><span class="pl-en">t</span>(i,<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>d),j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointXOffset</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">offset</span>;<span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">-=</span><span class="pl-c1">0.5</span>);<span class="pl-smi">c</span>.<span class="pl-smi">pointPadding</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-en">ra</span>(k));<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translate</span>.<span class="pl-c1">apply</span>(a);<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">yBottom</span>,f),<span class="pl-c1">9E4</span>),h<span class="pl-k">=</span><span class="pl-c1">999</span><span class="pl-k">+</span><span class="pl-en">Q</span>(d),h<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(<span class="pl-k">-</span>h,<span class="pl-smi">c</span>.<span class="pl-smi">plotY</span>),</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">+</span>h),n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>j,r<span class="pl-k">=</span>k,q<span class="pl-k">=</span><span class="pl-en">I</span>(h,d),w,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-en">t</span>(h,d)<span class="pl-k">-</span>q;<span class="pl-en">Q</span>(<span class="pl-c1">A</span>)<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">A</span><span class="pl-k">=</span>g,w<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">negative</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">negative</span>,q<span class="pl-k">=</span><span class="pl-en">Q</span>(q<span class="pl-k">-</span>f)<span class="pl-k">&gt;</span>g<span class="pl-k">?</span>d<span class="pl-k">-</span>g<span class="pl-k">:</span>f<span class="pl-k">-</span>(w<span class="pl-k">?</span>g<span class="pl-k">:</span><span class="pl-c1">0</span>));<span class="pl-smi">c</span>.<span class="pl-smi">barX</span><span class="pl-k">=</span>n;<span class="pl-smi">c</span>.<span class="pl-smi">pointWidth</span><span class="pl-k">=</span>i;<span class="pl-smi">c</span>.<span class="pl-smi">tooltipPos</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span>[<span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">pos</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">-</span>h,<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">len</span><span class="pl-k">-</span>n<span class="pl-k">-</span>r<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">A</span>]<span class="pl-k">:</span>[n<span class="pl-k">+</span>r<span class="pl-k">/</span><span class="pl-c1">2</span>,h<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">pos</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>,<span class="pl-c1">A</span>];<span class="pl-smi">c</span>.<span class="pl-smi">shapeType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">crispCol</span>(n,q,r,<span class="pl-c1">A</span>)})},getSymbol<span class="pl-k">:</span><span class="pl-c1">T</span>,drawLegendSymbol<span class="pl-k">:</span><span class="pl-smi">bb</span>.<span class="pl-smi">drawRectangle</span>,drawGraph<span class="pl-k">:</span><span class="pl-c1">T</span>,<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">animationLimit</span><span class="pl-k">||</span><span class="pl-c1">250</span>,f,g;<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-smi">plotY</span>,k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">graphic</span>;<span class="pl-k">if</span>(i<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(i)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)f<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">shapeArgs</span>,i<span class="pl-k">=</span><span class="pl-en">s</span>(<span class="pl-smi">a</span>.<span class="pl-c1">borderWidth</span>)<span class="pl-k">?</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">borderWidth</span>}<span class="pl-k">:</span>{},g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">h</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],k<span class="pl-k">?</span>(<span class="pl-en">La</span>(k),<span class="pl-smi">k</span>.<span class="pl-en">attr</span>(i).<span class="pl-en">attr</span>(g)[<span class="pl-smi">b</span>.<span class="pl-smi">pointCount</span><span class="pl-k">&lt;</span>e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](<span class="pl-en">y</span>(f)))<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span>d[<span class="pl-smi">h</span>.<span class="pl-smi">shapeType</span>](f).<span class="pl-en">attr</span>(i).<span class="pl-en">attr</span>(g).<span class="pl-c1">add</span>(<span class="pl-smi">h</span>.<span class="pl-smi">group</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>).<span class="pl-en">shadow</span>(<span class="pl-smi">c</span>.<span class="pl-smi">shadow</span>,<span class="pl-c1">null</span>,<span class="pl-smi">c</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">borderRadius</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(k)<span class="pl-smi">h</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">destroy</span>()})},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">inverted</span>,e<span class="pl-k">=</span>{};<span class="pl-k">if</span>(da)a<span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">scaleY</span><span class="pl-k">=</span><span class="pl-c1">0.001</span>,a<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">len</span>,<span class="pl-en">t</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">b</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">c</span>.<span class="pl-smi">threshold</span>))),d<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">translateX</span><span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">translateY</span><span class="pl-k">=</span>a,<span class="pl-v">this</span>.<span class="pl-smi">group</span>.<span class="pl-en">attr</span>(e))<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-smi">scaleY</span><span class="pl-k">=</span><span class="pl-c1">1</span>,e[d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pos</span>,<span class="pl-v">this</span>.<span class="pl-smi">group</span>.<span class="pl-c1">animate</span>(e,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>),<span class="pl-v">this</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>)},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>)<span class="pl-smi">b</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">remove</span>.<span class="pl-c1">apply</span>(a,<span class="pl-v">arguments</span>)}});<span class="pl-c1">D</span>.<span class="pl-smi">column</span><span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-c1">X</span>.<span class="pl-smi">scatter</span><span class="pl-k">=</span><span class="pl-en">y</span>(Ya,{lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,marker<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},tooltip<span class="pl-k">:</span>{headerFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;color:{point.color}&quot;&gt;<span class="pl-cce">\u25cf</span>&lt;/span&gt; &lt;span style=&quot;font-size: 10px;&quot;&gt; {series.name}&lt;/span&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x: &lt;b&gt;{point.x}&lt;/b&gt;&lt;br/&gt;y: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;<span class="pl-pds">&quot;</span></span>}});Ya<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">P</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>scatter<span class="pl-pds">&quot;</span></span>,sorted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,requireSorting<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,noSharedTooltip<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],takeOrdinalPosition<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,kdDimensions<span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-en">drawGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawGraph</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)}});<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span><span class="pl-k">=</span>Ya;<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawDataLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cursor</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataLabels</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>,f,g,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">||</span><span class="pl-c1">0</span>,i,k,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasPointLabels</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dlProcessOptions</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">dlProcessOptions</span>(d),k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">plotGroup</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>data-labels<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">defer</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">6</span>),<span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-c1">defer</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-en">attr</span>({opacity<span class="pl-k">:</span><span class="pl-k">+</span>h}),h<span class="pl-k">||</span><span class="pl-en">M</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>afterAnimate<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">show</span>();k[<span class="pl-smi">b</span>.<span class="pl-smi">animation</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({opacity<span class="pl-k">:</span><span class="pl-c1">1</span>},{duration<span class="pl-k">:</span><span class="pl-c1">200</span>})})),g<span class="pl-k">=</span>d,<span class="pl-en">n</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> h,p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dataLabel</span>,n,r,t<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">connector</span>,w<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">A</span>,v<span class="pl-k">=</span>{};f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dlOptions</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataLabels</span>;h<span class="pl-k">=</span><span class="pl-en">o</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">enabled</span>,<span class="pl-smi">g</span>.<span class="pl-smi">enabled</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(p<span class="pl-k">&amp;&amp;!</span>h)<span class="pl-smi">e</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-en">destroy</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(h){d<span class="pl-k">=</span><span class="pl-en">y</span>(g,f);<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">style</span>;h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">rotation</span>;n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">getLabelConfig</span>();</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">format</span><span class="pl-k">?</span><span class="pl-en">Ba</span>(<span class="pl-smi">d</span>.<span class="pl-smi">format</span>,n)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">formatter</span>.<span class="pl-c1">call</span>(n,d);<span class="pl-c1">A</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-c1">color</span>,<span class="pl-c1">A</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(p)<span class="pl-k">if</span>(<span class="pl-en">s</span>(i))<span class="pl-smi">p</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>i}),w<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span>p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-en">destroy</span>(),t)<span class="pl-smi">e</span>.<span class="pl-smi">connector</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-en">destroy</span>()}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">s</span>(i)){p<span class="pl-k">=</span>{fill<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">backgroundColor</span>,stroke<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">borderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">borderWidth</span>,r<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">borderRadius</span><span class="pl-k">||</span><span class="pl-c1">0</span>,rotation<span class="pl-k">:</span>h,padding<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">padding</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>};<span class="pl-k">if</span>(<span class="pl-c1">A</span>.<span class="pl-c1">color</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>contrast<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">v</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">inside</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">distance</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">stacking</span><span class="pl-k">?</span><span class="pl-smi">j</span>.<span class="pl-en">getContrast</span>(<span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(c)<span class="pl-smi">v</span>.<span class="pl-smi">cursor</span><span class="pl-k">=</span>c;<span class="pl-k">for</span>(r <span class="pl-k">in</span> p)p[r]<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> p[r];p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line">j[h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>](i,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">9999</span>,<span class="pl-smi">d</span>.<span class="pl-c1">shape</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-smi">d</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>(p).<span class="pl-en">css</span>(<span class="pl-en">q</span>(<span class="pl-c1">A</span>,v)).<span class="pl-c1">add</span>(k).<span class="pl-en">shadow</span>(<span class="pl-smi">d</span>.<span class="pl-smi">shadow</span>)}p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">alignDataLabel</span>(e,p,d,<span class="pl-c1">null</span>,w)}})};<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">inverted</span>,h<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotX</span>,<span class="pl-k">-</span><span class="pl-c1">9999</span>),i<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotY</span>,<span class="pl-k">-</span><span class="pl-c1">9999</span>),k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getBBox</span>(),j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">c</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">b</span>,l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">rotation</span>,m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">align</span>,p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">forceDL</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(h,<span class="pl-en">B</span>(i),g)<span class="pl-k">||</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(h,g<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g)),n<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">overflow</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(p)d<span class="pl-k">=</span><span class="pl-en">q</span>({x<span class="pl-k">:</span>g<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">:</span>h,y<span class="pl-k">:</span><span class="pl-en">B</span>(g<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>h<span class="pl-k">:</span>i),width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>},d),<span class="pl-en">q</span>(c,{width<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span>}),l<span class="pl-k">?</span>(n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">rotCorr</span>(j,l),g<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>},b[e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](g).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">align</span>}),h<span class="pl-k">=</span>(l<span class="pl-k">+</span><span class="pl-c1">720</span>)<span class="pl-k">%</span><span class="pl-c1">360</span>,h<span class="pl-k">=</span>h<span class="pl-k">&gt;</span><span class="pl-c1">180</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span><span class="pl-c1">360</span>,m<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span>h<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">:</span>m<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">:</span>m<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span>h<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span>))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-c1">align</span>(c,<span class="pl-c1">null</span>,d),g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">alignAttr</span>),n<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">justifyDataLabel</span>(b,c,g,k,d,e)<span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">crop</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span>,</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span>)),<span class="pl-smi">c</span>.<span class="pl-c1">shape</span><span class="pl-k">&amp;&amp;!</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">attr</span>({anchorX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotX</span>,anchorY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotY</span>});<span class="pl-k">if</span>(<span class="pl-k">!</span>p)<span class="pl-en">La</span>(b),<span class="pl-smi">b</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">9999</span>}),<span class="pl-smi">b</span>.<span class="pl-smi">placed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">justifyDataLabel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">align</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">verticalAlign</span>,k,j,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">box</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">padding</span><span class="pl-k">||</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>l;<span class="pl-k">if</span>(k<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>l;<span class="pl-k">if</span>(k<span class="pl-k">&gt;</span><span class="pl-smi">g</span>.<span class="pl-smi">plotWidth</span>)h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>l;<span class="pl-k">if</span>(k<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>l;<span class="pl-k">if</span>(k<span class="pl-k">&gt;</span><span class="pl-smi">g</span>.<span class="pl-smi">plotHeight</span>)i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(j)<span class="pl-smi">a</span>.<span class="pl-smi">placed</span><span class="pl-k">=</span><span class="pl-k">!</span>f,<span class="pl-smi">a</span>.<span class="pl-c1">align</span>(b,<span class="pl-c1">null</span>,e)};<span class="pl-k">if</span>(<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>)<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawDataLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataLabels</span>,f<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">connectorPadding</span>,<span class="pl-c1">10</span>),g<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">connectorWidth</span>,<span class="pl-c1">1</span>),h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotWidth</span>,i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>,k,j,l<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">e</span>.<span class="pl-smi">softConnector</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">distance</span>,p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">center</span>,u<span class="pl-k">=</span>p[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,r<span class="pl-k">=</span>p[<span class="pl-c1">1</span>],q<span class="pl-k">=</span>m<span class="pl-k">&gt;</span><span class="pl-c1">0</span>,w,<span class="pl-c1">A</span>,s,v<span class="pl-k">=</span>[[],[]],x,y,<span class="pl-c1">C</span>,<span class="pl-c1">D</span>,z,<span class="pl-c1">E</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],<span class="pl-en">L</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>};<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasPointLabels</span>)){<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawDataLabels</span>.<span class="pl-c1">apply</span>(a);<span class="pl-en">n</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>)v[<span class="pl-smi">a</span>.<span class="pl-smi">half</span>].<span class="pl-c1">push</span>(a),<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>.<span class="pl-smi">_pos</span><span class="pl-k">=</span><span class="pl-c1">null</span>});<span class="pl-k">for</span>(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">D</span><span class="pl-k">--</span>;){<span class="pl-k">var</span> <span class="pl-c1">G</span><span class="pl-k">=</span>[],<span class="pl-c1">M</span><span class="pl-k">=</span>[],<span class="pl-c1">H</span><span class="pl-k">=</span>v[<span class="pl-c1">D</span>],<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">length</span>,<span class="pl-c1">J</span>;<span class="pl-k">if</span>(<span class="pl-c1">K</span>){<span class="pl-smi">a</span>.<span class="pl-en">sortByAngle</span>(<span class="pl-c1">H</span>,<span class="pl-c1">D</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>);<span class="pl-k">for</span>(z<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">H</span>[z];)b<span class="pl-k">=</span><span class="pl-c1">H</span>[z]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">H</span>[z].<span class="pl-smi">dataLabel</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">H</span>[z].<span class="pl-smi">dataLabel</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">21</span>),z<span class="pl-k">++</span>;<span class="pl-k">if</span>(m<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-en">I</span>(r<span class="pl-k">+</span>u<span class="pl-k">+</span>m,<span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>);<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">0</span>,r<span class="pl-k">-</span>u<span class="pl-k">-</span>m);z<span class="pl-k">&lt;=</span><span class="pl-c1">A</span>;z<span class="pl-k">+=</span>b)<span class="pl-c1">G</span>.<span class="pl-c1">push</span>(z);<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">K</span><span class="pl-k">&gt;</span><span class="pl-c1">A</span>){c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-c1">H</span>);<span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(<span class="pl-c1">L</span>);<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">K</span>;z<span class="pl-k">--</span>;)c[z].<span class="pl-smi">rank</span><span class="pl-k">=</span>z;<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">K</span>;z<span class="pl-k">--</span>;)<span class="pl-c1">H</span>[z].<span class="pl-smi">rank</span><span class="pl-k">&gt;=</span><span class="pl-c1">A</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">H</span>.<span class="pl-c1">splice</span>(z,<span class="pl-c1">1</span>);<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">length</span>}<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">0</span>;z<span class="pl-k">&lt;</span><span class="pl-c1">K</span>;z<span class="pl-k">++</span>){c<span class="pl-k">=</span><span class="pl-c1">H</span>[z];s<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">labelPos</span>;c<span class="pl-k">=</span><span class="pl-c1">9999</span>;<span class="pl-k">var</span> <span class="pl-c1">O</span>,<span class="pl-c1">N</span>;<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">A</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-en">Q</span>(<span class="pl-c1">G</span>[<span class="pl-c1">N</span>]<span class="pl-k">-</span>s[<span class="pl-c1">1</span>]),<span class="pl-c1">O</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">O</span>,<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">N</span>);</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">J</span><span class="pl-k">&lt;</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>[z]<span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-c1">J</span><span class="pl-k">=</span>z;<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-c1">A</span><span class="pl-k">&lt;</span><span class="pl-c1">K</span><span class="pl-k">-</span>z<span class="pl-k">+</span><span class="pl-c1">J</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>[z]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">A</span><span class="pl-k">-</span><span class="pl-c1">K</span><span class="pl-k">+</span>z);<span class="pl-c1">G</span>[<span class="pl-c1">J</span>]<span class="pl-k">===</span><span class="pl-c1">null</span>;)<span class="pl-c1">J</span><span class="pl-k">++</span>;<span class="pl-c1">M</span>.<span class="pl-c1">push</span>({i<span class="pl-k">:</span><span class="pl-c1">J</span>,y<span class="pl-k">:</span><span class="pl-c1">G</span>[<span class="pl-c1">J</span>]});<span class="pl-c1">G</span>[<span class="pl-c1">J</span>]<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-c1">M</span>.<span class="pl-c1">sort</span>(<span class="pl-c1">L</span>)}<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">0</span>;z<span class="pl-k">&lt;</span><span class="pl-c1">K</span>;z<span class="pl-k">++</span>){c<span class="pl-k">=</span><span class="pl-c1">H</span>[z];s<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">labelPos</span>;w<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataLabel</span>;<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span>s[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(m<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">if</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-c1">pop</span>(),<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">i</span>,y<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-c1">y</span>,c<span class="pl-k">&gt;</span>y<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>[<span class="pl-c1">J</span><span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">||</span>c<span class="pl-k">&lt;</span>y<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>[<span class="pl-c1">J</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span>)y<span class="pl-k">=</span><span class="pl-en">I</span>(<span class="pl-en">t</span>(<span class="pl-c1">0</span>,c),<span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>)}<span class="pl-k">else</span> y<span class="pl-k">=</span>c;x<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">justify</span><span class="pl-k">?</span>p[<span class="pl-c1">0</span>]<span class="pl-k">+</span>(<span class="pl-c1">D</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(u<span class="pl-k">+</span>m)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">getX</span>(y<span class="pl-k">===</span>r<span class="pl-k">-</span>u<span class="pl-k">-</span>m<span class="pl-k">||</span>y<span class="pl-k">===</span>r<span class="pl-k">+</span>u<span class="pl-k">+</span>m<span class="pl-k">?</span>c<span class="pl-k">:</span>y,<span class="pl-c1">D</span>);<span class="pl-smi">w</span>.<span class="pl-smi">_attr</span><span class="pl-k">=</span>{visibility<span class="pl-k">:</span><span class="pl-c1">C</span>,align<span class="pl-k">:</span>s[<span class="pl-c1">6</span>]};<span class="pl-smi">w</span>.<span class="pl-smi">_pos</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>x<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>({left<span class="pl-k">:</span>f,right<span class="pl-k">:</span><span class="pl-k">-</span>f}[s[<span class="pl-c1">6</span>]]<span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>y<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">10</span>};<span class="pl-smi">w</span>.<span class="pl-smi">connX</span><span class="pl-k">=</span>x;<span class="pl-smi">w</span>.<span class="pl-smi">connY</span><span class="pl-k">=</span>y;</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">size</span><span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">width</span>,x<span class="pl-k">-</span><span class="pl-c1">A</span><span class="pl-k">&lt;</span>f<span class="pl-k">?</span><span class="pl-c1">E</span>[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">B</span>(<span class="pl-c1">A</span><span class="pl-k">-</span>x<span class="pl-k">+</span>f),<span class="pl-c1">E</span>[<span class="pl-c1">3</span>])<span class="pl-k">:</span>x<span class="pl-k">+</span><span class="pl-c1">A</span><span class="pl-k">&gt;</span>h<span class="pl-k">-</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">E</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">B</span>(x<span class="pl-k">+</span><span class="pl-c1">A</span><span class="pl-k">-</span>h<span class="pl-k">+</span>f),<span class="pl-c1">E</span>[<span class="pl-c1">1</span>])),y<span class="pl-k">-</span>b<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">E</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">B</span>(<span class="pl-k">-</span>y<span class="pl-k">+</span>b<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">E</span>[<span class="pl-c1">0</span>])<span class="pl-k">:</span>y<span class="pl-k">+</span>b<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">&gt;</span>i<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">E</span>[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">B</span>(y<span class="pl-k">+</span>b<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>i),<span class="pl-c1">E</span>[<span class="pl-c1">2</span>]))}}}<span class="pl-k">if</span>(<span class="pl-en">Ha</span>(<span class="pl-c1">E</span>)<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-en">verifyDataLabelOverflow</span>(<span class="pl-c1">E</span>))<span class="pl-v">this</span>.<span class="pl-en">placeDataLabels</span>(),q<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">connector</span>;s<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">labelPos</span>;<span class="pl-k">if</span>((w<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">w</span>.<span class="pl-smi">_pos</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">visible</span>)<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">_attr</span>.<span class="pl-c1">visibility</span>,x<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">connX</span>,y<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">connY</span>,j<span class="pl-k">=</span>l<span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">+</span>(s[<span class="pl-c1">6</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>),y,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,x,y,<span class="pl-c1">2</span><span class="pl-k">*</span>s[<span class="pl-c1">2</span>]<span class="pl-k">-</span>s[<span class="pl-c1">4</span>],<span class="pl-c1">2</span><span class="pl-k">*</span>s[<span class="pl-c1">3</span>]<span class="pl-k">-</span>s[<span class="pl-c1">5</span>],s[<span class="pl-c1">2</span>],s[<span class="pl-c1">3</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,s[<span class="pl-c1">4</span>],s[<span class="pl-c1">5</span>]]<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">+</span>(s[<span class="pl-c1">6</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>),y,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line">s[<span class="pl-c1">2</span>],s[<span class="pl-c1">3</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,s[<span class="pl-c1">4</span>],s[<span class="pl-c1">5</span>]],k<span class="pl-k">?</span>(<span class="pl-smi">k</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>j}),<span class="pl-smi">k</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">C</span>))<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">connector</span><span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(j).<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g,stroke<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">connectorColor</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,visibility<span class="pl-k">:</span><span class="pl-c1">C</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabelsGroup</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(k)<span class="pl-smi">b</span>.<span class="pl-smi">connector</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">destroy</span>()})}},<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">placeDataLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>)(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_pos</span>)<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-en">attr</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_attr</span>),b[<span class="pl-smi">b</span>.<span class="pl-smi">moved</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](a),<span class="pl-smi">b</span>.<span class="pl-smi">moved</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">9999</span>})})},<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">alignDataLabel</span><span class="pl-k">=</span><span class="pl-c1">T</span>,<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">verifyDataLabelOverflow</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">center</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">center</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">minSize</span><span class="pl-k">||</span><span class="pl-c1">80</span>,f<span class="pl-k">=</span>e,g;d[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-en">t</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">-</span><span class="pl-en">t</span>(a[<span class="pl-c1">1</span>],a[<span class="pl-c1">3</span>]),e)<span class="pl-k">:</span>(f<span class="pl-k">=</span><span class="pl-en">t</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">3</span>],e),b[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>(a[<span class="pl-c1">3</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);d[<span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">I</span>(f,b[<span class="pl-c1">2</span>]<span class="pl-k">-</span><span class="pl-en">t</span>(a[<span class="pl-c1">0</span>],a[<span class="pl-c1">2</span>])),e)<span class="pl-k">:</span>(f<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">I</span>(f,b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>]),e),b[<span class="pl-c1">1</span>]<span class="pl-k">+=</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);f<span class="pl-k">&lt;</span>b[<span class="pl-c1">2</span>]<span class="pl-k">?</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>f,b[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-sr"><span class="pl-pds">/</span>%<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">c</span>.<span class="pl-smi">innerSize</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">?</span>f<span class="pl-k">*</span><span class="pl-c1">parseFloat</span>(<span class="pl-smi">c</span>.<span class="pl-smi">innerSize</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">parseFloat</span>(<span class="pl-smi">c</span>.<span class="pl-smi">innerSize</span><span class="pl-k">||</span><span class="pl-c1">0</span>),f),<span class="pl-v">this</span>.<span class="pl-en">translate</span>(b),<span class="pl-v">this</span>.<span class="pl-smi">drawDataLabels</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">drawDataLabels</span>())<span class="pl-k">:</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> g};<span class="pl-k">if</span>(<span class="pl-c1">D</span>.<span class="pl-smi">column</span>)<span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">inverted</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dlBox</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>,i<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">below</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotY</span><span class="pl-k">&gt;</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">translatedThreshold</span>,<span class="pl-smi">g</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">len</span>)),k<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">inside</span>,<span class="pl-k">!!</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span>);<span class="pl-k">if</span>(h){d<span class="pl-k">=</span><span class="pl-en">y</span>(h);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">+=</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">len</span>;h<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">-=</span>h);f<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span>,y<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,width<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span>,height<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>});<span class="pl-k">if</span>(<span class="pl-k">!</span>k)f<span class="pl-k">?</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>i<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(<span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>i<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">0</span>)}<span class="pl-smi">c</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-c1">align</span>,<span class="pl-k">!</span>f<span class="pl-k">||</span>k<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">verticalAlign</span>,</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">||</span>k<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">alignDataLabel</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b,c,d,e)};(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">Chart</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">each</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pick</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">addEvent</span>;<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">callbacks</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span>[];<span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataLabels</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataLabelCollections</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabel<span class="pl-pds">&quot;</span></span>];(<span class="pl-smi">b</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasPointLabels</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">allowOverlap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a[b])a[b].<span class="pl-smi">labelrank</span><span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelrank</span>,<span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-c1">height</span>),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(a[b])})})});<span class="pl-smi">a</span>.<span class="pl-en">hideOverlappingLabels</span>(e)}</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>();<span class="pl-en">e</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>,b)});<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">hideOverlappingLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,d,e,k,j,l,m,p,n,o;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>b;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(d<span class="pl-k">=</span>a[e])<span class="pl-smi">d</span>.<span class="pl-smi">oldOpacity</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">opacity</span>,<span class="pl-smi">d</span>.<span class="pl-smi">newOpacity</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>(<span class="pl-smi">b</span>.<span class="pl-smi">labelrank</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelrank</span><span class="pl-k">||</span><span class="pl-c1">0</span>)});<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>b;e<span class="pl-k">++</span>){k<span class="pl-k">=</span>a[e];<span class="pl-k">for</span>(d<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span>b;<span class="pl-k">++</span>d)<span class="pl-k">if</span>(j<span class="pl-k">=</span>a[d],k<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">placed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">placed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">newOpacity</span><span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">newOpacity</span><span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">alignAttr</span>,m<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">alignAttr</span>,p<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">parentGroup</span>,n<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">parentGroup</span>,o<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">k</span>.<span class="pl-smi">box</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-smi">padding</span>),l<span class="pl-k">=</span><span class="pl-k">!</span>(<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateX</span><span class="pl-k">&gt;</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span>(<span class="pl-smi">k</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>o)<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span>(<span class="pl-smi">j</span>.<span class="pl-c1">width</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">o)<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateY</span><span class="pl-k">&gt;</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-smi">translateY</span><span class="pl-k">+</span>(<span class="pl-smi">k</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>o)<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateY</span><span class="pl-k">+</span>(<span class="pl-smi">j</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>o)<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-smi">translateY</span>)))(<span class="pl-smi">k</span>.<span class="pl-smi">labelrank</span><span class="pl-k">&lt;</span><span class="pl-smi">j</span>.<span class="pl-smi">labelrank</span><span class="pl-k">?</span>k<span class="pl-k">:</span>j).<span class="pl-smi">newOpacity</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-en">c</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">if</span>(a){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">newOpacity</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">oldOpacity</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">placed</span>)c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">show</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">hide</span>()},<span class="pl-smi">a</span>.<span class="pl-smi">alignAttr</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span>c,a[<span class="pl-smi">a</span>.<span class="pl-smi">isOld</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">a</span>.<span class="pl-smi">alignAttr</span>,<span class="pl-c1">null</span>,b);<span class="pl-smi">a</span>.<span class="pl-smi">isOld</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}})}})(v);<span class="pl-en">fa</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getSeriesExtremes<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span>,c,d,e<span class="pl-k">=</span>[],f;b<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">useMapGeometry</span>)e[b]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xData</span>,</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">xData</span><span class="pl-k">=</span>[]});<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>,<span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>),d<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">dataMax</span>,<span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>),<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">useMapGeometry</span>)c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(c,<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">minX</span>,c)),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d,<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">maxX</span>,c)),<span class="pl-smi">a</span>.<span class="pl-smi">xData</span><span class="pl-k">=</span>e[b],f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}),f))<span class="pl-v">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span>c,<span class="pl-v">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span>d});<span class="pl-en">fa</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setAxisTranslation<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],d;<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">coll</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span><span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">preserveAspectRatio</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">transA</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-v">this</span>.<span class="pl-smi">transA</span>,</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">transA</span>),a<span class="pl-k">=</span>c<span class="pl-k">/</span>((<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">/</span>(<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>)),a<span class="pl-k">=</span>a<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span><span class="pl-k">:</span>b,c<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>)<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">transA</span>,<span class="pl-smi">a</span>.<span class="pl-smi">pixelPadding</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">len</span><span class="pl-k">-</span>c,<span class="pl-smi">a</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pixelPadding</span><span class="pl-k">/</span><span class="pl-c1">2</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fixTo</span>)){c<span class="pl-k">=</span>c[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">toValue</span>(c[<span class="pl-c1">0</span>],<span class="pl-k">!</span><span class="pl-c1">0</span>);c<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">transA</span>;<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c)<span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>)c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">-=</span>c}});<span class="pl-en">fa</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>render<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">fixTo</span><span class="pl-k">=</span><span class="pl-c1">null</span>});<span class="pl-k">var</span> cb<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">ColorAxis</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">isColorAxis</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>)};<span class="pl-en">q</span>(<span class="pl-smi">cb</span>.<span class="pl-c1">prototype</span>,<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-en">q</span>(<span class="pl-smi">cb</span>.<span class="pl-c1">prototype</span>,{defaultColorAxisOptions<span class="pl-k">:</span>{lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line">minPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,gridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">72</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,offset<span class="pl-k">:</span><span class="pl-c1">0</span>,marker<span class="pl-k">:</span>{animation<span class="pl-k">:</span>{duration<span class="pl-k">:</span><span class="pl-c1">50</span>},color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>gray<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-c1">0.01</span>},labels<span class="pl-k">:</span>{overflow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>},minColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#EFEFFF<span class="pl-pds">&quot;</span></span>,maxColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#003875<span class="pl-pds">&quot;</span></span>,tickLength<span class="pl-k">:</span><span class="pl-c1">5</span>},<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legend</span>.<span class="pl-smi">layout</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical<span class="pl-pds">&quot;</span></span>,d;d<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-v">this</span>.<span class="pl-smi">defaultColorAxisOptions</span>,{side<span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">1</span>,reversed<span class="pl-k">:</span><span class="pl-k">!</span>c},b,{opposite<span class="pl-k">:</span><span class="pl-k">!</span>c,showEmpty<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span><span class="pl-c1">null</span>,isColor<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">init</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,d);<span class="pl-smi">b</span>.<span class="pl-smi">dataClasses</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">initDataClasses</span>(b);<span class="pl-v">this</span>.<span class="pl-en">initStops</span>(b);<span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line">c;<span class="pl-v">this</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">tweenColors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d;<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">rgba</span>.<span class="pl-c1">length</span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">rgba</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">input</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rgba</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">rgba</span>,d<span class="pl-k">=</span>b[<span class="pl-c1">3</span>]<span class="pl-k">!==</span><span class="pl-c1">1</span><span class="pl-k">||</span>a[<span class="pl-c1">3</span>]<span class="pl-k">!==</span><span class="pl-c1">1</span>,a<span class="pl-k">=</span>(d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">+</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>b[<span class="pl-c1">0</span>])<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b[<span class="pl-c1">1</span>]<span class="pl-k">+</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>b[<span class="pl-c1">1</span>])<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">+</span>(a[<span class="pl-c1">2</span>]<span class="pl-k">-</span>b[<span class="pl-c1">2</span>])<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c))<span class="pl-k">+</span>(d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b[<span class="pl-c1">3</span>]<span class="pl-k">+</span>(a[<span class="pl-c1">3</span>]<span class="pl-k">-</span>b[<span class="pl-c1">3</span>])<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a},<span class="pl-en">initDataClasses</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataClasses</span>.<span class="pl-c1">length</span>;<span class="pl-v">this</span>.<span class="pl-smi">dataClasses</span><span class="pl-k">=</span>d<span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">legendItems</span><span class="pl-k">=</span>[];<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataClasses</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k,</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-en">y</span>(a);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>)<span class="pl-smi">f</span>.<span class="pl-smi">dataClassColor</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span>,<span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>k[e<span class="pl-k">++</span>],e<span class="pl-k">===</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">tweenColors</span>(<span class="pl-en">N</span>(<span class="pl-smi">f</span>.<span class="pl-smi">minColor</span>),<span class="pl-en">N</span>(<span class="pl-smi">f</span>.<span class="pl-smi">maxColor</span>),g<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span>i<span class="pl-k">/</span>(g<span class="pl-k">-</span><span class="pl-c1">1</span>))})},<span class="pl-en">initStops</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span><span class="pl-k">||</span>[[<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">minColor</span>],[<span class="pl-c1">1</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">maxColor</span>]];<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">stops</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-en">N</span>(a[<span class="pl-c1">1</span>])})},<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">setOptions</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">crosshair</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>;<span class="pl-v">this</span>.<span class="pl-smi">coll</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>colorAxis<span class="pl-pds">&quot;</span></span>},<span class="pl-en">setAxisSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">legendSymbol</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line">c,d,e;<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.<span class="pl-c1">left</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-c1">right</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span>c<span class="pl-k">-</span>e,<span class="pl-v">this</span>.<span class="pl-c1">bottom</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span>d<span class="pl-k">-</span>a,<span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span>e<span class="pl-k">:</span>a,<span class="pl-v">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span>c<span class="pl-k">:</span>d},<span class="pl-en">toColor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">stops</span>,e,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataClasses</span>,g,h;<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;h<span class="pl-k">--</span>;){<span class="pl-k">if</span>(g<span class="pl-k">=</span>f[h],e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">from</span>,d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">to</span>,(e<span class="pl-k">===</span>x<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span>e)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">===</span>x<span class="pl-k">||</span>a<span class="pl-k">&lt;=</span>d)){c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">color</span>;<span class="pl-k">if</span>(b)<span class="pl-smi">b</span>.<span class="pl-smi">dataClass</span><span class="pl-k">=</span>h;<span class="pl-k">break</span>}}<span class="pl-k">else</span>{<span class="pl-v">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">val2lin</span>(a));c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">-</span>a)<span class="pl-k">/</span>(<span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">min</span><span class="pl-k">||</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;h<span class="pl-k">--</span>;)<span class="pl-k">if</span>(c<span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">d[h][<span class="pl-c1">0</span>])<span class="pl-k">break</span>;e<span class="pl-k">=</span>d[h]<span class="pl-k">||</span>d[h<span class="pl-k">+</span><span class="pl-c1">1</span>];d<span class="pl-k">=</span>d[h<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>e;c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">-</span>c)<span class="pl-k">/</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">-</span>e[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">1</span>);c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">tweenColors</span>(<span class="pl-smi">e</span>.<span class="pl-c1">color</span>,<span class="pl-smi">d</span>.<span class="pl-c1">color</span>,c)}<span class="pl-k">return</span> c},<span class="pl-en">getOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">legendGroup</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">axisOffset</span>[<span class="pl-v">this</span>.<span class="pl-smi">side</span>];<span class="pl-k">if</span>(a){<span class="pl-v">this</span>.<span class="pl-smi">axisParent</span><span class="pl-k">=</span>a;<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getOffset</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">added</span>)<span class="pl-v">this</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">labelLeft</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">labelRight</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">width</span>;<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">axisOffset</span>[<span class="pl-v">this</span>.<span class="pl-smi">side</span>]<span class="pl-k">=</span>b}},<span class="pl-en">setLegendColor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">reversed</span>;a<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;c<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span>[a,<span class="pl-c1">0</span>,c,<span class="pl-c1">0</span>]<span class="pl-k">:</span>[<span class="pl-c1">0</span>,c,<span class="pl-c1">0</span>,a];<span class="pl-v">this</span>.<span class="pl-smi">legendColor</span><span class="pl-k">=</span>{linearGradient<span class="pl-k">:</span>{x1<span class="pl-k">:</span>a[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line">y1<span class="pl-k">:</span>a[<span class="pl-c1">1</span>],x2<span class="pl-k">:</span>a[<span class="pl-c1">2</span>],y2<span class="pl-k">:</span>a[<span class="pl-c1">3</span>]},stops<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">stops</span><span class="pl-k">||</span>[[<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">minColor</span>],[<span class="pl-c1">1</span>,<span class="pl-smi">b</span>.<span class="pl-smi">maxColor</span>]]}},<span class="pl-en">drawLegendSymbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">padding</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span>,f<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">symbolWidth</span>,e<span class="pl-k">?</span><span class="pl-c1">200</span><span class="pl-k">:</span><span class="pl-c1">12</span>),g<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">symbolHeight</span>,e<span class="pl-k">?</span><span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-c1">200</span>),h<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">labelPadding</span>,e<span class="pl-k">?</span><span class="pl-c1">16</span><span class="pl-k">:</span><span class="pl-c1">30</span>),d<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">itemDistance</span>,<span class="pl-c1">10</span>);<span class="pl-v">this</span>.<span class="pl-en">setLegendColor</span>();<span class="pl-smi">b</span>.<span class="pl-smi">legendSymbol</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">rect</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">baseline</span><span class="pl-k">-</span><span class="pl-c1">11</span>,f,g).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">legendGroup</span>);<span class="pl-v">this</span>.<span class="pl-smi">legendItemWidth</span><span class="pl-k">=</span>f<span class="pl-k">+</span>c<span class="pl-k">+</span>(e<span class="pl-k">?</span>d<span class="pl-k">:</span>h);<span class="pl-v">this</span>.<span class="pl-smi">legendItemHeight</span><span class="pl-k">=</span>g<span class="pl-k">+</span>c<span class="pl-k">+</span>(e<span class="pl-k">?</span>h<span class="pl-k">:</span><span class="pl-c1">0</span>)},setState<span class="pl-k">:</span><span class="pl-c1">T</span>,visible<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,setVisible<span class="pl-k">:</span><span class="pl-c1">T</span>,<span class="pl-en">getSeriesExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span>)a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>[<span class="pl-c1">0</span>],<span class="pl-v">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">valueMin</span>,<span class="pl-v">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">valueMax</span>},<span class="pl-en">drawCrosshair</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">plotX</span>,d<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">plotY</span>,e,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pos</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span>;<span class="pl-k">if</span>(b)e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">toPixels</span>(b[<span class="pl-smi">b</span>.<span class="pl-smi">series</span>.<span class="pl-smi">colorKey</span>]),e<span class="pl-k">&lt;</span>f<span class="pl-k">?</span>e<span class="pl-k">=</span>f<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span>e<span class="pl-k">&gt;</span>f<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>f<span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-c1">2</span>),<span class="pl-smi">b</span>.<span class="pl-smi">plotX</span><span class="pl-k">=</span>e,<span class="pl-smi">b</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span><span class="pl-k">-</span>e,<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawCrosshair</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b),<span class="pl-smi">b</span>.<span class="pl-smi">plotX</span><span class="pl-k">=</span>c,<span class="pl-smi">b</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span>d,<span class="pl-v">this</span>.<span class="pl-smi">cross</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">crosshair</span>.<span class="pl-c1">color</span>}).<span class="pl-c1">add</span>(<span class="pl-v">this</span>.<span class="pl-smi">legendGroup</span>)},<span class="pl-en">getPlotLinePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-v">this</span>.<span class="pl-c1">top</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">6</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">+</span><span class="pl-c1">4</span>,<span class="pl-v">this</span>.<span class="pl-c1">top</span><span class="pl-k">-</span><span class="pl-c1">6</span>,e,<span class="pl-v">this</span>.<span class="pl-c1">top</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">left</span>,e,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-c1">left</span><span class="pl-k">-</span><span class="pl-c1">6</span>,e<span class="pl-k">+</span><span class="pl-c1">6</span>,<span class="pl-v">this</span>.<span class="pl-c1">left</span><span class="pl-k">-</span><span class="pl-c1">6</span>,e<span class="pl-k">-</span><span class="pl-c1">6</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]<span class="pl-k">:</span><span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getPlotLinePath</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b,c,d)},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">legend</span>;<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataClasses</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">allItems</span>)<span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">allItems</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDataClass</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>.<span class="pl-en">destroy</span>()}),<span class="pl-smi">c</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-c1">options</span>[<span class="pl-v">this</span>.<span class="pl-smi">coll</span>]<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-v">this</span>.<span class="pl-smi">userOptions</span>,a);<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">update</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-v">this</span>.<span class="pl-smi">legendItem</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">setLegendColor</span>(),<span class="pl-smi">d</span>.<span class="pl-en">colorizeItem</span>(<span class="pl-v">this</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))},<span class="pl-en">getDataClassLegendSymbols</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">legendItems</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legend</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">valueDecimals</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">valueSuffix</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g;<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">dataClasses</span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">from</span>,l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">to</span>;g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;j<span class="pl-k">===</span>x<span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt; <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt; <span class="pl-pds">&quot;</span></span>);j<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">+=</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(j,e)<span class="pl-k">+</span>f);j<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> - <span class="pl-pds">&quot;</span></span>);l<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">+=</span><span class="pl-smi">v</span>.<span class="pl-en">numberFormat</span>(l,e)<span class="pl-k">+</span>f);<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-en">q</span>({chart<span class="pl-k">:</span>b,name<span class="pl-k">:</span>g,options<span class="pl-k">:</span>{},drawLegendSymbol<span class="pl-k">:</span><span class="pl-smi">bb</span>.<span class="pl-smi">drawRectangle</span>,visible<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,setState<span class="pl-k">:</span><span class="pl-c1">T</span>,isDataClass<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">setVisible</span><span class="pl-k">:</span><span class="pl-k">function</span>(){k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span>k;<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">dataClass</span><span class="pl-k">===</span>i<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">setVisible</span>(k)})});<span class="pl-smi">b</span>.<span class="pl-smi">legend</span>.<span class="pl-en">colorizeItem</span>(<span class="pl-v">this</span>,k)}},d))});<span class="pl-k">return</span> c},name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">v</span>.<span class="pl-smi">Fx</span>.<span class="pl-c1">prototype</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Setter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">elem</span>.<span class="pl-en">attr</span>(a,<span class="pl-smi">cb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">tweenColors</span>(<span class="pl-en">N</span>(<span class="pl-v">this</span>.<span class="pl-c1">start</span>),<span class="pl-en">N</span>(<span class="pl-v">this</span>.<span class="pl-smi">end</span>),<span class="pl-v">this</span>.<span class="pl-smi">pos</span>))}});<span class="pl-en">fa</span>(<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getAxes<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colorAxis</span>;<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">colorAxis</span><span class="pl-k">=</span>[];b<span class="pl-k">&amp;&amp;</span><span class="pl-k">new</span> <span class="pl-en">cb</span>(<span class="pl-v">this</span>,b)});<span class="pl-en">fa</span>(<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getAllItems<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">colorAxis</span>[<span class="pl-c1">0</span>];c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataClasses</span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">c</span>.<span class="pl-en">getDataClassLegendSymbols</span>())<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c),</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">showInLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}));<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>))});<span class="pl-k">var</span> Ma<span class="pl-k">=</span>{<span class="pl-en">setVisible</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>;<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>graphic<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabel<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(b[a])b[a][c]()})}},Kb<span class="pl-k">=</span>{pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,dashstyle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dashStyle<span class="pl-pds">&quot;</span></span>},pointArrayMap<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>],axisTypes<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>colorAxis<span class="pl-pds">&quot;</span></span>],optionalAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>colorAxis<span class="pl-pds">&quot;</span></span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],getSymbol<span class="pl-k">:</span><span class="pl-c1">T</span>,parallelArrays<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>],</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line">colorKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,<span class="pl-en">translateColors</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">nullColor</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">colorAxis</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">colorKey</span>;<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>e[d];<span class="pl-k">if</span>(f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">||</span>(f<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>b<span class="pl-k">:</span>c<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">toColor</span>(f,e)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>))<span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>f})}},kb<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">documentElement</span>.<span class="pl-c1">style</span>.<span class="pl-smi">vectorEffect</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-c1">X</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">X</span>.<span class="pl-smi">scatter</span>,{allAreas<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,nullColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#F8F8F8<span class="pl-pds">&quot;</span></span>,borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>silver<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,marker<span class="pl-k">:</span><span class="pl-c1">null</span>,stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,dataLabels<span class="pl-k">:</span>{<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">point</span>.<span class="pl-c1">value</span>},inside<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line">crop<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,overflow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,padding<span class="pl-k">:</span><span class="pl-c1">0</span>},turboThreshold<span class="pl-k">:</span><span class="pl-c1">0</span>,tooltip<span class="pl-k">:</span>{followPointer<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>{point.name}: {point.value}&lt;br/&gt;<span class="pl-pds">&quot;</span></span>},states<span class="pl-k">:</span>{normal<span class="pl-k">:</span>{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},hover<span class="pl-k">:</span>{brightness<span class="pl-k">:</span><span class="pl-c1">0.2</span>,halo<span class="pl-k">:</span><span class="pl-c1">null</span>}}});<span class="pl-k">var</span> Lb<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">Z</span>,<span class="pl-en">q</span>({<span class="pl-en">applyOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b),d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">joinBy</span>;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">mapData</span>)<span class="pl-k">if</span>(e<span class="pl-k">=</span>c[e[<span class="pl-c1">1</span>]]<span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">mapMap</span>[c[e[<span class="pl-c1">1</span>]]]){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">xyFromShape</span>)<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">_midX</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">_midY</span>;<span class="pl-en">q</span>(c,e)}<span class="pl-k">else</span> <span class="pl-smi">c</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> c},<span class="pl-en">onMouseOver</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">clearTimeout</span>(<span class="pl-v">this</span>.<span class="pl-smi">colorInterval</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">value</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>)<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">onMouseOver</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a);<span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-en">onMouseOut</span>(a)},<span class="pl-en">onMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-k">+</span><span class="pl-k">new</span> <span class="pl-en">xa</span>,c<span class="pl-k">=</span><span class="pl-en">N</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>),d<span class="pl-k">=</span><span class="pl-en">N</span>(<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>.<span class="pl-smi">hover</span>.<span class="pl-smi">fill</span>),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-c1">options</span>.<span class="pl-smi">states</span>.<span class="pl-smi">normal</span>.<span class="pl-smi">animation</span>,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">duration</span><span class="pl-k">||</span><span class="pl-c1">500</span>),g;<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">rgba</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">4</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">rgba</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">4</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">state</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>].<span class="pl-smi">fill</span>,<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>].<span class="pl-smi">fill</span>,<span class="pl-c1">clearTimeout</span>(<span class="pl-smi">a</span>.<span class="pl-smi">colorInterval</span>),<span class="pl-smi">a</span>.<span class="pl-smi">colorInterval</span><span class="pl-k">=</span><span class="pl-c1">setInterval</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">xa</span><span class="pl-k">-</span>b)<span class="pl-k">/</span>f,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>;e<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>);g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">cb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">tweenColors</span>.<span class="pl-c1">call</span>(<span class="pl-c1">0</span>,d,</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line">c,e));e<span class="pl-k">&gt;=</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">clearTimeout</span>(<span class="pl-smi">a</span>.<span class="pl-smi">colorInterval</span>)},<span class="pl-c1">13</span>);<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">onMouseOut</span>.<span class="pl-c1">call</span>(a);<span class="pl-k">if</span>(g)<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>].<span class="pl-smi">fill</span><span class="pl-k">=</span>g},<span class="pl-en">zoomTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>;<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-en">setExtremes</span>(<span class="pl-v">this</span>.<span class="pl-smi">_minX</span>,<span class="pl-v">this</span>.<span class="pl-smi">_maxX</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>.<span class="pl-en">setExtremes</span>(<span class="pl-v">this</span>.<span class="pl-smi">_minY</span>,<span class="pl-v">this</span>.<span class="pl-smi">_maxY</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-en">redraw</span>()}},Ma));<span class="pl-c1">D</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>,<span class="pl-en">y</span>(Kb,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>map<span class="pl-pds">&quot;</span></span>,pointClass<span class="pl-k">:</span>Lb,supportsDrilldown<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,getExtremesFromAll<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,useMapGeometry<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,forceDL<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,searchPoint<span class="pl-k">:</span><span class="pl-c1">T</span>,directTouch<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,preserveAspectRatio<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">getBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,c<span class="pl-k">=</span><span class="pl-k">-</span>b,d<span class="pl-k">=</span>b,e<span class="pl-k">=</span><span class="pl-k">-</span>b,f<span class="pl-k">=</span>b,g<span class="pl-k">=</span>b,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,k;<span class="pl-en">n</span>(a<span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">path</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-smi">path</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-smi">path</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">splitPath</span>(<span class="pl-smi">a</span>.<span class="pl-smi">path</span>);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">path</span><span class="pl-k">||</span>[],i<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>,p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,n<span class="pl-k">=</span><span class="pl-k">-</span>b,r<span class="pl-k">=</span>b,q<span class="pl-k">=</span><span class="pl-k">-</span>b,s<span class="pl-k">=</span>b,t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">properties</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">_foundBox</span>){<span class="pl-k">for</span>(;i<span class="pl-k">--</span>;)<span class="pl-k">typeof</span> h[i]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(h[i])<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">?</span>(n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(n,h[i]),r<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(r,h[i]))<span class="pl-k">:</span>(q<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(q,h[i]),s<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(s,h[i])),p<span class="pl-k">=</span><span class="pl-k">!</span>p);<span class="pl-smi">a</span>.<span class="pl-smi">_midX</span><span class="pl-k">=</span>r<span class="pl-k">+</span>(n<span class="pl-k">-</span>r)<span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-smi">middleX</span><span class="pl-k">||</span>t<span class="pl-k">&amp;&amp;</span>t[<span class="pl-s"><span class="pl-pds">&quot;</span>hc-middle-x<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-c1">0.5</span>);<span class="pl-smi">a</span>.<span class="pl-smi">_midY</span><span class="pl-k">=</span>s<span class="pl-k">+</span>(q<span class="pl-k">-</span>s)<span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-smi">middleY</span><span class="pl-k">||</span>t<span class="pl-k">&amp;&amp;</span>t[<span class="pl-s"><span class="pl-pds">&quot;</span>hc-middle-y<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-c1">0.5</span>);<span class="pl-smi">a</span>.<span class="pl-smi">_maxX</span><span class="pl-k">=</span>n;<span class="pl-smi">a</span>.<span class="pl-smi">_minX</span><span class="pl-k">=</span>r;<span class="pl-smi">a</span>.<span class="pl-smi">_maxY</span><span class="pl-k">=</span>q;<span class="pl-smi">a</span>.<span class="pl-smi">_minY</span><span class="pl-k">=</span>s;<span class="pl-smi">a</span>.<span class="pl-smi">labelrank</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelrank</span>,(n<span class="pl-k">-</span>r)<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line">(q<span class="pl-k">-</span>s));<span class="pl-smi">a</span>.<span class="pl-smi">_foundBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(c,<span class="pl-smi">a</span>.<span class="pl-smi">_maxX</span>);d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d,<span class="pl-smi">a</span>.<span class="pl-smi">_minX</span>);e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">_maxY</span>);f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(f,<span class="pl-smi">a</span>.<span class="pl-smi">_minY</span>);g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_maxX</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">_minX</span>,<span class="pl-smi">a</span>.<span class="pl-smi">_maxY</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">_minY</span>,g);k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}});<span class="pl-k">if</span>(k){<span class="pl-v">this</span>.<span class="pl-smi">minY</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(f,<span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">minY</span>,b));<span class="pl-v">this</span>.<span class="pl-smi">maxY</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(e,<span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">maxY</span>,<span class="pl-k">-</span>b));<span class="pl-v">this</span>.<span class="pl-smi">minX</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d,<span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">minX</span>,b));<span class="pl-v">this</span>.<span class="pl-smi">maxX</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(c,<span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-smi">maxX</span>,<span class="pl-k">-</span>b));<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">options</span>.<span class="pl-smi">minRange</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)<span class="pl-smi">h</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">5</span><span class="pl-k">*</span>g,(<span class="pl-v">this</span>.<span class="pl-smi">maxX</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">minX</span>)<span class="pl-k">/</span><span class="pl-c1">5</span>,<span class="pl-smi">h</span>.<span class="pl-smi">minRange</span><span class="pl-k">||</span>b);<span class="pl-k">if</span>(i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">options</span>.<span class="pl-smi">minRange</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)<span class="pl-smi">i</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">5</span><span class="pl-k">*</span>g,(<span class="pl-v">this</span>.<span class="pl-smi">maxY</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">minY</span>)<span class="pl-k">/</span><span class="pl-c1">5</span>,<span class="pl-smi">i</span>.<span class="pl-smi">minRange</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line">b)}},<span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getExtremes</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-smi">valueData</span>);<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">getBox</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>);<span class="pl-v">this</span>.<span class="pl-smi">valueMin</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>;<span class="pl-v">this</span>.<span class="pl-smi">valueMax</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMax</span>;<span class="pl-v">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">minY</span>;<span class="pl-v">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">maxY</span>},<span class="pl-en">translatePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">transA</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">minPixelPadding</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">transA</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minPixelPadding</span>,i,k<span class="pl-k">=</span>[];<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;i<span class="pl-k">--</span>;)<span class="pl-k">typeof</span> a[i]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(k[i]<span class="pl-k">=</span>b<span class="pl-k">?</span>(a[i]<span class="pl-k">-</span>e)<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">:</span>(a[i]<span class="pl-k">-</span>g)<span class="pl-k">*</span>h<span class="pl-k">+</span>d,b<span class="pl-k">=</span><span class="pl-k">!</span>b)<span class="pl-k">:</span>k[i]<span class="pl-k">=</span>a[i];<span class="pl-k">return</span> k},</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">mapData</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">joinBy</span>,f<span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-c1">null</span>,g<span class="pl-k">=</span>[],h,i,k;f<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>_i<span class="pl-pds">&quot;</span></span>);e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">joinBy</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">splat</span>(e);e[<span class="pl-c1">1</span>]<span class="pl-k">||</span>(e[<span class="pl-c1">1</span>]<span class="pl-k">=</span>e[<span class="pl-c1">0</span>]);a<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">typeof</span> b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a[c]<span class="pl-k">=</span>{value<span class="pl-k">:</span>b});<span class="pl-k">if</span>(f)a[c].<span class="pl-smi">_i</span><span class="pl-k">=</span>c});<span class="pl-v">this</span>.<span class="pl-en">getBox</span>(a);<span class="pl-k">if</span>(d){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>FeatureCollection<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(d[<span class="pl-s"><span class="pl-pds">&quot;</span>hc-transform<span class="pl-pds">&quot;</span></span>])<span class="pl-k">for</span>(h <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">mapTransforms</span><span class="pl-k">=</span>i<span class="pl-k">=</span>d[<span class="pl-s"><span class="pl-pds">&quot;</span>hc-transform<span class="pl-pds">&quot;</span></span>],i)<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-en">hasOwnProperty</span>(h)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">rotation</span>)<span class="pl-smi">h</span>.<span class="pl-smi">cosAngle</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">h</span>.<span class="pl-smi">rotation</span>),<span class="pl-smi">h</span>.<span class="pl-smi">sinAngle</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-smi">h</span>.<span class="pl-smi">rotation</span>);d<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">geojson</span>(d,<span class="pl-v">this</span>.<span class="pl-c1">type</span>,<span class="pl-v">this</span>)}<span class="pl-v">this</span>.<span class="pl-en">getBox</span>(d);<span class="pl-v">this</span>.<span class="pl-smi">mapData</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">d;<span class="pl-v">this</span>.<span class="pl-smi">mapMap</span><span class="pl-k">=</span>{};<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;k<span class="pl-k">++</span>)h<span class="pl-k">=</span>d[k],i<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">properties</span>,<span class="pl-smi">h</span>.<span class="pl-smi">_i</span><span class="pl-k">=</span>k,e[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&amp;&amp;</span>i[e[<span class="pl-c1">0</span>]]<span class="pl-k">&amp;&amp;</span>(h[e[<span class="pl-c1">0</span>]]<span class="pl-k">=</span>i[e[<span class="pl-c1">0</span>]]),<span class="pl-v">this</span>.<span class="pl-smi">mapMap</span>[h[e[<span class="pl-c1">0</span>]]]<span class="pl-k">=</span>h;<span class="pl-smi">c</span>.<span class="pl-smi">allAreas</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>a<span class="pl-k">||</span>[],e[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(a[e[<span class="pl-c1">1</span>]])}),g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>,<span class="pl-en">n</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){(<span class="pl-k">!</span>e[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[e[<span class="pl-c1">0</span>]]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-en">y</span>(b,{value<span class="pl-k">:</span><span class="pl-c1">null</span>}))}))}<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">setData</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b)},drawGraph<span class="pl-k">:</span><span class="pl-c1">T</span>,drawDataLabels<span class="pl-k">:</span><span class="pl-c1">T</span>,<span class="pl-en">doFullTranslate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">isResizing</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isVML</span><span class="pl-k">||!</span><span class="pl-v">this</span>.<span class="pl-smi">baseTrans</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">doFullTranslate</span>();<span class="pl-smi">a</span>.<span class="pl-en">generatePoints</span>();<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-smi">e</span>.<span class="pl-smi">plotX</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">e</span>.<span class="pl-smi">_midX</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">e</span>.<span class="pl-smi">_midY</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d)<span class="pl-smi">e</span>.<span class="pl-smi">shapeType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">e</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span>{d<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">translatePath</span>(<span class="pl-smi">e</span>.<span class="pl-smi">path</span>)},kb<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">shapeArgs</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>vector-effect<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>non-scaling-stroke<span class="pl-pds">&quot;</span></span>)});<span class="pl-smi">a</span>.<span class="pl-en">translateColors</span>()},<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">renderer</span>,g,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">baseTrans</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">transformGroup</span>)<span class="pl-smi">a</span>.<span class="pl-smi">transformGroup</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">g</span>().<span class="pl-en">attr</span>({scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(d),<span class="pl-smi">a</span>.<span class="pl-smi">transformGroup</span>.<span class="pl-smi">survive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">doFullTranslate</span>()<span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttrToOptions</span>.<span class="pl-smi">fill</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>)<span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-smi">fill</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">state</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)].<span class="pl-smi">fill</span>}),kb<span class="pl-k">||</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>];b[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>][<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;</span>(b[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span>)}),<span class="pl-smi">a</span>.<span class="pl-smi">group</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">transformGroup</span>,<span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawPoints</span>.<span class="pl-c1">apply</span>(a),<span class="pl-smi">a</span>.<span class="pl-smi">group</span><span class="pl-k">=</span>d,<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-name-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()),<span class="pl-smi">a</span>.<span class="pl-smi">properties</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">properties</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>hc-key<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-key-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">properties</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>hc-key<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">toLowerCase</span>()),kb<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-widthSetter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-c1">T</span>))}),<span class="pl-v">this</span>.<span class="pl-smi">baseTrans</span><span class="pl-k">=</span>{originX<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span>,originY<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">/</span><span class="pl-smi">c</span>.<span class="pl-smi">transA</span><span class="pl-k">+</span>(<span class="pl-smi">c</span>.<span class="pl-smi">reversed</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">len</span><span class="pl-k">/</span><span class="pl-smi">c</span>.<span class="pl-smi">transA</span>),transAX<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span>,transAY<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">transA</span>},<span class="pl-v">this</span>.<span class="pl-smi">transformGroup</span>.<span class="pl-c1">animate</span>({translateX<span class="pl-k">:</span><span class="pl-c1">0</span>,translateY<span class="pl-k">:</span><span class="pl-c1">0</span>,scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>}))<span class="pl-k">:</span>(g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span><span class="pl-k">/</span><span class="pl-smi">h</span>.<span class="pl-smi">transAX</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">transA</span><span class="pl-k">/</span><span class="pl-smi">h</span>.<span class="pl-smi">transAY</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">h</span>.<span class="pl-smi">originX</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">h</span>.<span class="pl-smi">originY</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),g<span class="pl-k">&gt;</span><span class="pl-c1">0.99</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&lt;</span><span class="pl-c1">1.01</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&gt;</span><span class="pl-c1">0.99</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span><span class="pl-c1">1.01</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b),</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(c)),<span class="pl-v">this</span>.<span class="pl-smi">transformGroup</span>.<span class="pl-c1">animate</span>({translateX<span class="pl-k">:</span>b,translateY<span class="pl-k">:</span>c,scaleX<span class="pl-k">:</span>g,scaleY<span class="pl-k">:</span>d}));kb<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">borderWidth</span><span class="pl-k">/</span>(g<span class="pl-k">||</span><span class="pl-c1">1</span>));<span class="pl-v">this</span>.<span class="pl-en">drawMapDataLabels</span>()},<span class="pl-en">drawMapDataLabels</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawDataLabels</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-smi">dataLabelsGroup</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">dataLabelsGroup</span>.<span class="pl-c1">clip</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">clipRect</span>)},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">render</span>;<span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isVML</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">3E3</span><span class="pl-k">?</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(a)})<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(a)},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>,</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">group</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pos</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isSVG</span>)b<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>{duration<span class="pl-k">:</span><span class="pl-c1">1E3</span>}),a<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">attr</span>({translateX<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">/</span><span class="pl-c1">2</span>,translateY<span class="pl-k">:</span>g<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">/</span><span class="pl-c1">2</span>,scaleX<span class="pl-k">:</span><span class="pl-c1">0.001</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">0.001</span>})<span class="pl-k">:</span>(<span class="pl-smi">c</span>.<span class="pl-c1">animate</span>({translateX<span class="pl-k">:</span>f,translateY<span class="pl-k">:</span>g,scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>},b),<span class="pl-v">this</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>)},<span class="pl-en">animateDrilldown</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">plotBox</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">drilldownLevels</span>[<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">drilldownLevels</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bBox</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">drilldown</span>.<span class="pl-smi">animation</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-c1">height</span>),<span class="pl-smi">c</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line">{scaleX<span class="pl-k">:</span>a,scaleY<span class="pl-k">:</span>a,translateX<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>,translateY<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>},<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>.<span class="pl-en">attr</span>(<span class="pl-smi">c</span>.<span class="pl-smi">shapeArgs</span>).<span class="pl-c1">animate</span>({scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>,translateX<span class="pl-k">:</span><span class="pl-c1">0</span>,translateY<span class="pl-k">:</span><span class="pl-c1">0</span>},e)}),<span class="pl-v">this</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>},drawLegendSymbol<span class="pl-k">:</span><span class="pl-smi">bb</span>.<span class="pl-smi">drawRectangle</span>,<span class="pl-en">animateDrillupFrom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">animateDrillupFrom</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a)},<span class="pl-en">animateDrillupTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">animateDrillupTo</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a)}}));(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">Chart</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">each</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pick</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">addEvent</span>;<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">callbacks</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">[];<span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataLabels</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataLabelCollections</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabel<span class="pl-pds">&quot;</span></span>];(<span class="pl-smi">b</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasPointLabels</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">allowOverlap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a[b])a[b].<span class="pl-smi">labelrank</span><span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelrank</span>,<span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-c1">height</span>),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(a[b])})})});<span class="pl-smi">a</span>.<span class="pl-en">hideOverlappingLabels</span>(e)}<span class="pl-en">b</span>();<span class="pl-en">e</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>,b)});<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">hideOverlappingLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,d,e,k,j,l,m,n,o,r;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>b;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(d<span class="pl-k">=</span>a[e])<span class="pl-smi">d</span>.<span class="pl-smi">oldOpacity</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">opacity</span>,<span class="pl-smi">d</span>.<span class="pl-smi">newOpacity</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>(<span class="pl-smi">b</span>.<span class="pl-smi">labelrank</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>)<span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelrank</span><span class="pl-k">||</span><span class="pl-c1">0</span>)});<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>b;e<span class="pl-k">++</span>){k<span class="pl-k">=</span>a[e];<span class="pl-k">for</span>(d<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span>b;<span class="pl-k">++</span>d)<span class="pl-k">if</span>(j<span class="pl-k">=</span>a[d],k<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">placed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">placed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">newOpacity</span><span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">newOpacity</span><span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">alignAttr</span>,m<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">alignAttr</span>,n<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">parentGroup</span>,o<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">parentGroup</span>,r<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">k</span>.<span class="pl-smi">box</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-smi">padding</span>),l<span class="pl-k">=</span><span class="pl-k">!</span>(<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">translateX</span><span class="pl-k">&gt;</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span>(<span class="pl-smi">k</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>r)<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span>(<span class="pl-smi">j</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>r)<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">translateY</span><span class="pl-k">&gt;</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateY</span><span class="pl-k">+</span>(<span class="pl-smi">k</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>r)<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-smi">translateY</span><span class="pl-k">+</span>(<span class="pl-smi">j</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>r)<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-smi">translateY</span>)))(<span class="pl-smi">k</span>.<span class="pl-smi">labelrank</span><span class="pl-k">&lt;</span><span class="pl-smi">j</span>.<span class="pl-smi">labelrank</span><span class="pl-k">?</span>k<span class="pl-k">:</span>j).<span class="pl-smi">newOpacity</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-en">c</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">if</span>(a){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">newOpacity</span>;</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">oldOpacity</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">placed</span>)c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">show</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">hide</span>()},<span class="pl-smi">a</span>.<span class="pl-smi">alignAttr</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span>c,a[<span class="pl-smi">a</span>.<span class="pl-smi">isOld</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">a</span>.<span class="pl-smi">alignAttr</span>,<span class="pl-c1">null</span>,b);<span class="pl-smi">a</span>.<span class="pl-smi">isOld</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}})}})(v);<span class="pl-en">q</span>(<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">renderMapNavigation</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">mapNavigation</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">buttons</span>,d,e,f,g,<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a)<span class="pl-smi">a</span>.<span class="pl-smi">preventDefault</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">stopPropagation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">cancelBubble</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">i</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-smi">handler</span>.<span class="pl-c1">call</span>(a,b);<span class="pl-en">h</span>(b)};<span class="pl-k">if</span>(<span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">enableButtons</span>,<span class="pl-smi">b</span>.<span class="pl-smi">enabled</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">forExport</span>)<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-en">hasOwnProperty</span>(d))f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-en">y</span>(<span class="pl-smi">b</span>.<span class="pl-smi">buttonOptions</span>,c[d]),e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">theme</span>,<span class="pl-smi">e</span>.<span class="pl-c1">style</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">f</span>.<span class="pl-smi">theme</span>.<span class="pl-c1">style</span>,<span class="pl-smi">f</span>.<span class="pl-c1">style</span>),g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">states</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">button</span>(<span class="pl-smi">f</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,i,e,g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">hover</span>,g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">select</span>,<span class="pl-c1">0</span>,d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoomIn<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>topbutton<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottombutton<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span>,title<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">lang</span>[d],zIndex<span class="pl-k">:</span><span class="pl-c1">5</span>}).<span class="pl-c1">add</span>(),<span class="pl-smi">e</span>.<span class="pl-smi">handler</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">onclick</span>,<span class="pl-smi">e</span>.<span class="pl-c1">align</span>(<span class="pl-en">q</span>(f,{width<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">height</span>}),<span class="pl-c1">null</span>,<span class="pl-smi">f</span>.<span class="pl-smi">alignTo</span>),<span class="pl-en">M</span>(<span class="pl-smi">e</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dblclick<span class="pl-pds">&quot;</span></span>,h)},<span class="pl-en">fitToBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">n</span>([[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>],[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>]],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];a[d]<span class="pl-k">+</span>a[c]<span class="pl-k">&gt;</span>b[d]<span class="pl-k">+</span>b[c]<span class="pl-k">&amp;&amp;</span>(a[c]<span class="pl-k">&gt;</span>b[c]<span class="pl-k">?</span>(a[c]<span class="pl-k">=</span>b[c],a[d]<span class="pl-k">=</span>b[d])<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line">a[d]<span class="pl-k">=</span>b[d]<span class="pl-k">+</span>b[c]<span class="pl-k">-</span>a[c]);a[c]<span class="pl-k">&gt;</span>b[c]<span class="pl-k">&amp;&amp;</span>(a[c]<span class="pl-k">=</span>b[c]);a[d]<span class="pl-k">&lt;</span>b[d]<span class="pl-k">&amp;&amp;</span>(a[d]<span class="pl-k">=</span>b[d])});<span class="pl-k">return</span> a},<span class="pl-en">mapZoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-smi">min</span>,h<span class="pl-k">=</span><span class="pl-en">o</span>(b,<span class="pl-smi">f</span>.<span class="pl-smi">min</span><span class="pl-k">+</span>g<span class="pl-k">/</span><span class="pl-c1">2</span>),i<span class="pl-k">=</span>g<span class="pl-k">*</span>a,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>[<span class="pl-c1">0</span>],k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">min</span>,j<span class="pl-k">=</span><span class="pl-en">o</span>(c,<span class="pl-smi">g</span>.<span class="pl-smi">min</span><span class="pl-k">+</span>k<span class="pl-k">/</span><span class="pl-c1">2</span>);k<span class="pl-k">*=</span>a;h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">fitToBox</span>({x<span class="pl-k">:</span>h<span class="pl-k">-</span>i<span class="pl-k">*</span>(d<span class="pl-k">?</span>(d<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span>)<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-smi">len</span><span class="pl-k">:</span><span class="pl-c1">0.5</span>),y<span class="pl-k">:</span>j<span class="pl-k">-</span>k<span class="pl-k">*</span>(e<span class="pl-k">?</span>(e<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">pos</span>)<span class="pl-k">/</span><span class="pl-smi">g</span>.<span class="pl-smi">len</span><span class="pl-k">:</span><span class="pl-c1">0.5</span>),width<span class="pl-k">:</span>i,height<span class="pl-k">:</span>k},{x<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">dataMin</span>,y<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">dataMin</span>,width<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-smi">dataMin</span>,height<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">dataMin</span>});<span class="pl-k">if</span>(d)<span class="pl-smi">f</span>.<span class="pl-smi">fixTo</span><span class="pl-k">=</span>[d<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span>,b];<span class="pl-k">if</span>(e)<span class="pl-smi">g</span>.<span class="pl-smi">fixTo</span><span class="pl-k">=</span>[e<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">pos</span>,c];a<span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-en">setExtremes</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">width</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">g</span>.<span class="pl-en">setExtremes</span>(<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">height</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>))<span class="pl-k">:</span>(<span class="pl-smi">f</span>.<span class="pl-en">setExtremes</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">g</span>.<span class="pl-en">setExtremes</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>));<span class="pl-v">this</span>.<span class="pl-en">redraw</span>()}});<span class="pl-en">fa</span>(<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>render<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">mapNavigation</span>;<span class="pl-smi">b</span>.<span class="pl-en">renderMapNavigation</span>();<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b);(<span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">enableDoubleClickZoom</span>,<span class="pl-smi">c</span>.<span class="pl-smi">enabled</span>)<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">enableDoubleClickZoomTo</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">M</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dblclick<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-en">onContainerDblClick</span>(a)});<span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">enableMouseWheelZoom</span>,<span class="pl-smi">c</span>.<span class="pl-smi">enabled</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">M</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>,<span class="pl-c1">C</span>.<span class="pl-smi">onmousewheel</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>DOMMouseScroll<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mousewheel<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-en">onContainerMouseWheel</span>(a);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>})});</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">onContainerDblClick</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">mapNavigation</span>.<span class="pl-smi">enableDoubleClickZoomTo</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>.<span class="pl-en">zoomTo</span>()<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">mapZoom</span>(<span class="pl-c1">0.5</span>,<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">toValue</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>),<span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">toValue</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>),<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>)},<span class="pl-en">onContainerMouseWheel</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c,a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">normalize</span>(a);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">detail</span><span class="pl-k">||</span><span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wheelDelta</span><span class="pl-k">/</span><span class="pl-c1">120</span>);<span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">mapZoom</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>,c),<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">toValue</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>),<span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">toValue</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>),<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>)}});<span class="pl-en">fa</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,b,c);<span class="pl-k">if</span>(<span class="pl-en">o</span>(<span class="pl-smi">c</span>.<span class="pl-smi">mapNavigation</span>.<span class="pl-smi">enableTouchZoom</span>,<span class="pl-smi">c</span>.<span class="pl-smi">mapNavigation</span>.<span class="pl-smi">enabled</span>))<span class="pl-v">this</span>.<span class="pl-smi">pinchX</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pinchHor</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pinchY</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pinchVert</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hasZoom</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-en">fa</span>(<span class="pl-smi">Aa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pinchTranslate<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,b,c,d,e,f,g);<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>map<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">hasZoom</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">scaleX</span><span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">scaleY</span>,<span class="pl-v">this</span>.<span class="pl-en">pinchTranslateDirection</span>(<span class="pl-k">!</span>a,b,c,d,e,</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">f,g,a<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">scaleX</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">scaleY</span>))});<span class="pl-c1">X</span>.<span class="pl-smi">mapline</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">X</span>.<span class="pl-smi">map</span>,{lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,fillColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>});<span class="pl-c1">D</span>.<span class="pl-smi">mapline</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">D</span>.<span class="pl-smi">map</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mapline<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>,dashstyle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dashStyle<span class="pl-pds">&quot;</span></span>},drawLegendSymbol<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">line</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawLegendSymbol</span>});<span class="pl-c1">X</span>.<span class="pl-smi">mappoint</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">X</span>.<span class="pl-smi">scatter</span>,{dataLabels<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">point</span>.<span class="pl-c1">name</span>},crop<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,defer<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,overflow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>}}});<span class="pl-c1">D</span>.<span class="pl-smi">mappoint</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mappoint<span class="pl-pds">&quot;</span></span>,forceDL<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,pointClass<span class="pl-k">:</span><span class="pl-en">$</span>(<span class="pl-c1">Z</span>,{<span class="pl-en">applyOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-smi">a</span>.<span class="pl-smi">lat</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">lon</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-en">q</span>(c,<span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">chart</span>.<span class="pl-en">fromLatLonToPoint</span>(c)));<span class="pl-k">return</span> c}})});<span class="pl-c1">X</span>.<span class="pl-smi">bubble</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">X</span>.<span class="pl-smi">scatter</span>,{dataLabels<span class="pl-k">:</span>{<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">point</span>.<span class="pl-c1">z</span>},inside<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>},marker<span class="pl-k">:</span>{lineColor<span class="pl-k">:</span><span class="pl-c1">null</span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>},minSize<span class="pl-k">:</span><span class="pl-c1">8</span>,maxSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>20%<span class="pl-pds">&quot;</span></span>,softThreshold<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{halo<span class="pl-k">:</span>{size<span class="pl-k">:</span><span class="pl-c1">5</span>}}},tooltip<span class="pl-k">:</span>{pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>({point.x}, {point.y}), Size: {point.z}<span class="pl-pds">&quot;</span></span>},turboThreshold<span class="pl-k">:</span><span class="pl-c1">0</span>,zThreshold<span class="pl-k">:</span><span class="pl-c1">0</span>,zoneAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> Pb<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">Z</span>,{<span class="pl-en">haloPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">haloPath</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-smi">r</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">options</span>.<span class="pl-smi">states</span>.<span class="pl-smi">hover</span>.<span class="pl-smi">halo</span>.<span class="pl-c1">size</span>)},ttBelow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-c1">D</span>.<span class="pl-smi">bubble</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bubble<span class="pl-pds">&quot;</span></span>,pointClass<span class="pl-k">:</span>Pb,pointArrayMap<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>],parallelArrays<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>],trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],bubblePadding<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,zoneAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>},<span class="pl-en">applyOpacity</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,c<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">b</span>.<span class="pl-smi">fillOpacity</span>,<span class="pl-c1">0.5</span>),a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">fillColor</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">color</span>;c<span class="pl-k">!==</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">N</span>(a).<span class="pl-en">setOpacity</span>(c).<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgba<span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> a},<span class="pl-en">convertAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">convertAttribs</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>);<span class="pl-smi">a</span>.<span class="pl-smi">fill</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">applyOpacity</span>(<span class="pl-smi">a</span>.<span class="pl-smi">fill</span>);<span class="pl-k">return</span> a},<span class="pl-en">getRadii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e,f,g,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">zData</span>,i<span class="pl-k">=</span>[],k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,j<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">sizeBy</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">zThreshold</span>,m<span class="pl-k">=</span>b<span class="pl-k">-</span>a;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>e;f<span class="pl-k">++</span>)g<span class="pl-k">=</span>h[f],<span class="pl-smi">k</span>.<span class="pl-smi">sizeByAbsoluteValue</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g<span class="pl-k">-</span>l),b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b<span class="pl-k">-</span>l,<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span>l)),a<span class="pl-k">=</span><span class="pl-c1">0</span>),g<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">:</span>g<span class="pl-k">&lt;</span>a<span class="pl-k">?</span>g<span class="pl-k">=</span>c<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>(g<span class="pl-k">=</span>m<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>(g<span class="pl-k">-</span>a)<span class="pl-k">/</span>m<span class="pl-k">:</span><span class="pl-c1">0.5</span>,j<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(g)),g<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-en">ceil</span>(c<span class="pl-k">+</span>g<span class="pl-k">*</span>(d<span class="pl-k">-</span>c))<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-smi">i</span>.<span class="pl-c1">push</span>(g);<span class="pl-v">this</span>.<span class="pl-smi">radii</span><span class="pl-k">=</span>i},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>;d<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>),<span class="pl-smi">d</span>.<span class="pl-c1">animate</span>({r<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>},b))}),<span class="pl-v">this</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>,c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">radii</span>;<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translate</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;a<span class="pl-k">--</span>;)c<span class="pl-k">=</span>b[a],d<span class="pl-k">=</span>e<span class="pl-k">?</span>e[a]<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-k">typeof</span> d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-smi">minPxSize</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-smi">shapeType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span>,y<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span>,r<span class="pl-k">:</span>d},<span class="pl-smi">c</span>.<span class="pl-smi">dlBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span><span class="pl-k">-</span>d,y<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span><span class="pl-k">-</span>d,width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>d,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>d})<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dlBox</span><span class="pl-k">=</span>x},<span class="pl-en">drawLegendSymbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">a</span>.<span class="pl-smi">itemStyle</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">f</span><span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>;<span class="pl-smi">b</span>.<span class="pl-smi">legendSymbol</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">circle</span>(d,<span class="pl-smi">a</span>.<span class="pl-smi">baseline</span><span class="pl-k">-</span>d,d).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">legendGroup</span>);<span class="pl-smi">b</span>.<span class="pl-smi">legendSymbol</span>.<span class="pl-smi">isMarker</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},drawPoints<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawPoints</span>,alignDataLabel<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">alignDataLabel</span>,buildKDTree<span class="pl-k">:</span><span class="pl-c1">T</span>,applyZones<span class="pl-k">:</span><span class="pl-c1">T</span>});<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">beforePadding</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">len</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span>b,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">isXAxis</span>,g<span class="pl-k">=</span>f<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xData<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yData<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">min</span>,i<span class="pl-k">=</span>{},k<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-en">min</span>(<span class="pl-smi">c</span>.<span class="pl-smi">plotWidth</span>,<span class="pl-smi">c</span>.<span class="pl-smi">plotHeight</span>),j<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,l<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">max</span><span class="pl-k">-</span>h,p<span class="pl-k">=</span>b<span class="pl-k">/</span>m,q<span class="pl-k">=</span>[];<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">bubblePadding</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">||!</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span>))<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">allowZoomOutside</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(b),f)<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>minSize<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>maxSize<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>d[a],c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>%<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(b),b<span class="pl-k">=</span><span class="pl-en">E</span>(b);i[a]<span class="pl-k">=</span>c<span class="pl-k">?</span>k<span class="pl-k">*</span>b<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">:</span>b}),<span class="pl-smi">b</span>.<span class="pl-smi">minPxSize</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">minSize</span>,<span class="pl-smi">b</span>.<span class="pl-smi">maxPxSize</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">maxSize</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">zData</span>,<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">zMin</span>,<span class="pl-c1">H</span>.<span class="pl-en">min</span>(j,<span class="pl-c1">H</span>.<span class="pl-en">max</span>(<span class="pl-en">Ua</span>(b),<span class="pl-smi">d</span>.<span class="pl-smi">displayNegative</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">zThreshold</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>))),l<span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">d</span>.<span class="pl-smi">zMax</span>,<span class="pl-c1">H</span>.<span class="pl-en">max</span>(l,<span class="pl-en">Ha</span>(b))))});<span class="pl-en">n</span>(q,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a[g],c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,i;f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">getRadii</span>(j,l,<span class="pl-smi">a</span>.<span class="pl-smi">minPxSize</span>,<span class="pl-smi">a</span>.<span class="pl-smi">maxPxSize</span>);<span class="pl-k">if</span>(m<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">for</span>(;c<span class="pl-k">--</span>;)<span class="pl-k">typeof</span> b[c]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radii</span>[c],d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>((b[c]<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">h)<span class="pl-k">*</span>p<span class="pl-k">-</span>i,d),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>((b[c]<span class="pl-k">-</span>h)<span class="pl-k">*</span>p<span class="pl-k">+</span>i,e))});<span class="pl-smi">q</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">-=</span>b,p<span class="pl-k">*=</span>(b<span class="pl-k">+</span>d<span class="pl-k">-</span>e)<span class="pl-k">/</span>b,<span class="pl-en">n</span>([[<span class="pl-s"><span class="pl-pds">&quot;</span>min<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>userMin<span class="pl-pds">&quot;</span></span>,d],[<span class="pl-s"><span class="pl-pds">&quot;</span>max<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>userMax<span class="pl-pds">&quot;</span></span>,e]],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>[b[<span class="pl-c1">0</span>]],a[b[<span class="pl-c1">1</span>]])<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>(a[b[<span class="pl-c1">0</span>]]<span class="pl-k">+=</span>b[<span class="pl-c1">2</span>]<span class="pl-k">/</span>p)}))};<span class="pl-k">if</span>(<span class="pl-c1">D</span>.<span class="pl-smi">bubble</span>)<span class="pl-c1">X</span>.<span class="pl-smi">mapbubble</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">X</span>.<span class="pl-smi">bubble</span>,{animationLimit<span class="pl-k">:</span><span class="pl-c1">500</span>,tooltip<span class="pl-k">:</span>{pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>{point.name}: {point.z}<span class="pl-pds">&quot;</span></span>}}),<span class="pl-c1">D</span>.<span class="pl-smi">mapbubble</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">D</span>.<span class="pl-smi">bubble</span>,{pointClass<span class="pl-k">:</span><span class="pl-en">$</span>(<span class="pl-c1">Z</span>,{<span class="pl-en">applyOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">lat</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">lon</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b),c<span class="pl-k">=</span><span class="pl-en">q</span>(c,<span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">chart</span>.<span class="pl-en">fromLatLonToPoint</span>(c)))<span class="pl-k">:</span>c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Lb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,a,b);<span class="pl-k">return</span> c},ttBelow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}),xyFromShape<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mapbubble<span class="pl-pds">&quot;</span></span>,pointArrayMap<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>],getMapData<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">map</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getMapData</span>,getBox<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">map</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getBox</span>,setData<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">map</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">setData</span>});<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">transformFromLatLon</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">z</span>.<span class="pl-smi">proj4</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)<span class="pl-k">return</span> <span class="pl-en">S</span>(<span class="pl-c1">21</span>),{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-en">proj4</span>(<span class="pl-smi">b</span>.<span class="pl-smi">crs</span>,[<span class="pl-smi">a</span>.<span class="pl-smi">lon</span>,<span class="pl-smi">a</span>.<span class="pl-smi">lat</span>]),d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cosAngle</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">b</span>.<span class="pl-smi">rotation</span>),e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">sinAngle</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-smi">b</span>.<span class="pl-smi">rotation</span>),c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span><span class="pl-k">?</span>[c[<span class="pl-c1">0</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>c[<span class="pl-c1">1</span>]<span class="pl-k">*</span>e,<span class="pl-k">-</span>c[<span class="pl-c1">0</span>]<span class="pl-k">*</span>e<span class="pl-k">+</span>c[<span class="pl-c1">1</span>]<span class="pl-k">*</span>d]<span class="pl-k">:</span>c;<span class="pl-k">return</span>{x<span class="pl-k">:</span>((c[<span class="pl-c1">0</span>]<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">b</span>.<span class="pl-smi">xoffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-smi">scale</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xpan</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonres</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonmarginX</span><span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>(((<span class="pl-smi">b</span>.<span class="pl-smi">yoffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>c[<span class="pl-c1">1</span>])<span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-smi">scale</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ypan</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonres</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonmarginY</span><span class="pl-k">||</span><span class="pl-c1">0</span>)}};<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">transformToLatLon</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">z</span>.<span class="pl-smi">proj4</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)<span class="pl-en">S</span>(<span class="pl-c1">21</span>);<span class="pl-k">else</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span>{x<span class="pl-k">:</span>((<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonmarginX</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonres</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xpan</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>(<span class="pl-smi">b</span>.<span class="pl-smi">scale</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xoffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>((<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonmarginY</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>(<span class="pl-smi">b</span>.<span class="pl-smi">jsonres</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ypan</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>(<span class="pl-smi">b</span>.<span class="pl-smi">scale</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-smi">yoffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>)},d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cosAngle</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">b</span>.<span class="pl-smi">rotation</span>),e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">sinAngle</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-smi">b</span>.<span class="pl-smi">rotation</span>),</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-en">proj4</span>(<span class="pl-smi">b</span>.<span class="pl-smi">crs</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>WGS84<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-smi">rotation</span><span class="pl-k">?</span>{x<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">*-</span>e,y<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>e<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>d}<span class="pl-k">:</span>c);<span class="pl-k">return</span>{lat<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>,lon<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>}}};<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromPointToLatLon</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mapTransforms</span>,c;<span class="pl-k">if</span>(b){<span class="pl-k">for</span>(c <span class="pl-k">in</span> b)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(c)<span class="pl-k">&amp;&amp;</span>b[c].<span class="pl-smi">hitZone</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Db</span>({x<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>},b[c].<span class="pl-smi">hitZone</span>.<span class="pl-smi">coordinates</span>[<span class="pl-c1">0</span>]))<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">transformToLatLon</span>(a,b[c]);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">transformToLatLon</span>(a,b[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>])}<span class="pl-k">else</span> <span class="pl-en">S</span>(<span class="pl-c1">22</span>)};<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromLatLonToPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">mapTransforms</span>,c,d;<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">return</span> <span class="pl-en">S</span>(<span class="pl-c1">22</span>),{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-k">for</span>(c <span class="pl-k">in</span> b)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(c)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">b[c].<span class="pl-smi">hitZone</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">transformFromLatLon</span>(a,b[c]),<span class="pl-en">Db</span>({x<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>},b[c].<span class="pl-smi">hitZone</span>.<span class="pl-smi">coordinates</span>[<span class="pl-c1">0</span>])))<span class="pl-k">return</span> d;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">transformFromLatLon</span>(a,b[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>])};<span class="pl-smi">v</span>.<span class="pl-en">geojson</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[],<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)b<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(a[b][<span class="pl-c1">0</span>],<span class="pl-k">-</span>a[b][<span class="pl-c1">1</span>])},b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>map<span class="pl-pds">&quot;</span></span>;<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">features</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>,i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">coordinates</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">properties</span>,k;e<span class="pl-k">=</span>[];b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>map<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>mapbubble<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>Polygon<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-en">n</span>(c,f),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>MultiPolygon<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">n</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">n</span>(a,</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line">f)}),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>{path<span class="pl-k">:</span>e}))<span class="pl-k">:</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>mapline<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineString<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">f</span>(c)<span class="pl-k">:</span>i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>MultiLineString<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(c,f),<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>{path<span class="pl-k">:</span>e}))<span class="pl-k">:</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>mappoint<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>Point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>{x<span class="pl-k">:</span>c[<span class="pl-c1">0</span>],y<span class="pl-k">:</span><span class="pl-k">-</span>c[<span class="pl-c1">1</span>]});k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-en">q</span>(k,{name<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">NAME</span>,properties<span class="pl-k">:</span>a}))});<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">copyrightShort</span>)<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">mapCredits</span><span class="pl-k">=</span><span class="pl-en">Ba</span>(<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">credits</span>.<span class="pl-smi">mapText</span>,{geojson<span class="pl-k">:</span>a}),<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">mapCreditsFull</span><span class="pl-k">=</span><span class="pl-en">Ba</span>(<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">credits</span>.<span class="pl-smi">mapTextFull</span>,{geojson<span class="pl-k">:</span>a});<span class="pl-k">return</span> d};<span class="pl-en">fa</span>(<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>showCredits<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">mapCredits</span>)<span class="pl-smi">b</span>.<span class="pl-c1">href</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-smi">v</span>.<span class="pl-en">merge</span>(b,</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line">{text<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">text</span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-smi">mapCredits</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}));<span class="pl-v">this</span>.<span class="pl-smi">credits</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">mapCreditsFull</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">credits</span>.<span class="pl-en">attr</span>({title<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">mapCreditsFull</span>})});<span class="pl-en">q</span>(<span class="pl-c1">K</span>.<span class="pl-c1">lang</span>,{zoomIn<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Zoom in<span class="pl-pds">&quot;</span></span>,zoomOut<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Zoom out<span class="pl-pds">&quot;</span></span>});<span class="pl-c1">K</span>.<span class="pl-smi">mapNavigation</span><span class="pl-k">=</span>{buttonOptions<span class="pl-k">:</span>{alignTo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>plotBox<span class="pl-pds">&quot;</span></span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-c1">18</span>,height<span class="pl-k">:</span><span class="pl-c1">18</span>,style<span class="pl-k">:</span>{fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>15px<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},theme<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>}},buttons<span class="pl-k">:</span>{zoomIn<span class="pl-k">:</span>{<span class="pl-en">onclick</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-en">mapZoom</span>(<span class="pl-c1">0.5</span>)},text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>},zoomOut<span class="pl-k">:</span>{<span class="pl-en">onclick</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-en">mapZoom</span>(<span class="pl-c1">2</span>)},text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-c1">28</span>}}};<span class="pl-smi">v</span>.<span class="pl-smi">splitPath</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">A-Za-z</span>]</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> $1 <span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ ,]</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>);<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">/</span>[a<span class="pl-k">-</span>zA<span class="pl-k">-</span><span class="pl-c1">Z</span>]<span class="pl-k">/</span>.<span class="pl-c1">test</span>(a[b])<span class="pl-k">||</span>(a[b]<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(a[b]));<span class="pl-k">return</span> a};<span class="pl-smi">v</span>.<span class="pl-smi">maps</span><span class="pl-k">=</span>{};<span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>.<span class="pl-en">topbutton</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-en">Eb</span>(a<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>,c,d,<span class="pl-smi">e</span>.<span class="pl-smi">r</span>,<span class="pl-smi">e</span>.<span class="pl-smi">r</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)};<span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>.<span class="pl-en">bottombutton</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-en">Eb</span>(a<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">1</span>,c,d,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">r</span>,<span class="pl-smi">e</span>.<span class="pl-smi">r</span>)};Ra<span class="pl-k">===</span>$a<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>topbutton<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bottombutton<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">$a</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>[a]<span class="pl-k">=</span><span class="pl-smi">ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>[a]});<span class="pl-smi">v</span>.<span class="pl-smi">Map</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">mapChart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span>,e<span class="pl-k">=</span><span class="pl-v">arguments</span>[d<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>],f<span class="pl-k">=</span>{endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,gridLineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span><span class="pl-c1">null</span>,tickPositions<span class="pl-k">:</span>[]},g,h<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">getOptions</span>().<span class="pl-smi">credits</span>;g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">series</span>;<span class="pl-smi">e</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-c1">null</span>;e<span class="pl-k">=</span><span class="pl-en">y</span>({chart<span class="pl-k">:</span>{panning<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xy<span class="pl-pds">&quot;</span></span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>map<span class="pl-pds">&quot;</span></span>},credits<span class="pl-k">:</span>{mapText<span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">h</span>.<span class="pl-smi">mapText</span>,<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-cce">\u00a9</span> &lt;a href=&quot;{geojson.copyrightUrl}&quot;&gt;{geojson.copyrightShort}&lt;/a&gt;<span class="pl-pds">&#39;</span></span>),mapTextFull<span class="pl-k">:</span><span class="pl-en">o</span>(<span class="pl-smi">h</span>.<span class="pl-smi">mapTextFull</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>{geojson.copyright}<span class="pl-pds">&quot;</span></span>)},xAxis<span class="pl-k">:</span>f,yAxis<span class="pl-k">:</span><span class="pl-en">y</span>(f,{reversed<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})},e,{chart<span class="pl-k">:</span>{inverted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,alignTicks<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}});<span class="pl-smi">e</span>.<span class="pl-smi">series</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line">g;<span class="pl-k">return</span> d<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">ga</span>(a,e,c)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">ga</span>(e,b)};<span class="pl-c1">K</span>.<span class="pl-smi">plotOptions</span>.<span class="pl-smi">heatmap</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">K</span>.<span class="pl-smi">plotOptions</span>.<span class="pl-smi">scatter</span>,{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,nullColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#F8F8F8<span class="pl-pds">&quot;</span></span>,dataLabels<span class="pl-k">:</span>{<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">point</span>.<span class="pl-c1">value</span>},inside<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,crop<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,overflow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,padding<span class="pl-k">:</span><span class="pl-c1">0</span>},marker<span class="pl-k">:</span><span class="pl-c1">null</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">null</span>,tooltip<span class="pl-k">:</span>{pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>{point.x}, {point.y}: {point.value}&lt;br/&gt;<span class="pl-pds">&quot;</span></span>},states<span class="pl-k">:</span>{normal<span class="pl-k">:</span>{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},hover<span class="pl-k">:</span>{halo<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,brightness<span class="pl-k">:</span><span class="pl-c1">0.2</span>}}});<span class="pl-c1">D</span>.<span class="pl-smi">heatmap</span><span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>,<span class="pl-en">y</span>(Kb,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>heatmap<span class="pl-pds">&quot;</span></span>,pointArrayMap<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>],hasPointSpecificOptions<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line">pointClass<span class="pl-k">:</span><span class="pl-en">$</span>(<span class="pl-c1">Z</span>,Ma),supportsDrilldown<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,getExtremesFromAll<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,directTouch<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,<span class="pl-v">arguments</span>);a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>;<span class="pl-smi">a</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span><span class="pl-en">o</span>(<span class="pl-smi">a</span>.<span class="pl-smi">pointRange</span>,<span class="pl-smi">a</span>.<span class="pl-smi">colsize</span><span class="pl-k">||</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rowsize</span><span class="pl-k">||</span><span class="pl-c1">1</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">xAxis</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">yAxis</span>,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,a),c)};<span class="pl-v">this</span>.<span class="pl-en">generatePoints</span>();<span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">colsize</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">rowsize</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,h<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>f,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">len</span>),f<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>f,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">len</span>),i<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">c</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>g,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">len</span>),g<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">c</span>.<span class="pl-en">translate</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>g,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">len</span>);<span class="pl-smi">e</span>.<span class="pl-smi">plotX</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">clientX</span><span class="pl-k">=</span>(h<span class="pl-k">+</span>f)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">e</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span>(i<span class="pl-k">+</span>g)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">e</span>.<span class="pl-smi">shapeType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">e</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(h,f),y<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(i,g),width<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(f<span class="pl-k">-</span>h),height<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g<span class="pl-k">-</span>i)}});<span class="pl-v">this</span>.<span class="pl-en">translateColors</span>();<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-smi">fill</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>})},drawPoints<span class="pl-k">:</span><span class="pl-c1">D</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawPoints</span>,animate<span class="pl-k">:</span><span class="pl-c1">T</span>,getBox<span class="pl-k">:</span><span class="pl-c1">T</span>,drawLegendSymbol<span class="pl-k">:</span><span class="pl-smi">bb</span>.<span class="pl-smi">drawRectangle</span>,</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getExtremes</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-smi">valueData</span>);<span class="pl-v">this</span>.<span class="pl-smi">valueMin</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMin</span>;<span class="pl-v">this</span>.<span class="pl-smi">valueMax</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">dataMax</span>;<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getExtremes</span>.<span class="pl-c1">call</span>(<span class="pl-v">this</span>)}}));Ma<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-smi">TrackerMixin</span><span class="pl-k">=</span>{<span class="pl-en">drawTrackerPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">cursor</span>,e<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>d},<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span>,d;c<span class="pl-k">&amp;&amp;!</span>d;)d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">point</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span>;<span class="pl-k">if</span>(d<span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>)<span class="pl-smi">d</span>.<span class="pl-en">onMouseOver</span>(a)};<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>)<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>.<span class="pl-smi">element</span>.<span class="pl-smi">point</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>.<span class="pl-smi">element</span>.<span class="pl-smi">point</span><span class="pl-k">=</span>a});<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasTracking</span>)<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">trackerGroups</span>,</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a[b]<span class="pl-k">&amp;&amp;</span>(a[b].<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,f).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-en">onTrackerMouseOut</span>(a)}).<span class="pl-en">css</span>(e),Wa))a[b].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,f)}),<span class="pl-smi">a</span>.<span class="pl-smi">_hasTracking</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">drawTrackerGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">trackByArea</span>,d<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">areaPath</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">graphPath</span>),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pointer</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">renderer</span>,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">snap</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tracker</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cursor</span>,l<span class="pl-k">=</span>j<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>j},<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">!==</span>a)<span class="pl-smi">a</span>.<span class="pl-en">onMouseOver</span>()},p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(192,192,192,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(da<span class="pl-k">?</span><span class="pl-c1">1.0E-4</span><span class="pl-k">:</span><span class="pl-c1">0.002</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>c)<span class="pl-k">for</span>(j<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">+</span><span class="pl-c1">1</span>;j<span class="pl-k">--</span>;)d[j]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(j<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,d[j<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>i,d[j<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>),(j<span class="pl-k">&amp;&amp;</span>d[j]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>j<span class="pl-k">===</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(j,<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,d[j<span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">+</span>i,d[j<span class="pl-k">-</span><span class="pl-c1">1</span>]);k<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>({d<span class="pl-k">:</span>d})<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tracker</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">path</span>(d).<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>,visibility<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span>p,fill<span class="pl-k">:</span>c<span class="pl-k">?</span>p<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>i),zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>),<span class="pl-en">n</span>([<span class="pl-smi">a</span>.<span class="pl-smi">tracker</span>,<span class="pl-smi">a</span>.<span class="pl-smi">markerGroup</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,m).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">g</span>.<span class="pl-en">onTrackerMouseOut</span>(a)}).<span class="pl-en">css</span>(l);<span class="pl-k">if</span>(Wa)<span class="pl-smi">a</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,m)}))}};<span class="pl-k">if</span>(<span class="pl-c1">D</span>.<span class="pl-smi">column</span>)<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Ma</span>.<span class="pl-smi">drawTrackerPoint</span>;<span class="pl-k">if</span>(<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>)<span class="pl-c1">D</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">=</span><span class="pl-smi">Ma</span>.<span class="pl-smi">drawTrackerPoint</span>;<span class="pl-k">if</span>(<span class="pl-c1">D</span>.<span class="pl-smi">scatter</span>)<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">=</span><span class="pl-smi">Ma</span>.<span class="pl-smi">drawTrackerPoint</span>;<span class="pl-en">q</span>(<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">setItemEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>;(c<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-smi">f</span>.<span class="pl-c1">options</span>.<span class="pl-smi">itemHoverStyle</span>)}).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span>d<span class="pl-k">:</span>e);<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()}).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">setVisible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">setVisible</span>()},b<span class="pl-k">=</span>{browserEvent<span class="pl-k">:</span>b};<span class="pl-smi">a</span>.<span class="pl-smi">firePointEvent</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>legendItemClick<span class="pl-pds">&quot;</span></span>,b,c)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>legendItemClick<span class="pl-pds">&quot;</span></span>,b,c)})},<span class="pl-en">createCheckboxForItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span><span class="pl-k">=</span><span class="pl-en">ba</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>checkbox<span class="pl-pds">&quot;</span></span>,checked<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">selected</span>,defaultChecked<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">selected</span>},<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">itemCheckboxStyle</span>,<span class="pl-v">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>);<span class="pl-en">M</span>(<span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">G</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">||</span>a,<span class="pl-s"><span class="pl-pds">&quot;</span>checkboxClick<span class="pl-pds">&quot;</span></span>,{checked<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">target</span>.<span class="pl-c1">checked</span>,item<span class="pl-k">:</span>a},<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-c1">select</span>()})})}});<span class="pl-c1">K</span>.<span class="pl-smi">legend</span>.<span class="pl-smi">itemStyle</span>.<span class="pl-smi">cursor</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>;<span class="pl-en">q</span>(<span class="pl-smi">ga</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">showResetZoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">lang</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">resetZoomButton</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">theme</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">states</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">relativeTo</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>plotBox<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">resetZoomButton</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">button</span>(<span class="pl-smi">b</span>.<span class="pl-smi">resetZoom</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">zoomOut</span>()},d,e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">hover</span>).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">position</span>.<span class="pl-c1">align</span>,title<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">resetZoomTitle</span>}).<span class="pl-c1">add</span>().<span class="pl-c1">align</span>(<span class="pl-smi">c</span>.<span class="pl-smi">position</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,f)},<span class="pl-en">zoomOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-en">G</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>selection<span class="pl-pds">&quot;</span></span>,{resetSelection<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">zoom</span>()})},<span class="pl-en">zoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointer</span>,d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,e;<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">resetSelection</span><span class="pl-k">?</span><span class="pl-en">n</span>(<span class="pl-v">this</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">zoom</span>()})<span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">axis</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isXAxis</span>;<span class="pl-k">if</span>(c[h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoomX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoomY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>c[h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pinchX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pinchY<span class="pl-pds">&quot;</span></span>])b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">zoom</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>,<span class="pl-smi">a</span>.<span class="pl-smi">max</span>),<span class="pl-smi">e</span>.<span class="pl-smi">displayBtn</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">resetZoomButton</span>;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span>e)<span class="pl-v">this</span>.<span class="pl-en">showResetZoom</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">aa</span>(e))<span class="pl-v">this</span>.<span class="pl-smi">resetZoomButton</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">destroy</span>();b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">redraw</span>(<span class="pl-en">o</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">animation</span>,a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">animation</span>,<span class="pl-v">this</span>.<span class="pl-smi">pointCount</span><span class="pl-k">&lt;</span><span class="pl-c1">100</span>))},<span class="pl-en">pan</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span>,e;d<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()});<span class="pl-en">n</span>(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>xy<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>]<span class="pl-k">:</span>[<span class="pl-c1">1</span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>c[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>][<span class="pl-c1">0</span>],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">horiz</span>,h<span class="pl-k">=</span>a[d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartY<span class="pl-pds">&quot;</span></span>],d<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseDownX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseDownY<span class="pl-pds">&quot;</span></span>,i<span class="pl-k">=</span>c[d],k<span class="pl-k">=</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getExtremes</span>(),l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">toValue</span>(i<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line">h,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>k,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">toValue</span>(i<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">-</span>h,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>k,i<span class="pl-k">=</span>i<span class="pl-k">&gt;</span>h;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">||</span>l<span class="pl-k">&gt;</span><span class="pl-en">I</span>(<span class="pl-smi">j</span>.<span class="pl-smi">dataMin</span>,<span class="pl-smi">j</span>.<span class="pl-smi">min</span>))<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>i<span class="pl-k">||</span>k<span class="pl-k">&lt;</span><span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">dataMax</span>,<span class="pl-smi">j</span>.<span class="pl-smi">max</span>)))<span class="pl-smi">b</span>.<span class="pl-en">setExtremes</span>(l,k,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pan<span class="pl-pds">&quot;</span></span>}),e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;c[d]<span class="pl-k">=</span>h});e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">redraw</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">L</span>(<span class="pl-smi">c</span>.<span class="pl-smi">container</span>,{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span>})}});<span class="pl-en">q</span>(<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">select</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span><span class="pl-en">o</span>(a,<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">selected</span>);<span class="pl-smi">c</span>.<span class="pl-en">firePointEvent</span>(a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>,{accumulate<span class="pl-k">:</span>b},<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>[<span class="pl-en">za</span>(c,<span class="pl-smi">d</span>.<span class="pl-c1">data</span>)]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>;<span class="pl-smi">c</span>.<span class="pl-en">setState</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">||</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-en">getSelectedPoints</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">selected</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">!==</span>c)<span class="pl-smi">a</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>[<span class="pl-en">za</span>(a,<span class="pl-smi">d</span>.<span class="pl-c1">data</span>)]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>)})})},<span class="pl-en">onMouseOver</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tooltip</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hoverPoint</span>;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">!==</span>c)<span class="pl-smi">c</span>.<span class="pl-en">onMouseOver</span>();<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">!==</span><span class="pl-v">this</span>)<span class="pl-smi">f</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOver<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">shared</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">refresh</span>(<span class="pl-v">this</span>,a),<span class="pl-v">this</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span>b))<span class="pl-smi">d</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">=</span><span class="pl-v">this</span>},<span class="pl-en">onMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverPoints</span>;<span class="pl-v">this</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOut<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||</span><span class="pl-en">za</span>(<span class="pl-v">this</span>,b)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.<span class="pl-en">setState</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">importEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-smi">hasImportedEvents</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-v">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">options</span>.<span class="pl-smi">point</span>,<span class="pl-v">this</span>.<span class="pl-c1">options</span>).<span class="pl-smi">events</span>,b;<span class="pl-v">this</span>.<span class="pl-smi">events</span><span class="pl-k">=</span>a;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-en">M</span>(<span class="pl-v">this</span>,b,a[b]);<span class="pl-v">this</span>.<span class="pl-smi">hasImportedEvents</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">setState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotX</span>),d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">plotY</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">states</span>,g<span class="pl-k">=</span><span class="pl-c1">X</span>[<span class="pl-smi">e</span>.<span class="pl-c1">type</span>].<span class="pl-smi">marker</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,h<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">g</span>.<span class="pl-smi">enabled</span>,i<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">states</span>[a],k<span class="pl-k">=</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stateMarkerGraphic</span>,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span>{},m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">halo</span>,o,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;o<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">pointAttr</span>[a]<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">pointAttr</span>[a];<span class="pl-k">if</span>(<span class="pl-k">!</span>(a<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">state</span><span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-c1">selected</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>f[a]<span class="pl-k">&amp;&amp;</span>f[a].<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">||</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span>[a]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span>[a].<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">graphic</span>)g<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-smi">graphic</span>.<span class="pl-smi">symbolName</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-smi">r</span>,<span class="pl-v">this</span>.<span class="pl-smi">graphic</span>.<span class="pl-en">attr</span>(<span class="pl-en">y</span>(o,g<span class="pl-k">?</span>{x<span class="pl-k">:</span>c<span class="pl-k">-</span>g,y<span class="pl-k">:</span>d<span class="pl-k">-</span>g,width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>g,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>g}<span class="pl-k">:</span>{})),j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-en">hide</span>();<span class="pl-k">else</span>{<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span>i)<span class="pl-k">if</span>(g<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">radius</span>,l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">symbol</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">symbol</span>,j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">currentSymbol</span><span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">destroy</span>()),j)j[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({x<span class="pl-k">:</span>c<span class="pl-k">-</span>g,y<span class="pl-k">:</span>d<span class="pl-k">-</span>g});<span class="pl-k">else</span> <span class="pl-k">if</span>(l)<span class="pl-smi">e</span>.<span class="pl-smi">stateMarkerGraphic</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">symbol</span>(l,c<span class="pl-k">-</span>g,d<span class="pl-k">-</span>g,<span class="pl-c1">2</span><span class="pl-k">*</span>g,<span class="pl-c1">2</span><span class="pl-k">*</span>g).<span class="pl-en">attr</span>(o).<span class="pl-c1">add</span>(<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span>),</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-smi">currentSymbol</span><span class="pl-k">=</span>l;<span class="pl-k">if</span>(j)j[a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">isInsidePlot</span>(c,d,<span class="pl-smi">m</span>.<span class="pl-smi">inverted</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](),<span class="pl-smi">j</span>.<span class="pl-smi">element</span>.<span class="pl-smi">point</span><span class="pl-k">=</span><span class="pl-v">this</span>}<span class="pl-k">if</span>((c<span class="pl-k">=</span>f[a]<span class="pl-k">&amp;&amp;</span>f[a].<span class="pl-smi">halo</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">size</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>n)<span class="pl-smi">e</span>.<span class="pl-smi">halo</span><span class="pl-k">=</span>n<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>().<span class="pl-c1">add</span>(<span class="pl-smi">m</span>.<span class="pl-smi">seriesGroup</span>);<span class="pl-smi">n</span>.<span class="pl-en">attr</span>(<span class="pl-en">q</span>({fill<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fill-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">opacity</span>,zIndex<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>))[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">haloPath</span>(<span class="pl-smi">c</span>.<span class="pl-c1">size</span>)})}<span class="pl-k">else</span> n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-en">attr</span>({d<span class="pl-k">:</span>[]});<span class="pl-v">this</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>a}},<span class="pl-en">haloPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">series</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getPlotBox</span>(),e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">inverted</span>,f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.<span class="pl-smi">plotX</span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">symbols</span>.<span class="pl-en">circle</span>(<span class="pl-smi">d</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line">(e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-smi">plotY</span><span class="pl-k">:</span>f)<span class="pl-k">-</span>a,<span class="pl-smi">d</span>.<span class="pl-smi">translateY</span><span class="pl-k">+</span>(e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">len</span><span class="pl-k">-</span>f<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">plotY</span>)<span class="pl-k">-</span>a,a<span class="pl-k">*</span><span class="pl-c1">2</span>,a<span class="pl-k">*</span><span class="pl-c1">2</span>)}});<span class="pl-en">q</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">onMouseOver</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverSeries</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">!==</span><span class="pl-v">this</span>)<span class="pl-smi">b</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-v">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span>.<span class="pl-smi">mouseOver</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">G</span>(<span class="pl-v">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOver<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">=</span><span class="pl-v">this</span>},<span class="pl-en">onMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>;<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-v">this</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">events</span>.<span class="pl-smi">mouseOut</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">G</span>(<span class="pl-v">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOut<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">stickyTracking</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">shared</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">hide</span>();<span class="pl-v">this</span>.<span class="pl-en">setState</span>()},<span class="pl-en">setState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">graph</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">states</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">state</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>a,<span class="pl-k">!</span>(d[a]<span class="pl-k">&amp;&amp;</span>d[a].<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d[a].<span class="pl-smi">lineWidth</span><span class="pl-k">||</span>e<span class="pl-k">+</span>(d[a].<span class="pl-smi">lineWidthPlus</span><span class="pl-k">||</span><span class="pl-c1">0</span>)),c<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">dashstyle</span>))){a<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>e};<span class="pl-k">for</span>(<span class="pl-smi">c</span>.<span class="pl-en">attr</span>(a);<span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>zoneGraph<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b];)<span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>zoneGraph<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b].<span class="pl-en">attr</span>(a),b<span class="pl-k">+=</span><span class="pl-c1">1</span>}},<span class="pl-en">setVisible</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">legendItem</span>,f,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span>,h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">visible</span>;f<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">userOptions</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span>a<span class="pl-k">===</span>x<span class="pl-k">?</span><span class="pl-k">!</span>h<span class="pl-k">:</span>a)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>;<span class="pl-en">n</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tracker<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(c[a])c[a][f]()});<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">===</span>c<span class="pl-k">||</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">hoverPoint</span>.<span class="pl-smi">series</span>)<span class="pl-k">===</span>c)<span class="pl-smi">c</span>.<span class="pl-en">onMouseOut</span>();e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">legend</span>.<span class="pl-en">colorizeItem</span>(c,a);<span class="pl-smi">c</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>)<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">linkedSeries</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">setVisible</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">if</span>(g)<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">redraw</span>();<span class="pl-en">G</span>(c,f)},<span class="pl-en">show</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-en">setVisible</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">hide</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-en">setVisible</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">select</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span>a<span class="pl-k">===</span>x<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-c1">selected</span><span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-smi">checkbox</span>)<span class="pl-v">this</span>.<span class="pl-smi">checkbox</span>.<span class="pl-c1">checked</span><span class="pl-k">=</span>a;<span class="pl-en">G</span>(<span class="pl-v">this</span>,a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>)},drawTracker<span class="pl-k">:</span><span class="pl-smi">Ma</span>.<span class="pl-smi">drawTrackerGraph</span>});<span class="pl-en">q</span>(v,{Color<span class="pl-k">:</span><span class="pl-c1">N</span>,<span class="pl-c1">Point</span><span class="pl-k">:</span><span class="pl-c1">Z</span>,Tick<span class="pl-k">:</span>Qa,Renderer<span class="pl-k">:</span>Ra,<span class="pl-c1">SVGElement</span><span class="pl-k">:</span><span class="pl-c1">O</span>,SVGRenderer<span class="pl-k">:</span>ma,arrayMin<span class="pl-k">:</span>Ua,arrayMax<span class="pl-k">:</span>Ha,charts<span class="pl-k">:</span><span class="pl-c1">U</span>,dateFormat<span class="pl-k">:</span>Oa,error<span class="pl-k">:</span><span class="pl-c1">S</span>,format<span class="pl-k">:</span>Ba,pathAnim<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-en">getOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">K</span>},hasBidiBug<span class="pl-k">:</span>Mb,isTouchDevice<span class="pl-k">:</span>Gb,<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">K</span>,a);<span class="pl-en">vb</span>();<span class="pl-k">return</span> <span class="pl-c1">K</span>},addEvent<span class="pl-k">:</span><span class="pl-c1">M</span>,removeEvent<span class="pl-k">:</span><span class="pl-c1">W</span>,createElement<span class="pl-k">:</span>ba,discardElement<span class="pl-k">:</span>Pa,css<span class="pl-k">:</span><span class="pl-c1">L</span>,each<span class="pl-k">:</span>n,map<span class="pl-k">:</span>Ea,merge<span class="pl-k">:</span>y,splat<span class="pl-k">:</span>qa,stableSort<span class="pl-k">:</span>db,</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line">extendClass<span class="pl-k">:</span>$,pInt<span class="pl-k">:</span><span class="pl-c1">E</span>,svg<span class="pl-k">:</span>da,canvas<span class="pl-k">:</span>ja,vml<span class="pl-k">:</span><span class="pl-k">!</span>da<span class="pl-k">&amp;&amp;!</span>ja,product<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Highmaps<span class="pl-pds">&quot;</span></span>,version<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>4.2.2<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> v});</td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>


    </div>
  </div>

    </div>

        <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2016 <span title="1.82461s from github-fe-1e914f7.cp1-iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id="ajax-error-message" class="ajax-error-message flash flash-error">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"></path></svg>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
      </button>
      You can't perform that action at this time.
    </div>


      
      <script crossorigin="anonymous" integrity="sha256-iEca8f7ED/lBjvvi3dFbaJavjXcvgXkATCVN/8JepJA=" src="https://assets-cdn.github.com/assets/frameworks-88471af1fec40ff9418efbe2ddd15b6896af8d772f8179004c254dffc25ea490.js"></script>
      <script async="async" crossorigin="anonymous" integrity="sha256-DuxGmfeMMuI8OEYt6MzjINPuMwidgQpY+B5ltvb8fv4=" src="https://assets-cdn.github.com/assets/github-0eec4699f78c32e23c38462de8cce320d3ee33089d810a58f81e65b6f6fc7efe.js"></script>
      
      
      
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"></path></svg>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
    <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
    </button>
  </div>
</div>

  </body>
</html>

